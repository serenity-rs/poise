searchState.loadedDescShard("poise", 3, "The Stage instance is visible to only guild members.\nThe id of a guild’s custom emoji.\nA message reply.\nSort forum posts by activity.\nDisplay posts as a list.\nA member which is having its permission overwrites edited.\nAn indicator that a member joined the guild.\nA representation of a message over a guild’s text …\nRich Presence activity information.\nDiscord docs.\nRich Presence application information.\nDescribes extra features of the message.\nA representation of a reaction to a message.\nReference data sent with crossposted messages.\nDifferentiates between regular and different types of …\nA helper class returned by <code>ChannelId::messages_iter</code>\nThe unicode character of the emoji.\nAn indicator that the channel is a <code>NewsChannel</code>.\nAn indicator that the channel is a news thread <code>GuildChannel</code>…\nAn indicator that someone has boosted the guild.\nAn indicator that the guild has reached nitro tier 1\nAn indicator that the guild has reached nitro tier 2\nAn indicator that the guild has reached nitro tier 3\nNo default has been set for forum channel.\nA container for any partial channel.\nA partial guild channel.\nA channel-specific permission overwrite for a member or …\nThe type of edit being made to a Channel’s permissions.\nAn indicator that a message was pinned by the author.\nA poll that has been attached to a <code>Message</code>.\nA possible answer for a <code>Poll</code>.\nThe count of a single <code>PollAnswer</code>’s results.\nRepresents the different layouts that a <code>Poll</code> may have.\nA piece of data used in mutliple parts of the <code>Poll</code> …\nThe “Partial Emoji” attached to a <code>PollMedia</code> model.\nThe model for the results of a <code>Poll</code>.\nA private channel to another <code>User</code> (Direct Message). No …\nAn indicator that the channel is a <code>PrivateChannel</code>.\nA Direct Message text channel with another user.\nAn indicator that the channel is a private thread …\nThe Stage instance is visible publicly. (deprecated)\nAn indicator that the channel is a public thread …\nAn emoji reaction to a message.\nThe type of a <code>Reaction</code> sent.\nA list of types a reaction can be.\nA regular message.\nA role which is having its permission overwrites edited.\nDiscord docs\nThe sort order for threads in a forum.\nAn indicator that the channel is a stage <code>GuildChannel</code>.\nDiscord docs.\nSee <code>StageInstance::privacy_level</code>.\nAn indicator that the channel is a text <code>GuildChannel</code>.\nMessage sent to inform users that a thread was created.\nA thread data.\nA thread start message.\nA response to getting several threads channels.\nA reaction with a twemoji.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nThe video quality mode for a voice channel.\nAn indicator that the channel is a voice <code>GuildChannel</code>.\nSent with Rich Presence-related chat embeds.\nSent with Rich Presence-related chat embeds.\nIf the message is an Interaction or application-owned …\nThe set of applied tags.\nThe last time the thread’s archive status was last …\nWhether the thread is archived.\nAn vector of the files attached to a message.\nInformation about the author of the embed.\nThe user that sent the message.\nDuration in minutes to automatically archive the thread …\nThe set of available tags.\nThe bitrate of the channel.\nIndicates if this was a super reaction.\nColours used for the super reaction animation.\nThe Id of the <code>Channel</code> that the message was sent to.\nID of the originating message’s channel.\nThe source news channel\nThe <code>Channel</code> of the associated <code>Message</code>.\nThe Id of the associated stage channel.\nThe colour code of the embed.\nThe components of this message\nThe content of the message.\nThe attachment’s media type.\nThe amount of the type of reaction that have been sent for …\nA breakdown of what reactions were from regular reactions …\nID of the embed’s image asset.\nTimestamp when the thread was created.\nDefault duration for newly created threads, in minutes, to …\nThe default forum layout view used to display posts in a …\nThe emoji to show in the add reaction button\nThe default sort order type used to order posts\nThe initial <code>rate_limit_per_user</code> to set on newly created …\nDescription for the file (max 1024 characters).\nThe description of the embed.\nApplication’s description.\nWhether or not Stage Discovery is disabled (deprecated).\nThe duration of the audio file (present if …\nThe timestamp of the last time the message was updated, if …\nArray of embeds sent with the message.\nThe reactive emoji used.\nThe emoji to display next to the tag.\nWhether this attachment is ephemeral.\nWhen sending, whether to error if the referenced message …\nThe array of fields.\nThe filename of the file that was uploaded. This is …\nExtra information about the channel\nBit flags describing extra features of the message.\nFooter information for the embed.\nThe Id of the guild the channel is located in.\nThe channel guild Id.\nThe Id of the <code>Guild</code> that the message was sent in. This …\nID of the originating message’s guild.\nID of the guild containing the channel.\nThe optional Id of the <code>Guild</code> where the reaction was sent.\nThe guild Id of the associated stage channel.\nThe id of the scheduled event for this Stage instance.\nWhether there are potentially more threads that could be …\nIf the attachment is an image, then the height of the …\nThe height of the image.\nThe height of the thumbnail in pixels.\nThe height of the video in pixels.\nID of the application’s icon.\nThe URL of the author icon.\nThe URL of the footer icon.\nThe unique ID given to this attachment.\nThe unique Id of the channel.\nThe channel Id.\nThe unique Id of the message. Can be used to calculate the …\nID of the application.\nID of the channel.\nThe channel Id.\nThe unique Id of the private channel.\nThe Id of the stage instance.\nThe id of the tag.\nImage information of the embed.\nIndicator of whether the field should display as inline.\nWhether non-moderators can add other non-moderators to a …\nWhether this notification is for a renewal rather than a …\nThe type of the embed. For embeds not generated by Discord…\nThe type of the channel.\nThe channel type.\nIndicator of the type of message this is, i.e. whether it …\nKind of message activity.\nThe kind of channel\nThe channel type.\nIndicator of the type of channel this is.\nThe Id of the last message sent in the channel.\nThe Id of the last message sent.\nThe timestamp of the time a pin was most recently made.\nTimestamp of the last time a <code>Message</code> was pinned.\nWhen a thread is locked, only users with <code>MANAGE_THREADS</code> …\nIndicator of whether the current user has sent this type …\nIndicator of whether the current user has sent the type of …\nThread member object for the current user, if they have …\nA partial amount of data about the user’s member data\nThe optional object of the member which added the reaction.\nAn approximate count of users in a thread, stops counting …\nA thread member for each returned thread the current user …\nChannels specifically mentioned in this message.\nIndicator of whether the message mentions everyone.\nArray of <code>Role</code>s’ Ids mentioned in the message.\nArray of users mentioned in the message.\nThe Id of the user who sent the message which this reacted …\nAn approximate count of messages in the thread.\nID of the originating message.\nThe Id of the <code>Message</code> that was reacted to.\nReference data sent with crossposted messages.\nWhether this tag can only be added to or removed from …\nThe name of the author.\nThe name of the field.\nThe name of the provider.\nThe name of the channel.\nName of the application.\nThe name of the channel\nThe channel name.\nThe name of the tag (0-20 characters).\nNon-repeating number used for ensuring message order.\nUsed to tell if the channel is not safe for work.\nThe Id of the user who created this channel\nThe Id of the parent category for a channel, or of the …\nThe channel category Id,  or the parent text channel Id …\nThe Id of the parent category for a channel, or of the …\n<code>party_id</code> from a Rich Presence event.\nPermission overwrites for <code>Member</code>s and for <code>Role</code>s.\nComputed permissions for the invoking user in the channel, …\nThe channel permissions.\nIndicator of whether the message is pinned.\nA poll that may be attached to a message.\nThe position of the channel.\nA generally increasing integer (there may be gaps or …\nThe privacy level of the Stage instance.\nProvider information for the embed.\nA proxied URL of the author icon.\nA proxied URL of the footer icon.\nThe proxy URL.\nA proxied URL of the image.\nA proxied URL of the thumbnail.\nA proxied URL of the thumbnail.\nA rate limit that applies per user and excludes bots.\nThe type of reaction.\nThe type of reaction.\nArray of reactions performed on the message.\nThe recipient to the private channel.\nThe message that was replied to using this message.\nThe results of the Poll.\nData of the role subscription purchase or renewal that …\nThe id of the sku and listing that the user is subscribed …\nThe region override.\nThe size of the file in bytes.\nThe status of a voice channel.\nArray of message sticker item objects.\nThe associated text with the footer.\nThe thread that was started from this message, includes …\nThe thread metadata.\nThe thread metadata.\nThe threads channels.\nThumbnail information of the embed.\nThe name of the tier that the user is subscribed to.\nTimestamp information.\nInitial message creation timestamp, calculated from its Id.\nThe title of the embed.\nThe topic of the channel.\nThe topic of the stage instance.\nThe number of messages ever sent in a thread, it’s …\nThe cumulative number of months that the user has been …\nIndicator of whether the command is to be played back via …\nThe URL of the uploaded attachment.\nThe URL of the embed.\nThe URL of the author.\nSource URL of the image.\nThe URL of the provider.\nThe source URL of the thumbnail.\nThe source URL of the video.\nThe Id of the <code>User</code> that sent the reaction.\nThe maximum number of members allowed in the channel.\nThe value of the field.\nThe embed’s video information.\nThe video quality mode for a voice channel.\nList of bytes representing a sampled waveform (present if …\nThe Id of the webhook that sent this message, if one did.\nThe created webhook ID in the target channel\nIf the attachment is an image, then the width of the image …\nThe width of the image.\nThe width of the thumbnail in pixels.\nThe width of the video in pixels.\nWhether the emoji is animated.\nThe Id of the custom <code>Emoji</code>.\nThe name of the custom emoji. This is primarily used for …\nA utility struct to help with working with the basic …\nInformation about a connection between the current user …\nThe visibility of a user connection on a user’s profile.\nVisible to everyone\nInvisible to everyone except the user themselves\nVariant value is unknown.\nWhether friend sync is enabled for this connection.\nThe ID of the account on the other side of this connection.\nA list of partial guild <code>Integration</code>s that use this …\nThe service that this connection represents (e.g. twitch, …\nThe username of the account on the other side of this …\nWhether this connection has been revoked and is no longer …\nWhether activities related to this connection will be …\nWhether this connection has a corresponding third party …\nWhether this connection has been verified and the user has …\nThe visibility of this connection.\nWhen attempting to delete below or above the minimum or …\nAn indication that you cannot crosspost a <code>Message</code>.\nWhen attempting to edit a voice message.\nAn indication that a <code>Channel</code> could not be found by Id in …\nWhen attempting to delete a number of days’ worth of …\nWhen attempting to delete a built in nitro sticker instead …\nWhen attempting to send a message with over 10 embeds.\nIndicates that the textual content of an embed exceeds the …\nAn error returned from the <code>model</code> module.\nAn indication that a <code>Guild</code> could not be found by Id in the …\nIndicates that there are hierarchy problems restricting an …\nAn indicator that the <code>ChannelType</code> cannot perform an action.\nIndicates that you do not have the required permissions to …\nAn indicator that the current user cannot perform an …\nAn indicator that an item is missing from the <code>Cache</code>, and …\nAn indication that a <code>Member</code> could not be found by Id in …\nAn indication that a <code>Message</code> has already been crossposted, …\nIndicates that a <code>Message</code>s content was too long and will …\nIndicates that the current user is attempting to Direct …\nIndicates that the webhook name is over the 100 characters …\nIndicates that the webhook name is under the 2 characters …\nIndicates that the sticker file is missing.\nIndicates that the webhook token is missing.\nIndicates that the bot is not author of the message. This …\nAn indication that a <code>Role</code> could not be found by Id in the …\nWhen attempting to send a message with over 3 stickers.\nIndicates that a member, role or channel from the wrong …\nWhich permissions the bot had\nWhich permissions were required for the operation\nA <code>Rule</code> was triggered and an action was executed.\nRequires <code>GatewayIntents::AUTO_MODERATION_EXECUTION</code>.\nA <code>Rule</code> was created.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> was deleted.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> has been updated.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Channel</code> was created.\nEvent data for the channel creation event.\nA <code>Channel</code> has been deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe pins for a <code>Channel</code> have been updated.\nRequires <code>GatewayIntents::GUILDS</code> or …\nA <code>Channel</code> has been updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe permissions of an <code>Command</code> was changed.\nRequires no gateway intents.\nA user subscribed to a SKU.\nRequires no gateway intents.\nA user’s entitlement was deleted by Discord, or refunded.\nRequires no gateway intents.\nA user’s entitlement was updated or renewed.\nRequires no gateway intents.\nEvent received over a websocket connection\nDiscord docs.\nRequires <code>GatewayIntents::GUILD_MODERATION</code> and …\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA member’s roles have changed\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nRequires no gateway intents.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA scheduled event was created.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was deleted.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was updated.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has subscribed to a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has unsubscribed from a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA <code>Sticker</code> was created, updated, or deleted\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA guild integration was created\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nA guild integration was deleted\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nA guild integration was updated\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nAn interaction was created.\nRequires no gateway intents.\nWhether the session can be resumed.\nAn <code>Invite</code> was created.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nAn <code>Invite</code> was deleted.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nA user has voted on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA user has removed a previous vote on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA message has been edited, either by the user or the system\nRequires <code>GatewayIntents::GUILD_MESSAGES</code>.\nA member’s presence state (or username or avatar) has …\nRequires <code>GatewayIntents::GUILD_PRESENCES</code>.\nThe presence list of the user’s friends should be …\nNot officially documented.\nA reaction was added to a message.\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nA reaction was removed to a message.\nA request was issued to remove all <code>Reaction</code>s from a <code>Message</code>…\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nSent when a bot removes all instances of a given emoji …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nThe first event in a connection, containing the initial …\nThe “Ready” event, containing initial ready cache\nThe connection has successfully resumed after a disconnect.\nRequires no gateway intents.\nA stage instance was created.\nRequires <code>GatewayIntents::GUILDS</code>.\nA stage instance was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nA stage instance was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA thread was created or the current user was added to a …\nRequires <code>GatewayIntents::GUILDS</code>.\nA thread was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe current user gains access to a channel.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe <code>ThreadMember</code> object for the current user is updated.\nRequires <code>GatewayIntents::GUILDS</code>, and, to receive this …\nAnyone is added to or removed from a thread.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA thread was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA user is typing; considered to last 5 seconds\nRequires <code>GatewayIntents::GUILD_MESSAGE_TYPING</code> or …\nAn event type not covered by the above\nUpdate to the logged-in user’s information\nSent when properties about the current bot’s user change.\nFired when the status of a Voice Channel changes.\nRequires <code>GatewayIntents::GUILDS</code>.\nVoice server information is available\nRequires no gateway intents.\nA member’s voice state has changed\nRequires <code>GatewayIntents::GUILD_VOICE_STATES</code>.\nA webhook for a channel was updated in a <code>Guild</code>.\nRequires <code>GatewayIntents::GUILD_WEBHOOKS</code>.\nThe users who were added to the thread.\nThe channel that was created.\nWhether or not the invite is temporary (invited users will …\nID of the channel.\nThe parent channel Id whose threads are being synced. If …\nTotal number of expected chunks for this response.\nChunk index in the expected chunks for this response (0 &lt;= …\nUnique invite code.\nTime at which the invite was created.\nGuildUpdateEvent doesn’t have GuildCreate’s extra …\nID of the guild.\nGuild of the invite.\nID of the guild.\nThe guild Id.\nThe id of the Guild.\nThe id of the thread.\nUser that created the invite.\nHow long the invite is valid for (in seconds).\nMaximum number of times the invite can be used.\nMember who started typing if this happened in a guild.\nThe approximate number of members in the thread, capped at …\nSet of guild members.\nAll thread member objects from the synced threads for the …\nNonce used in the …\nWhen passing an invalid ID to …\nWhen passing true to …\nThe ids of the users who were removed from the thread.\nEmbedded application to open for this voice channel …\nType of target for this voice channel invite.\nUser whose stream to display for this voice channel stream …\nthey’re assigned a role).\nAll active threads in the given channels that the current …\nTimestamp of when the user started typing.\nID of the user.\nHow many times the invite has been used (always will be 0).\nRepresentation of an activity that a <code>User</code> is performing.\nThe assets for an activity.\nDiscord docs.\nRepresentation of an emoji used in a custom status\nA set of flags defining what is in an activity’s payload.\nInformation about an activity’s party.\nSecrets for an activity.\nTimestamps of when a user started and/or is ending their …\nDiscord docs.\nA representation of the data retrieved from the bot …\nInformation detailing the current active status of a <code>User</code>.\nAn indicator that the user is competing somewhere.\nAn indicator that the user uses custom statuses\nA representation of the data retrieved from the gateway …\nGateway Intents will limit the events your bot will …\nAn indicator that the user is listening to something.\nAn indicator that the user is playing a game.\nInformation detailing the current online status of a <code>User</code>.\nInformation about the user of a <code>Presence</code> event.\nAn initial set of information given after IDENTIFYing to …\nInformation describing how many gateway sessions you can …\nAn indicator that the user is streaming to a service.\nVariant value is unknown.\nAn indicator that the user is watching something.\n<code>User</code>’s current activities.\nWhether this emoji is animated.\nContains id and flags\nThe ID of the application for the activity.\nImages for the presence and their texts.\nThe buttons of this activity.\nThe devices a user are currently active on, if available.\nUnix timestamp (in milliseconds) of when the activity was …\nWhat the user is doing.\nEmoji currently used in custom status\nActivity flags describing what the payload includes.\nThe <code>GuildId</code> the presence update is coming from.\nGuilds the user is in\nThe ID of the party.\nThe id of the emoji.\nWhether or not the activity is an instanced game session.\nThe secret for joining a party.\nThe type of activity being performed\nThe text shown on the button.\nThe ID for a large asset of the activity, usually a …\nText displayed when hovering over the large image of the …\nThe secret for a specific instanced match.\nThe number of identify requests allowed per 5 seconds.\nThe name of the activity.\nThe name of the emoji.\nInformation about the user’s current party.\nThe number of sessions that you can still initiate within …\nThe number of milliseconds until the ratelimit period …\nGateway URL for resuming connections\nSecrets for Rich Presence joining and spectating.\nUsed for resuming connections\nInformation describing how many gateway sessions you can …\nShard information associated with this session, if sent …\nThe number of shards that is recommended to be used by the …\nUsed to show the party’s current and maximum size.\nThe ID for a small asset of the activity, usually a …\nText displayed when hovering over the small image of the …\nThe secret for spectating an activity.\nThe user’s current party status.\nThe user’s online status.\nUnix timestamps for the start and/or end times of the …\nThe total number of session starts within the ratelimit …\nThe gateway to connect to.\nThe Stream URL if <code>Self::kind</code> is <code>ActivityType::Streaming</code>.\nThe url opened when clicking the button.\nThe gateway to connect to.\nData about the associated user.\nInformation about the user including email\nAPI version\nThe <code>Guild</code> AFK timeout length.\nThe guild is age restricted.\nReceive notifications for everything.\nScan messages sent by all members.\nA representation of a banning of a user.\nThe response from <code>GuildId::bulk_ban</code>.\nA custom emoji.\nThe nsfw level is not specified.\nDefault message notification level for a guild.\nMFA is enabled.\nRepresents a custom guild emoji, which can either be …\nThe guild is considered as explicit.\nSetting used to filter explicit messages from members.\nInformation about a Discord guild, such as channels, …\nVariant of <code>Guild</code> returned from <code>Http::get_guilds</code>.\nFlags for a guild member.\nPreview <code>Guild</code> information.\nRepresentation of the number of members that would be …\nA channel shown in the <code>GuildWelcomeScreen</code>.\nA <code>GuildWelcomeScreen</code> emoji.\nInformation relating to a guild’s welcome screen.\nA <code>Guild</code> widget.\nMust also be a member of the guild for longer than 10 …\nMust have a verified phone on the user’s Discord account.\nVarious information about integrations.\nIntegration account object.\nIntegration application object.\nThe behavior once the integration expires.\nMust have a verified email on the user’s Discord account.\nMust also be a registered user on Discord for longer than …\nInformation about a member of a guild.\nA helper class returned by <code>GuildId::members_iter</code>\nReceive only mentions.\nMulti-Factor Authentication level for guild moderators.\nDon’t scan any messages.\nMFA is disabled.\nDoes not require any verification.\nThe <code>Guild</code> nsfw level.\nPartial information about a <code>Guild</code>. This does not include …\nA partial amount of data for a member.\nThe guild’s premium tier, depends on the amount of users …\nInformation about a role within a guild. A role represents …\nThe tags of a <code>Role</code>.\nThe guild is considered as safe.\nInformation about a guild scheduled event.\nDiscord docs.\nSee <code>ScheduledEvent::privacy_level</code>.\nDiscord docs.\nDiscord docs.\nDiscord docs.\nDescribes a system channel flags.\nDiscord docs, extra fields.\nDescribes extra features of the message.\nGuild has not unlocked any Server Boost perks\nGuild has unlocked Server Boost level 1 perks\nGuild has unlocked Server Boost level 2 perks\nGuild has unlocked Server Boost level 3 perks\nData for an unavailable guild.\nA unicode emoji.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nThe level to set as criteria prior to a user being able to …\nScan messages from members without a role.\nId of a voice channel that’s considered the AFK channel.\nInformation about the voice afk channel.\nInformation about the voice afk channel.\nThe amount of seconds a user can not show any activity in …\nWhether the emoji is animated.\nApplication ID of the guild creator if it is bot-created.\nApplication ID of the guild creator if it is bot-created.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nApproximate number of online members in this guild.\nApproximate number of non-offline members in this guild.\nApproximate number of non-offline members in this guild.\nWhether the emoji can be used. This may be false when the …\nWhether this role is available for purchase.\nThe guild avatar hash\nThe guild’s banner, if it has one.\nThe guild’s banner, if it has one.\nThe Id of the bot the <code>Role</code> belongs to.\nThe Id of the channel that the event belongs to, if any.\nThe channel Id.\nThe widget channel id.\nAll voice and text channels contained within a guild.\nThe colour of the role.\nWhen the user’s timeout will expire and the user will be …\nThe User that created the event.\nThe Id of the User that created the scheduled event.\nIndicator of whether the member can hear in voice channels.\nIndicator of whether the member can hear in voice channels.\nIndicator of whether notifications for all messages are …\nIndicator of whether notifications for all messages are …\nThe description for the guild, if the guild has the …\nThe server’s description, if it has one.\nThe description of the scheduled event, if any.\nThe server description shown in the welcome screen.\nThe description shown for the channel.\nThe server’s description, if it has one.\nThe guild discovery splash hash it it has one.\nAn identifying hash of the guild discovery’s splash icon.\nAn identifying hash of the guild discovery’s splash icon.\nThe emoji shown, if there is one.\nThe custom guild emojis.\nAll of the guild’s custom emojis.\nAll of the guild’s custom emojis.\nWhether the widget is enabled.\nThe event’s ending time; optional.\nThe id of an entity associated with a guild scheduled …\nDefault explicit content filter level.\nDefault explicit content filter level.\nThe guild features. See <code>Guild::features</code>\nThe guild features. More information available at …\nThe guild features. More information available at …\nSee <code>Guild::features</code>.\nGuild member flags.\nAny user-thread settings, currently only used for …\nWhether this role is a guild’s linked role.\nOnly present in <code>IntegrationCreateEvent</code> and …\nThe unique Id of the guild that the member is a part of.\nThe unique Id of the guild that the member is a part of.\nID of the guild.\nThe Id of the Guild the Role is in.\nThe Id of the guild that the event belongs to.\nIndicator of whether the role is pinned above lesser roles.\nThe guild icon hash if it has one.\nThe hash of the icon used by the guild.\nRole icon image hash.\nThe hash of the icon used by the guild.\nThe hash of the icon of the guild.\nIcon hash, returned when in the template object\nIcon hash, returned when in the template object\nThe Id of the emoji.\nThe guild Id.\nThe id of the thread.\nThe unique Id identifying the guild.\nThe Id of the role. Can be used to calculate the role’s …\nThe Id of the scheduled event.\nThe unique Id identifying the guild.\nThe unique Id of the guild.\nThe Id of the <code>Guild</code> that may be unavailable.\nThe hash of the event’s cover image, if present.\nThe Id of the integration the <code>Role</code> belongs to.\nThe time the current user last joined the thread.\nTimestamp representing the date when the member joined.\nTimestamp representing the date when the member joined.\nThe date that the current user joined the guild.\nThe type of the event, indicating if it will take place in …\nIndicator of whether the guild is considered “large” …\nWhether the emoji is managed via an <code>Integration</code> service.\nIndicator of whether the role is managed by an integration …\nThe maximum number of members for the guild.\nThe maximum number of members for the guild.\nThe maximum number of presences for the guild. The default …\nThe maximum number of presences for the guild. The default …\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a video channel.\nThe maximum amount of users in a video channel.\nAdditional information about the user.\nThe number of members in the guild.\nUsers who are members of the guild.\nIndicator of whether the role can be mentioned, similar to …\nOptional event location, only required for External events.\nIndicator of whether the guild requires multi-factor …\nIndicator of whether the guild requires multi-factor …\nIndicator of whether the member can speak in voice …\nIndicator of whether the member can speak in voice channels\nThe name of the emoji. It must be at least 2 characters …\nThe guild name.\nThe name of the guild.\nThe name of the role.\nThe name of the scheduled event.\nThe name of the guild.\nThe name of the guild.\nThe member’s nickname, if present.\nThe member’s nickname, if present.\nThe guild NSFW state. See <code>discord support article</code>.\nThe guild NSFW state. See <code>discord support article</code>.\nIndicator of whether the current user is the owner.\nThe Id of the <code>User</code> who owns the guild.\nThe Id of the <code>User</code> who owns the guild.\nIndicator that the member hasn’t accepted the rules of …\nIndicator that the member hasn’t accepted the rules of …\nThe total permissions of the member in a channel, …\nThe total permissions of the member in a channel, …\nA set of permissions that the role has been assigned.\nThe permissions that the current user has.\nThe role’s position in the position list. Roles are …\nThe preferred locale of this guild only set if guild has …\nThe preferred locale of this guild only set if guild has …\nWhether the guild has the boost progress bar enabled\nWhether the guild has the boost progress bar enabled\nTimestamp representing the date since the member is …\nTimestamp representing the date since the member is …\nWhether this is the guild’s premium subscriber role.\nThe total number of users currently boosting this server.\nThe total number of users currently boosting this server.\nThe server’s premium boosting level.\nThe server’s premium boosting level.\nA mapping of <code>User</code>s’ Ids to their current presences.\nThe privacy level of the scheduled event.\nThe number of members that would be pruned by the …\nThe id of the channel where admins and moderators of …\nThe id of the channel where admins and moderators of …\nThe reason given for this ban.\nWhether the emoji name needs to be surrounded by colons in …\nA list of <code>Role</code>s that are allowed to use the emoji. If …\nVector of Ids of <code>Role</code>s given to the member.\nVector of Ids of <code>Role</code>s given to the member.\nA mapping of the guild’s roles.\nA mapping of the guild’s roles.\nThe id of the channel where rules and/or guidelines are …\nThe id of the channel where rules and/or guidelines are …\nThe stage instances in this guild.\nThe guild splash hash if it has one.\nAn identifying hash of the guild’s splash icon.\nAn identifying hash of the guild’s splash icon.\nThe stage instances in this guild.\nThe event’s starting time.\nThe event’s status; either Scheduled, Active, Completed, …\nCustom guild stickers.\nAll of the guild’s custom stickers.\nAll of the guild’s custom stickers.\nThe id of this role’s subscription sku and listing.\nSystem channel flags.\nSystem channel flags.\nThe ID of the channel to which system messages are sent.\nThe ID of the channel to which system messages are sent.\nThe tags this role has. It can be used to determine if …\nAll active threads in this guild that current user has …\nWhether this guild is unavailable due to an outage.\nIndicator of whether the guild is unavailable.\nRole unicoded image.\nIf the member is currently flagged for sending excessive …\nIf the member is currently flagged for sending excessive …\nThe user who created the emoji.\nAttached User struct.\nAttached User struct.\nThe user that was banned.\nNumber of users interested in the event.\nThe id of the user.\nThe vanity url code for the guild, if it has one.\nThe vanity url code for the guild, if it has one.\nIndicator of the current verification level of the guild.\nIndicator of the current verification level of the guild.\nA mapping of <code>User</code>s to their current voice state.\nThe channels shown in the welcome screen.\nThe welcome screen of the guild.\nThe welcome screen of the guild.\nThe channel id that the widget will generate an invite to, …\nThe channel id that the widget will generate an invite to, …\nWhether or not the guild widget is enabled.\nWhether or not the guild widget is enabled.\nAn identifier for a <code>Poll Answer</code>.\nAn identifier for an Application.\nAn identifier for an attachment.\nAn identifier for an audit log entry.\nAn identifier for a Channel\nAn identifier for a slash command.\nAn identifier for a slash command permission Id. Can …\nAn identifier for a slash command version Id.\nAn identifier for an Emoji\nAn identifier for an entitlement.\nAn identifier for a forum tag.\nAn identifier for an unspecific entity.\nAn identifier for a Guild\nAn identifier for an Integration\nAn identifier for an interaction.\nAn identifier for a Message\nAn identifier for a Role\nAn identifier for an auto moderation rule\nAn identifier for a Scheduled Event\nAn identifier for a Shard.\nAn identifier for a SKU.\nAn identifier for a stage channel instance.\nAn identifier for a sticker.\nAn identifier for a sticker pack banner.\nAn identifier for a sticker pack.\nAn identifier for a slash command target Id. Can contain a …\nAn identifier for a User\nAn identifier for a <code>Webhook</code>\nInformation about an invite code.\nA minimal amount of information about the channel an …\nSubset of <code>Guild</code> used in <code>Invite</code>.\nDiscord docs.\nType of target for a voice channel invite.\nDetailed information about an invite. This information can …\nVariant value is unknown.\nThe approximate number of <code>Member</code>s in the related <code>Guild</code>.\nThe approximate number of <code>Member</code>s with an active session …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nThe unique code for the invite.\nThe unique code for the invite.\nWhen the invite was created.\nThe expiration date of this invite, returned from …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nThe user that created the invite.\nThe maximum age of the invite in seconds, from when it was …\nThe maximum number of times that an invite may be used …\nThe members speaking in the Stage\nThe number of users in the Stage\nGuild scheduled event data, only included if …\nThe number of users speaking in the Stage\nThe Stage instance data if there is a public Stage …\nThe embedded application to open for this voice channel …\nThe type of target for this voice channel invite.\nThe user whose stream to display for this voice channel …\nIndicator of whether the invite self-expires after a …\nThe topic of the Stage instance (1-120 characters)\nThe amount of times that an invite has been used.\nA struct that represents some way to insert a …\nAllows something - such as a channel or role - to be …\nCreates a <code>Mention</code> that will be able to notify or create a …\nA version of an emoji used only when solely the animated …\nAn image hash returned from the Discord API.\nAn error returned when <code>ImageHash</code> is passed an erronous …\nAn incident retrieved from the Discord status page.\nAn update to an incident from the Discord status page.\nThe given hash was not a valid <code>ImageHash</code> length, …\nA Discord status maintenance message. This can be either …\nWhether the emoji is animated\nThe Id of the emoji.\nThe name of the emoji. It must be at least 2 characters …\nEntitlement was purchased as an app subscription.\nRepresents that a user or guild has access to a premium …\nDifferentiates between Entitlement types.\nA premium offering that can be made available to an …\nDifferentates between user and server subscriptions.\nDifferentiates between SKU classes.\nRepresents a recurring subscription.\nA system-generated group for each SKU created of type …\nVariant value is unknown.\nVariant value is unknown.\nId of the SKU’s parent application.\nThe ID of the parent application.\nWhether the entitlement has been deleted or not. …\nEnd date after which the entitlement is no longer valid. …\nFlags indicating the type of subscription the SKU …\nThe ID of the guild that is granted access to the SKU.\nThe unique ID of the SKU.\nThe ID of the entitlement.\nThe class of the SKU.\nThe type of the entitlement.\nThe customer-facing name of the premium offering.\nThe ID of the corresponding SKU.\nA system-generated URL slug based on the SKU.\nStart date after which the entitlement is valid. Not …\nThe ID of the user that is granted access to the SKU.\nReturns a set of permissions with the original @everyone …\nReturns a set of text-only permissions with the original …\nReturns a set of voice-only permissions with the original …\nA set of permissions that can be assigned to <code>User</code>s and <code>Role</code>…\nAn action which will execute whenever a rule is triggered.\nGateway event payload sent when a rule is triggered and an …\nAn action row.\nA component which can be inside of an <code>ActionRow</code>.\nSee <code>Action</code>\nAllows your app to fetch data from a user’s “Now …\nAllows your app to update a user’s activity - requires …\nRepresentation of an activity that a <code>User</code> is performing.\nThe assets for an activity.\nDiscord docs.\nRepresentation of an emoji used in a custom status\nA set of flags defining what is in an activity’s payload.\nInformation about an activity’s party.\nSecrets for an activity.\nTimestamps of when a user started and/or is ending their …\nDiscord docs.\nAFK channel was changed.\nThe <code>Guild</code> AFK timeout length.\nAFK timeout duration was changed.\nThe guild is age restricted.\nLogs user content to a specified channel.\nReceive notifications for everything.\nScan messages sent by all members.\nPermission on a text or voice channel was allowed for a …\nAn identifier for a <code>Poll Answer</code>.\nAn APNG format animated sticker.\nApplication webhooks are webhooks used with Interactions.\nThe flags of the application.\nAn identifier for an Application.\nApplication ID of the added or removed webhook or bot.\nEntitlement was purchased as an app subscription.\nAllows your app to read build data for a user’s …\nAllows your app to upload/update builds for a user’s …\nAllows your app to use Slash Commands in a guild.\nAllows your app to update permissions for its commands in …\nAllows your app to update its Slash Commands via this …\nAllows your app to read entitlements for a user’s …\nAllows your app to read and update store data (SKUs, store …\nThread is now archived/unarchived.\nA file uploaded with a message. Not to be confused with …\nAn identifier for an attachment.\nDiscord docs.\nAn identifier for an audit log entry.\nDiscord docs.\nAn indicator that the video quality is chosen by Discord …\nSee <code>ThreadMetadata::auto_archive_duration</code>.\nAuto archive duration of a thread was changed.\nDiscord docs.\nA message from an auto moderation action.\nA <code>Rule</code> was triggered and an action was executed.\nRequires <code>GatewayIntents::AUTO_MODERATION_EXECUTION</code>.\nA <code>Rule</code> was created.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> was deleted.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> has been updated.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nThe focused option for autocomplete interactions return by …\nIndicates in what event context a rule should be checked.\nAvailability of a sticker was changed.\nUser avatar was changed.\nA representation of a banning of a user.\nGuild banner was changed.\nVoice channel bitrate was changed.\nBlocks the content of a message according to the rule.\nFor oauth2 bots, this puts the bot in the user’s …\nA representation of the data retrieved from the bot …\nThe response from <code>GuildId::bulk_ban</code>.\nWhen attempting to delete below or above the minimum or …\nA button component.\nThe style of a button.\nAn indication that you cannot crosspost a <code>Message</code>.\nWhen attempting to edit a voice message.\nAn indicator that the channel is a channel category.\nA container for any channel.\nDiscord docs.\nA <code>Channel</code> was created.\nEvent data for the channel creation event.\nA <code>Channel</code> has been deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nDescribes extra features of the channel.\nAn indicator that the channel is now following a news …\nAn indicator that the webhook is managed by Discord for …\nAn identifier for a Channel\nChannel for invite code or guild scheduled event was …\nDiscord docs.\nAn indication that a <code>Channel</code> could not be found by Id in …\nDiscord docs.\nThe pins for a <code>Channel</code> have been updated.\nRequires <code>GatewayIntents::GUILDS</code> or …\nA representation of a type of channel.\nA <code>Channel</code> has been updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA slash command.\nInformation detailing the current active status of a <code>User</code>.\nInvite code was changed.\nRole color was changed.\nA utility struct to help with working with the basic …\nThe base command model that belongs to an application.\nThe command data payload.\nA set of a parameter and a value from the user.\nThe value of an <code>CommandDataOption</code>.\nThe resolved data of a command data interaction payload. …\nAn identifier for a slash command.\nAn interaction when a user invokes a slash command.\nThe parameters for an <code>Command</code>.\nThe only valid values a user can pick in an <code>CommandOption</code>.\nThe type of an <code>CommandOption</code>.\nThe <code>CommandPermission</code> data.\nAn identifier for a slash command permission Id. Can …\nThe type of a <code>CommandPermission</code>.\nAn <code>Command</code> permission.\nThe permissions of an <code>Command</code> was changed.\nRequires no gateway intents.\nThe type of an application command.\nAn identifier for a slash command version Id.\nMember timeout state was changed.\nAn indicator that the user is competing somewhere.\nAn interaction triggered by a message component.\nA message component interaction data, provided by …\nThe type of a component\nInformation about a connection between the current user …\nThe visibility of a user connection on a user’s profile.\nAllows <code>/users/@me/connections</code> to return linked third-party …\nA context menu command.\nA representation of reaction count details.\nSort forum posts by creation time (from most recent to …\nDiscord docs.\nInformation about the current application and its owner.\nInformation about the current user.\nA reaction with a <code>Guild</code>s custom <code>Emoji</code>, which is unique to …\nAn indicator that the user uses custom statuses\nA custom emoji.\nUser was server deafened/undeafened.\nThe nsfw level is not specified.\nDefault auto archive duration for newly created threads …\nDefault message notification level for a guild.\nDefault message notification level for a server was …\nWhen attempting to delete a number of days’ worth of …\nWhen attempting to delete a built in nitro sticker instead …\nPermission on a text or voice channel was denied for a …\nDescription for guild, sticker, or guild scheduled event …\nAn indicator that the channel is a directory <code>GuildChannel</code> …\nGuild’s discovery splash was changed.\nAllows your app to see information about the user’s DMs …\nMFA is enabled.\nEnables <code>/users/@me</code> to return an <code>email</code> field.\nRepresents a rich embed which allows using richer …\nWhen attempting to send a message with over 10 embeds.\nAn author object in an embed.\nA field object in an embed.\nFooter information for an embed.\nAn image object in an embed.\nThe provider of an embed.\nThe dimensions and URL of an embed thumbnail.\nIndicates that the textual content of an embed exceeds the …\nVideo information for an embed.\nRepresents a custom guild emoji, which can either be …\nDiscord docs.\nAn identifier for an Emoji\nA version of an emoji used only when solely the animated …\nIntegration emoticons was enabled/disabled.\nRepresents that a user or guild has access to a premium …\nA user subscribed to a SKU.\nRequires no gateway intents.\nA user’s entitlement was deleted by Discord, or refunded.\nRequires no gateway intents.\nAn identifier for an entitlement.\nDifferentiates between Entitlement types.\nA user’s entitlement was updated or renewed.\nRequires no gateway intents.\nEntity type of guild scheduled event was changed.\nEvent received over a websocket connection\nVisible to everyone\nBehavior of the expiration of an integration was changed.\nGrace period of the expiration of an integration was …\nThe guild is considered as explicit.\nSetting used to filter explicit messages from members.\nExplicit content filter level of a guild was changed.\nUnknown but sent by discord\nA container for the IDs returned by following a news …\nFormat type of a sticker was changed.\nAn indicator that the channel is a forum <code>GuildChannel</code>.\nAn object that specifies the emoji to use for Forum …\nSee <code>GuildChannel::default_forum_layout</code>.\nAn object that represents a tag able to be applied to a …\nAn identifier for a forum tag.\nAn indicator that the video quality is 720p.\nDisplay posts as a collection of tiles.\nA representation of the data retrieved from the gateway …\nDiscord docs.\nGateway Intents will limit the events your bot will …\nAllows your app to join users to a group dm.\nAn identifier for an unspecific entity.\nA GIF format animated sticker.\nAn indicator that a call was started by the author.\nAn indicator that the channel is a group DM.\nAn indicator that the group icon was modified by the …\nAn indicator that the group name was modified by the …\nAn indicator that a recipient was added by the author.\nAn indicator that a recipient was removed by the author.\nInformation about a Discord guild, such as channels, …\nA channel within a <code>Guild</code>.\nA sticker uploaded to a Boosted guild for the guild’s …\nRequires <code>GatewayIntents::GUILD_MODERATION</code> and …\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRepresents a guild’s text, news, or voice channel. Some …\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nAn indicator that the guild is disqualified for Discovery …\nThe last warning before guild discovery removal.\nThe first warning before guild discovery removal.\nAn indicator that the guild is requalified for Discovery …\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nAn identifier for a Guild\nGuild a sticker is in was changed.\nVariant of <code>Guild</code> returned from <code>Http::get_guilds</code>.\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nServer setup tips.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nFlags for a guild member.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA member’s roles have changed\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nRequires no gateway intents.\nAn indication that a <code>Guild</code> could not be found by Id in the …\nThe Stage instance is visible to only guild members.\nPreview <code>Guild</code> information.\nRepresentation of the number of members that would be …\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA scheduled event was created.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was deleted.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was updated.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has subscribed to a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has unsubscribed from a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA <code>Sticker</code> was created, updated, or deleted\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA channel shown in the <code>GuildWelcomeScreen</code>.\nA <code>GuildWelcomeScreen</code> emoji.\nInformation relating to a guild’s welcome screen.\nA <code>Guild</code> widget.\nAllows <code>/users/@me/guilds</code> to return basic information about …\nAllows <code>/guilds/{guild.id}/members/{user.id}</code> to be used for …\nAllows <code>/users/@me/guilds/{guild.id}/member</code> to return a user…\nIndicates that there are hierarchy problems restricting an …\nMust also be a member of the guild for longer than 10 …\nMust have a verified phone on the user’s Discord account.\nRole is now displayed/no longer displayed separate from …\nGuild icon was changed.\nThe id of a guild’s custom emoji.\nGuild scheduled event cover image was changed.\nAllows <code>/users/@me</code> without <code>Self::Email</code>.\nAn image hash returned from the Discord API.\nID of the changed entity.\nAn error returned when <code>ImageHash</code> is passed an erronous …\nAn incident retrieved from the Discord status page.\nAn update to an incident from the Discord status page.\nAn indicator that the webhook can post messages to …\nA message reply.\nAn input text component for modal interactions\nThe style of the input text\nSettings for the application’s default in-app …\nVarious information about integrations.\nIntegration account object.\nDiscord docs.\nIntegration application object.\nA guild integration was created\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nA guild integration was deleted\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nThe behavior once the integration expires.\nAn identifier for an Integration\nA guild integration was updated\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nDiscord docs\nAn interaction was created.\nRequires no gateway intents.\nAn identifier for an interaction.\nThe flags for an interaction response message.\nThe type of an Interaction.\nAn indicator that the <code>ChannelType</code> cannot perform an action.\nThe given hash was not a valid <code>ImageHash</code> length, …\nIndicates that you do not have the required permissions to …\nAn indicator that the current user cannot perform an …\nWhether the session can be resumed.\nPrivate thread’s invitable state was changed.\nInformation about an invite code.\nDiscord docs.\nA minimal amount of information about the channel an …\nAn <code>Invite</code> was created.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nAn <code>Invite</code> was deleted.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nSubset of <code>Guild</code> used in <code>Invite</code>.\nDiscord docs.\nType of target for a voice channel invite.\nID of the user who created the invite.\nAn indicator that an item is missing from the <code>Cache</code>, and …\nInternally pre-defined wordsets which will be searched for …\nSort forum posts by activity.\nDisplay posts as a list.\nAn indicator that the user is listening to something.\nLocation for a guild scheduled event was changed.\nThread was locked/unlocked.\nA LOTTIE format animated sticker.\nMust have a verified email on the user’s Discord account.\nA Discord status maintenance message. This can be either …\nHow long invite code lasts was changed.\nMaximum uses of an invite was changed.\nMust also be a registered user on Discord for longer than …\nInformation about a member of a guild.\nA member which is having its permission overwrites edited.\nDiscord docs.\nAn indicator that a member joined the guild.\nAn indication that a <code>Member</code> could not be found by Id in …\nA helper class returned by <code>GuildId::members_iter</code>\nDiscord docs.\nA struct that represents some way to insert a …\nAllows something - such as a channel or role - to be …\nWhether a role can be mentioned in a message was changed.\nReceive only mentions.\nA representation of a message over a guild’s text …\nDiscord docs.\nRich Presence activity information.\nDiscord docs.\nAn indication that a <code>Message</code> has already been crossposted, …\nRich Presence application information.\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nDescribes extra features of the message.\nAn identifier for a Message\nSent when a <code>Message</code> is a response to an <code>Interaction</code>.\nA user has voted on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA user has removed a previous vote on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA representation of a reaction to a message.\nReference data sent with crossposted messages.\nIndicates that a <code>Message</code>s content was too long and will …\nDifferentiates between regular and different types of …\nA message has been edited, either by the user or the system\nRequires <code>GatewayIntents::GUILD_MESSAGES</code>.\nA helper class returned by <code>ChannelId::messages_iter</code>\nFor local rpc server api access, this allows you to read …\nIndicates that the current user is attempting to Direct …\nMulti-Factor Authentication level for guild moderators.\nMulti-factor authentication requirement was changed.\nAn interaction triggered by a modal submit.\nA modal submit interaction data, provided by …\nAn error returned from the <code>model</code> module.\nUser was server muted/unmuted.\nThe unicode character of the emoji.\nName of an entity was changed.\nIndicates that the webhook name is over the 100 characters …\nIndicates that the webhook name is under the 2 characters …\nAn indicator that the channel is a <code>NewsChannel</code>.\nAn indicator that the channel is a news thread <code>GuildChannel</code>…\nNickname of a member was changed.\nAn indicator that someone has boosted the guild.\nAn indicator that the guild has reached nitro tier 1\nAn indicator that the guild has reached nitro tier 2\nAn indicator that the guild has reached nitro tier 3\nIndicates that the sticker file is missing.\nIndicates that the webhook token is missing.\nInvisible to everyone except the user themselves\nDon’t scan any messages.\nMFA is disabled.\nDoes not require any verification.\nIndicates that the bot is not author of the message. This …\nNo default has been set for forum channel.\nChannel NSFW restriction was changed.\nThe <code>Guild</code> nsfw level.\nThe representation of a user’s status.\nDiscord docs.\nUnknown key was changed.\nOwner of a guild was changed.\nReturns a set of permissions with the original @everyone …\nReturns a set of text-only permissions with the original …\nReturns a set of voice-only permissions with the original …\nA container for any partial channel.\nPartial information about the given application.\nPartial information about a <code>Guild</code>. This does not include …\nA partial guild channel.\nPartial version of <code>Integration</code>, used in …\nA partial amount of data for a member.\nA channel-specific permission overwrite for a member or …\nThe type of edit being made to a Channel’s permissions.\nPermissions on a channel were changed.\nA set of permissions that can be assigned to <code>User</code>s and <code>Role</code>…\nPermissions for a role were changed.\nA ping interaction, which can only be received through an …\nAn indicator that a message was pinned by the author.\nAn indicator that the user is playing a game.\nA PNG format sticker.\nA poll that has been attached to a <code>Message</code>.\nA possible answer for a <code>Poll</code>.\nThe count of a single <code>PollAnswer</code>’s results.\nRepresents the different layouts that a <code>Poll</code> may have.\nA piece of data used in mutliple parts of the <code>Poll</code> …\nThe “Partial Emoji” attached to a <code>PollMedia</code> model.\nThe model for the results of a <code>Poll</code>.\nChannel or role position was changed.\nPreferred locale of a guild was changed.\nThe guild’s premium tier, depends on the amount of users …\nPremium types denote the level of premium a user has. …\nInformation detailing the current online status of a <code>User</code>.\nA member’s presence state (or username or avatar) has …\nRequires <code>GatewayIntents::GUILD_PRESENCES</code>.\nInformation about the user of a <code>Presence</code> event.\nThe presence list of the user’s friends should be …\nNot officially documented.\nPrivacy level of the stage instance was changed.\nA private channel to another <code>User</code> (Direct Message). No …\nAn indicator that the channel is a <code>PrivateChannel</code>.\nA Direct Message text channel with another user.\nAn indicator that the channel is a private thread …\nWords that may be considered forms of swearing or cursing\nNumber of days after which inactive and role-unassigned …\nThe Stage instance is visible publicly. (deprecated)\nAn indicator that the channel is a public thread …\nID of the public updates channel was changed.\nRatelimit per user in a text channel was changed.\nAn emoji reaction to a message.\nA reaction was added to a message.\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nA reaction was removed to a message.\nA request was issued to remove all <code>Reaction</code>s from a <code>Message</code>…\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nSent when a bot removes all instances of a given emoji …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nThe type of a <code>Reaction</code> sent.\nA list of types a reaction can be.\nAn initial set of information given after IDENTIFYing to …\nThe first event in a connection, containing the initial …\nThe “Ready” event, containing initial ready cache\nRegion of a guild was changed.\nA regular message.\nAllows your app to know a user’s friends and implicit …\nThe resolved value of a <code>CommandData::target_id</code>.\nThe resolved value of a <code>CommandDataOption</code>.\nThe connection has successfully resumed after a disconnect.\nRequires no gateway intents.\nDetailed information about an invite. This information can …\nInformation about a role within a guild. A role represents …\nA role which is having its permission overwrites edited.\nDiscord docs.\nAllows your app to update a user’s connection and …\nAn identifier for a Role\nAn indication that a <code>Role</code> could not be found by Id in the …\nDiscord docs\nThe tags of a <code>Role</code>.\nRole was added to a member.\nRole was removed to a member.\nFor local rpc server access, this allows you to control a …\nFor local rpc server api access, this allows you to …\nConfigured auto moderation rule.\nAn identifier for an auto moderation rule\nID of the rules channel was changed.\nThe guild is considered as safe.\nInformation about a guild scheduled event.\nDiscord docs.\nAn identifier for a Scheduled Event\nDiscord docs.\nSee <code>ScheduledEvent::privacy_level</code>.\nDiscord docs.\nDiscord docs.\nDiscord docs.\nThe available OAuth2 Scopes.\nA select menu component.\nA select menu component options.\nInformation describing how many gateway sessions you can …\nWords that refer to sexually explicit behavior or activity\nAn identifier for a Shard.\nA premium offering that can be made available to an …\nDifferentates between user and server subscriptions.\nAn identifier for a SKU.\nDifferentiates between SKU classes.\nPersonal insults or words that may be considered hate …\nThe sort order for threads in a forum.\nInvite splash page artwork was changed.\nAn indicator that the channel is a stage <code>GuildChannel</code>.\nDiscord docs.\nDiscord docs.\nA stage instance was created.\nRequires <code>GatewayIntents::GUILDS</code>.\nA stage instance was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nAn identifier for a stage channel instance.\nSee <code>StageInstance::privacy_level</code>.\nA stage instance was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nAn official sticker in a pack, part of Nitro or in a …\nStatus of guild scheduled event was changed.\nA sticker sent with a message.\nDiscord docs.\nWhen attempting to send a message with over 3 stickers.\nDifferentiates between sticker formats.\nAn identifier for a sticker.\nThe smallest amount of data required to render a sticker.\nA sticker sent with a message.\nAn identifier for a sticker pack banner.\nAn identifier for a sticker pack.\nDifferentiates between sticker types.\nAn indicator that the user is streaming to a service.\nRepresents a recurring subscription.\nA system-generated group for each SKU created of type …\nDescribes a system channel flags.\nSystem channel settings were changed.\nID of the system channel was changed.\nRelated emoji of a sticker was changed.\nAn identifier for a slash command target Id. Can contain a …\nInformation about the Team group of the application.\nInformation about a Member on a Team.\nWhether an invite is temporary or never expires was …\nAn indicator that the channel is a text <code>GuildChannel</code>.\nDiscord docs.\nA thread was created or the current user was added to a …\nRequires <code>GatewayIntents::GUILDS</code>.\nMessage sent to inform users that a thread was created.\nA thread was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe current user gains access to a channel.\nRequires <code>GatewayIntents::GUILDS</code>.\nDiscord docs, extra fields.\nDescribes extra features of the message.\nThe <code>ThreadMember</code> object for the current user is updated.\nRequires <code>GatewayIntents::GUILDS</code>, and, to receive this …\nAnyone is added to or removed from a thread.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA thread data.\nA thread start message.\nA thread was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA response to getting several threads channels.\nGuild has not unlocked any Server Boost perks\nGuild has unlocked Server Boost level 1 perks\nGuild has unlocked Server Boost level 2 perks\nGuild has unlocked Server Boost level 3 perks\nTimeout user for a specified duration.\nTopic of a text channel or stage instance was changed.\nCharacterizes the type of content which can trigger the …\nIndividual change for trigger metadata within an audit log …\nType of <code>Trigger</code>.\nType of a created entity.\nA user is typing; considered to last 5 seconds\nRequires <code>GatewayIntents::GUILD_MESSAGE_TYPING</code> or …\nData for an unavailable guild.\nA reaction with a twemoji.\nA unicode emoji.\nUnicode emoji of a role icon was changed.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value for unknown option types.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nAn event type not covered by the above\nVariant value is unknown.\nUnknown key was changed and was invalid\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nOption value variants that couldn’t be resolved by …\nInformation about a user.\nAn identifier for a User\nMaximum number of users in a voice channel was changed.\nUser’s public flags\nUpdate to the logged-in user’s information\nSent when properties about the current bot’s user change.\nNumber of uses of an invite was changed.\nGuild invite vanity url was changed.\nThe level to set as criteria prior to a user being able to …\nRequired verification level for new members was changed.\nThe video quality mode for a voice channel.\nAllows your app to connect to voice on user’s behalf and …\nAn indicator that the channel is a voice <code>GuildChannel</code>.\nIncomplete documentation\nFired when the status of a Voice Channel changes.\nRequires <code>GatewayIntents::GUILDS</code>.\nInformation about an available voice region.\nVoice server information is available\nRequires no gateway intents.\nA user’s state within a voice channel.\nA member’s voice state has changed\nRequires <code>GatewayIntents::GUILD_VOICE_STATES</code>.\nAn indicator that the user is watching something.\nA representation of a webhook, which is a low-effort way …\nDiscord docs.\nThe guild object returned by a <code>Webhook</code>, of type …\nAn identifier for a <code>Webhook</code>\nThis generates a webhook that is returned in the oauth …\nA representation of a type of webhook.\nA webhook for a channel was updated in a <code>Guild</code>.\nRequires <code>GatewayIntents::GUILD_WEBHOOKS</code>.\nChannel of the server widget was changed.\nWhether a widget is enabled or not was changed.\nScan messages from members without a role.\nIndicates that a member, role or channel from the wrong …\nThe user’s banner colour encoded as an integer …\nDetermines what action was done on a <code>Self::target_id</code>\nAction which was executed.\nActions which will execute when the rule is triggered.\n<code>User</code>’s current activities.\nSent with Rich Presence-related chat embeds.\nThe users who were added to the thread.\nId of a voice channel that’s considered the AFK channel.\nInformation about the voice afk channel.\nInformation about the voice afk channel.\nThe amount of seconds a user can not show any activity in …\nID of any system auto moderation messages posted as a …\nWhether this emoji is animated.\nWhether the emoji is animated.\nWhether the emoji is animated\nPermissions the app or bot has within the channel the …\nPermissions the app or bot has within the channel the …\nPermissions the app or bot has within the channel the …\nSent with Rich Presence-related chat embeds.\nContains id and flags\nList of application commands referenced in the audit log.\nThe parent application Id.\nThe id of the application the command belongs to.\nId of the application this interaction is for.\nId of the application this interaction is for.\nId of the application this interaction is for.\nId of the application this interaction is for.\nIf the message is an Interaction or application-owned …\nThe ID of the application for the activity.\nID of the app whose permissions were targeted.\nApplication ID of the guild creator if it is bot-created.\nApplication ID of the guild creator if it is bot-created.\nId of the SKU’s parent application.\nThe ID of the parent application.\nThe bot/OAuth2 application that created this webhook.\nThe set of applied tags.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nThe approximate number of <code>Member</code>s in the related <code>Guild</code>.\nApproximate number of online members in this guild.\nApproximate number of non-offline members in this guild.\nApproximate number of non-offline members in this guild.\nThe approximate number of <code>Member</code>s with an active session …\nThe last time the thread’s archive status was last …\nWhether the thread is archived.\nImages for the presence and their texts.\nThe resolved attachments.\nAn vector of the files attached to a message.\nInformation about the author of the embed.\nThe user that sent the message.\nTries to return author’s nickname in the current channel…\nDuration in minutes to automatically archive the thread …\nName of the Auto Moderation rule that was triggered.\nTrigger type of the Auto Moderation rule that was …\nList of auto moderation rules referenced in the audit log.\nWhether the emoji can be used. This may be false when the …\nWhether or not this guild sticker can be used, may be …\nWhether this role is available for purchase.\nThe set of available tags.\nThe guild avatar hash\nOptional avatar hash.\nThe default avatar.\nReturns a builder which can be awaited to obtain a single …\nSame as <code>Self::await_component_interaction</code>.\nReturns a builder which can be awaited to obtain a model …\nSame as <code>Self::await_modal_interaction</code>.\nReturns a builder which can be awaited to obtain a …\nSame as <code>Self::await_reaction</code>.\nThe guild’s banner, if it has one.\nThe guild’s banner, if it has one.\nOptional banner hash.\nThe unique ID given to the sticker pack’s banner image.\nThe bitrate of the channel.\nIndicator of whether the user is a bot.\nThe Id of the bot the <code>Role</code> belongs to.\nIndicates if this was a super reaction.\nColours used for the super reaction animation.\nThe buttons of this activity.\nRetrieves the message channel’s category ID if the …\nWhat changes were made.\nFirst attempts to find a <code>Channel</code> by its Id in the cache, …\nChannel that the interaction was sent from.\nChannel that the interaction was sent from.\nChannel that the interaction was sent from.\nThe channel that was created.\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nThe channel Id this interaction was sent from.\nThe channel Id this interaction was sent from.\nThe channel Id this interaction was sent from.\nThe Id of the <code>Channel</code> that the message was sent to.\nID of the originating message’s channel.\nThe source news channel\nThe <code>Channel</code> of the associated <code>Message</code>.\nThe Id of the associated stage channel.\nWhether or not the invite is temporary (invited users will …\nID of the channel.\nChannel in which the messages were deleted\nID of the channel in which user content was posted.\nThe Id of the channel that the event belongs to, if any.\nThe channel Id.\nThe widget channel id.\nThe Id of the channel that owns the webhook.\nThe parent channel Id whose threads are being synced. If …\nIf the option is a <code>Channel</code>, it will only be able to show …\nList of channel types to include in the …\nThe resolved partial channels.\nAll voice and text channels contained within a guild.\nChoices the user can pick from.\nTotal number of expected chunks for this response.\nChunk index in the expected chunks for this response (0 &lt;= …\nThe devices a user are currently active on, if available.\nUnique invite code.\nThe unique code for the invite.\nThe unique code for the invite.\nThe colour code of the embed.\nThe colour of the role.\nWhen the user’s timeout will expire and the user will be …\nThe components of this ActionRow.\nThe components.\nThe components of this message\nThe content of the message.\nUser generated text content.\nReturns message content, but with user and role mentions …\nThe attachment’s media type.\nThe amount of the type of reaction that have been sent for …\nNumber of deleted messages.\nA breakdown of what reactions were from regular reactions …\nID of the embed’s image asset.\nID of a sticker in the pack which is shown as the pack’s …\nTimestamp when the thread was created.\nTime at which the invite was created.\nUnix timestamp (in milliseconds) of when the activity was …\nWhen the invite was created.\nThe User that created the event.\nID of the user which created the rule.\nThe Id of the User that created the scheduled event.\nCrossposts this message.\nWhether it is a custom voice region, which is used for …\nAn identifier defined by the developer for the select menu.\nDeveloper-defined identifier for the input; max 100 …\nThe custom id of the component.\nThe custom id of the modal\nThe data of the interaction which was triggered.\nThe button kind and style.\nThe data of the interaction which was triggered.\nThe data of the interaction which was triggered.\nIndicator of whether the member can hear in voice channels.\nIndicator of whether the member can hear in voice channels.\nRender this option as the default selection.\nDefault duration for newly created threads, in minutes, to …\nThe default forum layout view used to display posts in a …\nThe default permissions required to execute the command.\nIndicator of whether notifications for all messages are …\nIndicator of whether notifications for all messages are …\nThe emoji to show in the add reaction button\nThe default sort order type used to order posts\nThe initial <code>rate_limit_per_user</code> to set on newly created …\nDeletes the message.\nNumber of days after which inactive members were kicked.\nDeletes the given <code>Reaction</code> from the message.\nDeletes all of the <code>Reaction</code>s of a given emoji associated …\nDeletes all of the <code>Reaction</code>s associated with the message.\nWhether the entitlement has been deleted or not. …\nWhether it is a deprecated voice region, which you should …\nThe command description.\nThe option description.\nThe description shown for this option.\nDescription for the file (max 1024 characters).\nThe description of the embed.\nApplication’s description.\nThe description for the guild, if the guild has the …\nThe server’s description, if it has one.\nThe description of the scheduled event, if any.\nThe server description shown in the welcome screen.\nThe description shown for the channel.\nThe server’s description, if it has one.\nDescription of the sticker pack.\nDescription of the sticker\nAll localized command descriptions.\nLocalizations of the option description with locale as the …\nThe localized command description of the selected locale.\nWhat the user is doing.\nWhether the button is disabled.\nWhether select menu is disabled.\nWhether or not Stage Discovery is disabled (deprecated).\nThe guild discovery splash hash it it has one.\nAn identifying hash of the guild discovery’s splash icon.\nAn identifying hash of the guild discovery’s splash icon.\nThe account’s discriminator to differentiate the user …\nIndicates whether the command is available in DMs with the …\nThe duration of the audio file (present if …\nEdits this message, replacing the original content with …\nThe timestamp of the last time the message was updated, if …\nThe user’s email\nArray of embeds sent with the message.\nThe emoji of this button, if there is one.\nThe emoji displayed on this option.\nThe reactive emoji used.\nThe emoji to display next to the tag.\nEmoji currently used in custom status\nThe emoji shown, if there is one.\nThe custom guild emojis.\nAll of the guild’s custom emojis.\nAll of the guild’s custom emojis.\nWhether the rule is enabled.\nWhether the widget is enabled.\nEnds the <code>Poll</code> on this message, if there is one.\nThe event’s ending time; optional.\nEnd date after which the entitlement is no longer valid. …\nFor monetized applications, any entitlements of the …\nFor monetized applications, any entitlements of the …\nFor monetized applications, any entitlements of the …\nThe id of an entity associated with a guild scheduled …\nList of audit log entries, sorted from most to least …\nWhether this attachment is ephemeral.\nEvent context in which the rule should be checked.\nChannels that should not be affected by the rule.\nRoles that should not be affected by the rule.\nThe expiration date of this invite, returned from …\nDefault explicit content filter level.\nDefault explicit content filter level.\nWhen sending, whether to error if the referenced message …\nThe guild features. See <code>Guild::features</code>\nThe guild features. More information available at …\nThe guild features. More information available at …\nSee <code>Guild::features</code>.\nThe array of fields.\nThe filename of the file that was uploaded. This is …\nThe flags associated with the application.\nExtra information about the channel\nBit flags describing extra features of the message.\nActivity flags describing what the payload includes.\nGuild member flags.\nAny user-thread settings, currently only used for …\nFlags indicating the type of subscription the SKU …\nThe flags on a user’s account\nFooter information for the embed.\nThe type of sticker format.\nThe type of sticker format.\nWhether friend sync is enabled for this connection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe account’s display name, if it is set. For bots this …\nReturns the associated <code>Guild</code> for the message if one is in …\nGuildUpdateEvent doesn’t have GuildCreate’s extra …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nWhether this role is a guild’s linked role.\nThe command guild Id, if it is a guild command.\nThe id of the guild.\nThe guild Id this interaction was sent from, if there is …\nThe Id of the guild the command is registered to.\nThe guild Id this interaction was sent from, if there is …\nThe guild Id this interaction was sent from, if there is …\nThe Id of the guild the channel is located in.\nThe channel guild Id.\nThe Id of the <code>Guild</code> that the message was sent in. This …\nID of the originating message’s guild.\nID of the guild containing the channel.\nThe optional Id of the <code>Guild</code> where the reaction was sent.\nThe guild Id of the associated stage channel.\nID of the guild.\nGuild of the invite.\nID of the guild.\nThe guild Id.\nThe id of the Guild.\nThe <code>GuildId</code> the presence update is coming from.\nID of the guild this rule belongs to.\nID of the guild in which the action was executed.\nOnly present in <code>IntegrationCreateEvent</code> and …\nThe unique Id of the guild that the member is a part of.\nThe unique Id of the guild that the member is a part of.\nID of the guild.\nThe Id of the Guild the Role is in.\nThe Id of the guild that the event belongs to.\nThe ID of the guild that is granted access to the SKU.\nId of the guild that owns this sticker.\nThe Id of the guild that owns the webhook.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nThe id of the scheduled event for this Stage instance.\nList of guild scheduled events referenced in the audit log.\nGuilds the user is in\nWhether there are potentially more threads that could be …\nIf the attachment is an image, then the height of the …\nThe height of the image.\nThe height of the thumbnail in pixels.\nThe height of the video in pixels.\nIndicator of whether the role is pinned above lesser roles.\nThe icon of the team.\nID of the application’s icon.\nThe guild icon hash if it has one.\nThe hash of the icon used by the guild.\nRole icon image hash.\nThe hash of the icon used by the guild.\nThe hash of the icon of the guild.\nThe hash of the icon used by the guild.\nIcon hash, returned when in the template object\nIcon hash, returned when in the template object\nThe URL of the author icon.\nThe URL of the footer icon.\nThe command Id.\nThe id of the command.\nThe <code>RoleId</code> or <code>UserId</code>, depends on <code>kind</code> value.\nId of the interaction.\nThe Id of the invoked command.\nId of the interaction.\nThe id of the interaction.\nId of the interaction.\nId of the interaction.\nThe unique Id of the user.\nThe snowflake ID of the team.\nThe unique ID given to this attachment.\nThe unique Id of the channel.\nThe channel Id.\nThe unique Id of the message. Can be used to calculate the …\nID of the application.\nID of the channel.\nThe channel Id.\nThe unique Id of the private channel.\nThe Id of the stage instance.\nThe id of the tag.\nThe ID of the account on the other side of this connection.\nThe id of the thread.\nThe ID of the party.\nThe id of the emoji.\nThe id of this entry.\nId of the overwritten entity\nID of the rule.\nThe Id of the emoji.\nThe guild Id.\nThe id of the thread.\nThe unique Id identifying the guild.\nThe Id of the role. Can be used to calculate the role’s …\nThe Id of the scheduled event.\nThe unique Id identifying the guild.\nThe unique Id of the guild.\nThe Id of the <code>Guild</code> that may be unavailable.\nThe Id of the emoji.\nThe unique ID of the SKU.\nThe ID of the entitlement.\nThe unique ID given to this sticker.\nThe unique ID given to this sticker sticker pack.\nThe unique ID given to this sticker.\nThe unique Id of the user. Can be used to calculate the …\nThe internal Id of the voice region.\nThe unique Id.\nThe unique Id identifying the guild.\nThe unique Id of the channel.\nImage information of the embed.\nThe hash of the event’s cover image, if present.\nIndicator of whether the field should display as inline.\nWhether or not the activity is an instanced game session.\nThe Id of the integration the <code>Role</code> belongs to.\nA list of partial guild <code>Integration</code>s that use this …\nList of partial integration objects.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether non-moderators can add other non-moderators to a …\nUser that created the invite.\nA representation of the minimal amount of information …\nThe user that created the invite.\nA util function for determining whether this message was …\nTrue if message was sent using direct messages.\nWhether this notification is for a renewal rather than a …\nThe secret for joining a party.\nThe time the current user last joined the thread.\nTimestamp representing the date when the member joined.\nTimestamp representing the date when the member joined.\nThe date that the current user joined the guild.\nThe application command kind.\nThe option type.\nThe type of data this permissions applies to.\nThe application command type of the triggered application …\nAlways <code>ComponentType::ActionRow</code>\nThe component type, it will always be <code>ComponentType::Button</code>…\nThe component type, which may either be …\nThe component type, it will always be …\nType and type-specific data of this component interaction.\nThe type of the interaction.\nThe type of the embed. For embeds not generated by Discord…\nThe type of the channel.\nThe channel type.\nIndicator of the type of message this is, i.e. whether it …\nKind of message activity.\nThe kind of channel\nThe channel type.\nIndicator of the type of channel this is.\nThe service that this connection represents (e.g. twitch, …\nThe type of activity being performed\nType of overwritten entity (“member” or “role”).\nThe type of the event, indicating if it will take place in …\nThe class of the SKU.\nThe type of the entitlement.\nThe type of sticker.\nThe type of the webhook.\nThe text which appears on the button.\nThe text displayed on this option.\nLabel for this component; max 45 characters. Required when …\nThe text shown on the button.\nIndicator of whether the guild is considered “large” …\nThe ID for a large asset of the activity, usually a …\nText displayed when hovering over the large image of the …\nThe Id of the last message sent in the channel.\nThe Id of the last message sent.\nThe timestamp of the time a pin was most recently made.\nTimestamp of the last time a <code>Message</code> was pinned.\nReturns a link referencing this message. When clicked, …\nSame as <code>Self::link</code> but tries to find the <code>GuildId</code> if …\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nThe user’s chosen language option\nWhen a thread is locked, only users with <code>MANAGE_THREADS</code> …\nWhether the emoji is managed via an <code>Integration</code> service.\nIndicator of whether the role is managed by an integration …\nThe secret for a specific instanced match.\nSubstring in content that triggered the rule.\nWord or phrase configured in the rule that triggered the …\nHow long the invite is valid for (in seconds).\nThe maximum age of the invite in seconds, from when it was …\nThe number of identify requests allowed per 5 seconds.\nMaximum permitted length for String options\nMaximum input length for a text input; min 1, max 4000\nThe maximum number of members for the guild.\nThe maximum number of members for the guild.\nThe maximum number of presences for the guild. The default …\nThe maximum number of presences for the guild. The default …\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a stage video channel\nMaximum number of times the invite can be used.\nThe maximum number of times that an invite may be used …\nMaximum permitted value for Integer or Number options\nThe maximum number of selections allowed.\nThe maximum amount of users in a video channel.\nThe maximum amount of users in a video channel.\nIndicator of whether the current user has sent this type …\nIndicator of whether the current user has sent the type of …\nRetrieves a clone of the author’s Member instance, if …\nThe <code>member</code> data for the invoking user.\nThe <code>member</code> data for the invoking user.\nThe member who invoked the interaction in the guild.\nThe <code>member</code> data for the invoking user.\nThread member object for the current user, if they have …\nA partial amount of data about the user’s member data\nThe optional object of the member which added the reaction.\nMember who started typing if this happened in a guild.\nAdditional information about the user.\nOnly included in <code>Message::mentions</code> for messages from the …\nAn approximate count of users in a thread, stops counting …\nThe approximate number of members in the thread, capped at …\nThe number of members in the guild.\nThe resolved partial members.\nThe members of the team\nA thread member for each returned thread the current user …\nSet of guild members.\nAll thread member objects from the synced threads for the …\nUsers who are members of the guild.\nThe members speaking in the Stage\nNumber of members removed by the prune\nThe member’s membership state.\nCreates a <code>Mention</code> that will be able to notify or create a …\nChannels specifically mentioned in this message.\nIndicator of whether the message mentions everyone.\nArray of <code>Role</code>s’ Ids mentioned in the message.\nIndicator of whether the role can be mentioned, similar to …\nArray of users mentioned in the message.\nChecks whether the message mentions the current user.\nChecks whether the message mentions passed <code>User</code>.\nChecks whether the message mentions passed <code>UserId</code>.\nThe message this interaction was triggered by, if it is a …\nThe message this interaction was triggered by\nThe Id of the user who sent the message which this reacted …\nAn approximate count of messages in the thread.\nID of the originating message.\nThe Id of the <code>Message</code> that was reacted to.\nMessage that was pinned or unpinned.\nID of any user message which content belongs to.\nReference data sent with crossposted messages.\nThe resolved messages.\nOptional event location, only required for External events.\nWhether the user has two factor enabled on their account\nIndicator of whether the guild requires multi-factor …\nIndicator of whether the guild requires multi-factor …\nMinimum permitted length for String options\nMinimum input length for a text input; min 0, max 4000\nMinimum permitted value for Integer or Number options\nThe minimum number of selections allowed.\nWhether this tag can only be added to or removed from …\nIndicator of whether the member can speak in voice …\nIndicator of whether the member can speak in voice channels\nThe command name.\nThe option name.\nThe choice name.\nThe name of the invoked command.\nThe name of the parameter.\nThe name of the <code>Command</code>.\nThe name of the team.\nThe name of the author.\nThe name of the field.\nThe name of the provider.\nThe name of the channel.\nName of the application.\nThe name of the channel\nThe channel name.\nThe name of the tag (0-20 characters).\nThe username of the account on the other side of this …\nThe name of the activity.\nThe name of the emoji.\nName of the rule.\nThe name of the emoji. It must be at least 2 characters …\nThe guild name.\nThe name of the guild.\nThe name of the role.\nThe name of the scheduled event.\nThe name of the guild.\nThe name of the guild.\nThe name of the emoji. It must be at least 2 characters …\nThe customer-facing name of the premium offering.\nThe name of the sticker.\nThe name of the sticker pack\nThe name of the sticker.\nThe account’s username. Changing username will trigger a …\nA recognizable name of the location of the voice region.\nThe default name of the webhook.\nThe name of the guild.\nThe name of the channel.\nAll localized command names.\nLocalizations of the option name with locale as the key\nLocalizations of the choice name, with locale as key\nThe localized command name of the selected locale.\nThe member’s nickname, if present.\nThe member’s nickname, if present.\nNon-repeating number used for ensuring message order.\nNonce used in the …\nWhen passing an invalid ID to …\nIndicates whether the command is age-restricted, defaults …\nUsed to tell if the channel is not safe for work.\nThe guild NSFW state. See <code>discord support article</code>.\nThe guild NSFW state. See <code>discord support article</code>.\nWhether the voice region is optimal for use by the current …\nThe parameters for the command.\nThe nested options.\nThe options of this select menu.\nSome optional data associated with this entry.\nChecks the length of a message to ensure that it is within …\nIndicator of whether the current user is the owner.\nThe Id of the user who created this channel\nThe Id of the <code>User</code> who owns the guild.\nThe Id of the <code>User</code> who owns the guild.\nThe user id of the team owner.\nThe unique ID of the pack the sticker is from.\nThe Id of the parent category for a channel, or of the …\nThe channel category Id,  or the parent text channel Id …\nThe Id of the parent category for a channel, or of the …\nThe number of users in the Stage\nInformation about the user’s current party.\n<code>party_id</code> from a Rich Presence event.\nIndicator that the member hasn’t accepted the rules of …\nIndicator that the member hasn’t accepted the rules of …\nWhether or not the provided data can use the command or …\nPermission overwrites for <code>Member</code>s and for <code>Role</code>s.\nThe permissions for the command in the guild.\nThe list of permissions of the member on the team.\nComputed permissions for the invoking user in the channel, …\nThe channel permissions.\nThe total permissions of the member in a channel, …\nThe total permissions of the member in a channel, …\nA set of permissions that the role has been assigned.\nThe permissions that the current user has.\nPins this message to its channel.\nIndicator of whether the message is pinned.\nThe placeholder shown when nothing is selected.\nCustom placeholder text if the input is empty; max 100 …\nA poll that may be attached to a message.\nThe position of the channel.\nA generally increasing integer (there may be gaps or …\nThe role’s position in the position list. Roles are …\nThe preferred locale of this guild only set if guild has …\nThe preferred locale of this guild only set if guild has …\nWhether the guild has the boost progress bar enabled\nWhether the guild has the boost progress bar enabled\nTimestamp representing the date since the member is …\nTimestamp representing the date since the member is …\nWhether this is the guild’s premium subscriber role.\nThe total number of users currently boosting this server.\nThe total number of users currently boosting this server.\nThe server’s premium boosting level.\nThe server’s premium boosting level.\nThe type of Nitro subscription on a user’s account\nWhen passing true to …\nA mapping of <code>User</code>s’ Ids to their current presences.\nThe privacy level of the Stage instance.\nThe privacy level of the scheduled event.\nProvider information for the embed.\nA proxied URL of the author icon.\nA proxied URL of the footer icon.\nThe proxy URL.\nA proxied URL of the image.\nA proxied URL of the thumbnail.\nA proxied URL of the thumbnail.\nThe number of members that would be pruned by the …\nThe public flags on a user’s account\nThe id of the channel where admins and moderators of …\nThe id of the channel where admins and moderators of …\nA rate limit that applies per user and excludes bots.\nReact to the message with a custom <code>Emoji</code> or unicode …\nThe type of reaction.\nThe type of reaction.\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nArray of reactions performed on the message.\nWhat was the reasoning by doing an action on a target? If …\nThe reason given for this ban.\nThe recipient to the private channel.\nThe message that was replied to using this message.\nThe number of sessions that you can still initiate within …\nThe ids of the users who were removed from the thread.\nUses Discord’s inline reply to a user without pinging …\nReplies to the user, mentioning them prior to the content …\nUses Discord’s inline reply to a user with a ping.\nWhen unsuppressed, non-bot users will have this set to the …\nWhether the emoji name needs to be surrounded by colons in …\nWhether the parameter is optional or required.\nWhether this component is required to be filled (defaults …\nThe number of milliseconds until the ratelimit period …\nThe parameters and the given values. The converted objects …\nThe results of the Poll.\nGateway URL for resuming connections\nWhether this connection has been revoked and is no longer …\nThe <code>TeamMemberRole</code> of the team member.\nThe application’s role connection verification entry …\nName of the role if type is “role”\nData of the role subscription purchase or renewal that …\nThe id of the sku and listing that the user is subscribed …\nThe resolved roles.\nA list of <code>Role</code>s that are allowed to use the emoji. If …\nVector of Ids of <code>Role</code>s given to the member.\nVector of Ids of <code>Role</code>s given to the member.\nA mapping of the guild’s roles.\nA mapping of the guild’s roles.\nThe region override.\nID of the rule which action belongs to.\nThe id of the channel where rules and/or guidelines are …\nThe id of the channel where rules and/or guidelines are …\nGuild scheduled event data, only included if …\nThe stage instances in this guild.\nSecrets for Rich Presence joining and spectating.\nUsed for resuming connections\nInformation describing how many gateway sessions you can …\nShard information associated with this session, if sent …\nThe number of shards that is recommended to be used by the …\nWhether activities related to this connection will be …\nThe size of the file in bytes.\nUsed to show the party’s current and maximum size.\nThe ID of the corresponding SKU.\nThe unique ID given to the pack’s SKU.\nA system-generated URL slug based on the SKU.\nThe ID for a small asset of the activity, usually a …\nText displayed when hovering over the small image of the …\nA sticker’s sort order within a pack.\nThe channel that this webhook is following (returned for …\nThe guild of the channel that this webhook is following …\nThe number of users speaking in the Stage\nThe secret for spectating an activity.\nThe guild splash hash if it has one.\nAn identifying hash of the guild’s splash icon.\nAn identifying hash of the guild’s splash icon.\nThe Stage instance data if there is a public Stage …\nThe stage instances in this guild.\nThe event’s starting time.\nStart date after which the entitlement is valid. Not …\nThe user’s current party status.\nThe status of a voice channel.\nThe user’s online status.\nThe status of a voice channel when set.\nThe event’s status; either Scheduled, Active, Completed, …\nArray of message sticker item objects.\nCustom guild stickers.\nAll of the guild’s custom stickers.\nAll of the guild’s custom stickers.\nThe stickers in the pack\nThe <code>InputTextStyle</code>. Required when sending modal data.\nThe id of this role’s subscription sku and listing.\nReact to the message with a custom <code>Emoji</code> or unicode …\nWhether the user is an Official Discord System user (part …\nSystem channel flags.\nSystem channel flags.\nThe ID of the channel to which system messages are sent.\nThe ID of the channel to which system messages are sent.\nThe tags this role has. It can be used to determine if …\nFor guild stickers, the Discord name of a unicode emoji …\nEmbedded application to open for this voice channel …\nThe embedded application to open for this voice channel …\nThe targeted user or message, if the triggered application …\nDetermines to what entity an <code>Self::action</code> was used on.\nType of target for this voice channel invite.\nThe type of target for this voice channel invite.\nUser whose stream to display for this voice channel stream …\nThe user whose stream to display for this voice channel …\nThe ID of the team they are a member of.\nthey’re assigned a role).\nIndicator of whether the invite self-expires after a …\nThe associated text with the footer.\nThe thread that was started from this message, includes …\nThe thread metadata.\nThe thread metadata.\nThe threads channels.\nAll active threads in the given channels that the current …\nList of threads referenced in the audit log.\nAll active threads in this guild that current user has …\nThumbnail information of the embed.\nThe name of the tier that the user is subscribed to.\nTimestamp information.\nInitial message creation timestamp, calculated from its Id.\nTimestamp of when the user started typing.\nUnix timestamps for the start and/or end times of the …\nThe title of the embed.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nThe webhook’s secure token.\nThe topic of the channel.\nThe topic of the stage instance.\nThe topic of the Stage instance (1-120 characters)\nThe total number of session starts within the ratelimit …\nThe number of messages ever sent in a thread, it’s …\nThe cumulative number of months that the user has been …\nCharacterizes the type of content which can trigger the …\nTrigger type of rule which was triggered.\nIndicator of whether the command is to be played back via …\nWhether this connection has a corresponding third party …\nWhether this guild is unavailable due to an outage.\nIndicator of whether the guild is unavailable.\nRole unicoded image.\nUnpins the message from its channel.\nIf the member is currently flagged for sending excessive …\nIf the member is currently flagged for sending excessive …\nThe URL of the uploaded attachment.\nThe URL of the embed.\nThe URL of the author.\nSource URL of the image.\nThe URL of the provider.\nThe source URL of the thumbnail.\nThe source URL of the video.\nThe gateway to connect to.\nThe Stream URL if <code>Self::kind</code> is <code>ActivityType::Streaming</code>.\nThe url opened when clicking the button.\nThe gateway to connect to.\nThe url used for executing the webhook (returned by the …\nThe <code>user</code> object for the invoking user.\nThe <code>user</code> object for the invoking user.\nThe user who invoked the interaction.\nThe <code>user</code> object for the invoking user.\nThe user type of the team member.\nData about the associated user.\nInformation about the user including email\nThe user who created the emoji.\nAttached User struct.\nAttached User struct.\nThe user that was banned.\nUser that uploaded the sticker. This will be <code>None</code> if the …\nThe user that created the webhook.\nNumber of users interested in the event.\nThe Id of the <code>User</code> that sent the reaction.\nID of the user.\nThe user that did this action on a target.\nID of the user which generated the content which triggered …\nThe id of the user.\nThe ID of the user that is granted access to the SKU.\nThe maximum number of members allowed in the channel.\nThe resolved users.\nList of users referenced in the audit log.\nHow many times the invite has been used (always will be 0).\nThe amount of times that an invite has been used.\nThe choice value.\nThe given value.\nThe value to be sent for this option.\nWhen sending: Pre-filled value for this component; max …\nThe value of the field.\nThe vanity url code for the guild, if it has one.\nThe vanity url code for the guild, if it has one.\nIndicator of the current verification level of the guild.\nIndicator of the current verification level of the guild.\nWhether this connection has been verified and the user has …\nWhether the email on this account has been verified\nAn autoincremented version identifier updated during …\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nAPI version\nThe embed’s video information.\nThe video quality mode for a voice channel.\nThe visibility of this connection.\nA mapping of <code>User</code>s to their current voice state.\nList of bytes representing a sampled waveform (present if …\nThe Id of the webhook that sent this message, if one did.\nThe created webhook ID in the target channel\nList of webhooks referenced in the audit log.\nThe channels shown in the welcome screen.\nThe welcome screen of the guild.\nThe welcome screen of the guild.\nThe channel id that the widget will generate an invite to, …\nThe channel id that the widget will generate an invite to, …\nWhether or not the guild widget is enabled.\nWhether or not the guild widget is enabled.\nIf the attachment is an image, then the width of the image …\nThe width of the image.\nThe width of the thumbnail in pixels.\nThe width of the video in pixels.\nAdditional explanation that will be shown to members …\nWhich permissions the bot had\nWhich permissions were required for the operation\nWhether the emoji is animated.\nThe Id of the custom <code>Emoji</code>.\nThe name of the custom emoji. This is primarily used for …\nSubstrings which should not trigger the rule (Maximum of …\nSubstrings which should not trigger the rule (Maximum of …\nTotal number of unique role and user mentions allowed per …\nThe internally pre-defined wordsets which will be searched …\nRegular expression patterns which will be matched against …\nSubstrings which will be searched for in content (Maximum …\nAn APNG format animated sticker.\nA GIF format animated sticker.\nA sticker uploaded to a Boosted guild for the guild’s …\nA LOTTIE format animated sticker.\nA PNG format sticker.\nAn official sticker in a pack, part of Nitro or in a …\nA sticker sent with a message.\nDifferentiates between sticker formats.\nThe smallest amount of data required to render a sticker.\nA sticker sent with a message.\nDifferentiates between sticker types.\nVariant value is unknown.\nVariant value is unknown.\nWhether or not this guild sticker can be used, may be …\nThe unique ID given to the sticker pack’s banner image.\nID of a sticker in the pack which is shown as the pack’s …\nDescription of the sticker pack.\nDescription of the sticker\nThe type of sticker format.\nThe type of sticker format.\nId of the guild that owns this sticker.\nThe unique ID given to this sticker.\nThe unique ID given to this sticker sticker pack.\nThe unique ID given to this sticker.\nThe type of sticker.\nThe name of the sticker.\nThe name of the sticker pack\nThe name of the sticker.\nThe unique ID of the pack the sticker is from.\nThe unique ID given to the pack’s SKU.\nA sticker’s sort order within a pack.\nThe stickers in the pack\nFor guild stickers, the Discord name of a unicode emoji …\nUser that uploaded the sticker. This will be <code>None</code> if the …\nAn error from the <code>parse</code> function.\nSignifies the failure to parse the <code>Timestamp</code> from an RFC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe category of parse error\nInformation about the current user.\nThe representation of a user’s status.\nPremium types denote the level of premium a user has. …\nVariant value is unknown.\nInformation about a user.\nUser’s public flags\nThe user’s banner colour encoded as an integer …\nOptional avatar hash.\nOptional banner hash.\nIndicator of whether the user is a bot.\nThe account’s discriminator to differentiate the user …\nThe user’s email\nThe flags on a user’s account\nThe account’s display name, if it is set. For bots this …\nThe unique Id of the user. Can be used to calculate the …\nThe user’s chosen language option\nOnly included in <code>Message::mentions</code> for messages from the …\nWhether the user has two factor enabled on their account\nThe account’s username. Changing username will trigger a …\nThe type of Nitro subscription on a user’s account\nThe public flags on a user’s account\nWhether the user is an Official Discord System user (part …\nWhether the email on this account has been verified\nInformation about an available voice region.\nA user’s state within a voice channel.\nWhether it is a custom voice region, which is used for …\nWhether it is a deprecated voice region, which you should …\nThe internal Id of the voice region.\nA recognizable name of the location of the voice region.\nWhether the voice region is optimal for use by the current …\nWhen unsuppressed, non-bot users will have this set to the …\nApplication webhooks are webhooks used with Interactions.\nAn indicator that the webhook is managed by Discord for …\nAn indicator that the webhook can post messages to …\nVariant value is unknown.\nA representation of a webhook, which is a low-effort way …\nThe guild object returned by a <code>Webhook</code>, of type …\nA representation of a type of webhook.\nThe bot/OAuth2 application that created this webhook.\nThe default avatar.\nThe Id of the channel that owns the webhook.\nThe Id of the guild that owns the webhook.\nThe hash of the icon used by the guild.\nThe unique Id.\nThe unique Id identifying the guild.\nThe unique Id of the channel.\nThe type of the webhook.\nThe default name of the webhook.\nThe name of the guild.\nThe name of the channel.\nThe channel that this webhook is following (returned for …\nThe guild of the channel that this webhook is following …\nThe webhook’s secure token.\nThe url used for executing the webhook (returned by the …\nThe user that created the webhook.\nWhen an application id was expected but missing.\nThere was an error building a URL.\nWhen attempting to delete below or above the minimum or …\nThis trait will be required by functions that need <code>Http</code> …\nAn indication that you cannot crosspost a <code>Message</code>.\nWhen attempting to edit a voice message.\nAn indication that a <code>Channel</code> could not be found by Id in …\nThe Client is the way to be able to start sending …\nA client error.\nAn error returned from the <code>Client</code>.\nThe connection closed, potentially uncleanly.\nThe context is a general utility struct provided on event …\nAn error while decoding a payload.\nWhen attempting to delete a number of days’ worth of …\nWhen attempting to delete a built in nitro sticker instead …\nWhen disallowed gateway intents are provided.\nWhen attempting to send a message with over 10 embeds.\nIndicates that the textual content of an embed exceeds the …\nThe core trait for handling events by serenity.\nInput exceeded a limit. Providing the input and the limit …\nExpected a Hello during a handshake\nThere was an error with a format.\nAn error from the <code>gateway</code> module.\nAn error that occurred while attempting to deal with the …\nGateway Intents will limit the events your bot will …\nAn indication that a <code>Guild</code> could not be found by Id in the …\nWhen there was an error sending a heartbeat.\nIndicates that there are hierarchy problems restricting an …\nAn error from the <code>http</code> module.\nWhen invalid authentication (a bad token) was sent in the …\nAn indicator that the <code>ChannelType</code> cannot perform an action.\nWhen undocumented gateway intents are provided.\nExpected a Ready or an InvalidateSession\nHeader value contains invalid input.\nIndicates that you do not have the required permissions to …\nWhen using a proxy with an invalid port.\nWhen using a proxy with an invalid scheme.\nWhen invalid sharding data was sent in the IDENTIFY.\nAn indicator that the current user cannot perform an …\nWhen parsing a Webhook fails due to invalid input.\nAn <code>std::io</code> error.\nAn indicator that an item is missing from the <code>Cache</code>, and …\nAn error from the <code>serde_json</code> crate.\nAn indication that a <code>Member</code> could not be found by Id in …\nAllows something - such as a channel or role - to be …\nAn indication that a <code>Message</code> has already been crossposted, …\nIndicates that a <code>Message</code>s content was too long and will …\nIndicates that the current user is attempting to Direct …\nAn error from the <code>model</code> module.\nAn error returned from the <code>model</code> module.\nAn asynchronous <code>Mutex</code>-like type.\nIndicates that the webhook name is over the 100 characters …\nIndicates that the webhook name is under the 2 characters …\nWhen no authentication was sent in the IDENTIFY.\nWhen a session Id was expected (for resuming), but was not …\nIndicates that the sticker file is missing.\nIndicates that the webhook token is missing.\nIndicates that the bot is not author of the message. This …\nThe input is not in the specified range. Returned by …\nSome other error. This is only used for “Expected value …\nWhen a shard would have too many guilds assigned to it.\nWhen the decoding of a ratelimit header could not be …\nWhen the decoding of a ratelimit header could not be …\nThis core trait for handling raw events\nFailed to reconnect after a number of attempts.\nReqwest’s Error contain information on why sending a …\nAn indication that a <code>Role</code> could not be found by Id in the …\nAn asynchronous reader-writer lock.\nA common error enum returned by most of the library’s …\nWhen a shard has completely failed to reboot after resume …\nWhen all shards that the client is responsible for have …\nWhen attempting to send a message with over 3 stickers.\nAn error from the <code>tungstenite</code> crate.\nTypeMap is a simple abstraction around the standard library…\nTypeMapKey is used to declare key types that are eligible …\nWhen a non-successful status code was received for a …\nWhen parsing an URL failed due to invalid input.\nAn error from the <code>url</code> crate.\nDefines the value type that corresponds to this <code>TypeMapKey</code>.\nIndicates that a member, role or channel from the wrong …\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was updated.\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>RwLock</code> with shared read access.\nBlockingly locks this <code>RwLock</code> with exclusive write access.\nThe cache for the client.\nDispatched when the cache has received and inserted all …\nDispatched when a category is created.\nDispatched when a category is deleted.\nDispatched when a channel is created.\nDispatched when a channel is deleted.\nDispatched when a pin is added, deleted.\nDispatched when a channel is updated.\nClears all entries in the map.\nDispatched when the permissions of an application command …\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nReturns <code>true</code> if the map contains a value for the specified …\nCreates a new instance of <code>TypeMap</code> with a custom storage …\nA TypeMap which requires types to be Send + Sync. This is …\nA clone of <code>Client::data</code>. Refer to its documentation for …\nDispatched when a user subscribes to a SKU.\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been updated, …\nRetrieve the entry based on its <code>TypeMapKey</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve a reference to a value based on its <code>TypeMapKey</code>. …\nRetrieve a mutable reference to a value based on its …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nDispatched when the emojis are updated.\nDispatched when a guild’s integration is added, updated …\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when the data for offline members was requested.\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nAn HTTP client.\nInserts a new value based on its <code>TypeMapKey</code>. If the value …\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is updated.\nDispatched when an interaction is created (e.g a slash …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the mutex, returning the underlying data.\nConsumes the lock, returning the underlying data.\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nReturns an indicator whether the map is empty (no entries).\nReturns the amount of entries in the map.\nLocks this mutex, causing the current task to yield until …\nLocks this mutex, causing the current task to yield until …\nCreates a <code>Mention</code> that will be able to notify or create a …\nDispatched when a message is created.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nDispatched when a message is updated.\nCreates a new instance of <code>TypeMap</code>.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when an HTTP rate limit is hit\nDispatched when any event occurs\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nLocks this <code>RwLock</code> with shared read access, causing the …\nLocks this <code>RwLock</code> with shared read access, causing the …\nDispatched upon startup.\nRemoves a value from the map based on its <code>TypeMapKey</code>.\nDispatched upon reconnection.\nThe messenger to communicate with the shard runner.\nThe ID of the shard this context is related to.\nA HashMap of all shards instantiated by the Client.\nDispatched when a shard’s connection stage is updated\nDispatched when every shard has received a Ready event\nDispatched when a stage instance is created.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is updated.\nDispatched when a thread is created or the current user is …\nDispatched when a thread is deleted.\nDispatched when the current user gains access to a channel.\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when anyone is added to or removed from a …\nDispatched when a thread is updated.\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nDispatched when a user starts typing.\nDispatched when the bot’s data is updated.\nDispatched when a voice channel’s status is updated.\nDispatched when a guild’s voice server was updated (or …\nDispatched when a user joins, leaves or moves to a voice …\nDispatched when a guild’s webhook is updated.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nURL that the client’s shards will use to connect to the …\nWhich permissions the bot had\nWhich permissions were required for the operation\nError that can be return by <code>validate</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValidates that a token is likely in a valid format.\nParse a value from a string in context of a received …\nError that can be returned from <code>Channel::convert</code>.\nDescribes formatting on string content\nFormatting modifiers for MessageBuilder content pushes\nStruct that allows to alter <code>content_safe</code>’s behaviour.\nConvenience builder to create a modal, wait for the user …\nA builder for constructing a personal <code>Message</code> instance. …\nA trait with additional functionality over the …\nError that can be returned from <code>Emoji::convert</code>.\nThe associated error which can be returned from parsing.\nGuild was not in cache, or guild HTTP request failed.\nRepresents a combination of a timestamp and a style for …\nAn error that can occur when parsing a <code>FormattedTimestamp</code> …\nEnum representing various styles for formatting time in …\nError that can be returned from <code>GuildChannel::convert</code>.\nThe guild in which the parser was invoked is not in cache.\nError that can be returned from <code>Guild::convert</code>.\nWhen message data retrieval via HTTP failed\nWhen channel retrieval via HTTP failed\nWhen channel retrieval via HTTP failed\nHTTP error while retrieving guild roles.\nWhen the <code>gateway</code> feature is disabled and the required …\nRepresents a long date format, e.g., “November 17, 2023…\nRepresents a long date and time format, e.g., “Thursday, …\nRepresents a long time format, e.g., “12:34:56 PM”.\nWhen the provided string does not adhere to any known …\nError that can be returned from <code>Member::convert</code>.\nThe Message Builder is an ergonomic utility to easily …\nError that can be returned from <code>Message::convert</code>.\nNo cache, so no guild search could be done.\nWhen the referenced channel is not a guild channel\nThe provided member string failed to parse, or the parsed …\nThe provided user string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided guild string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided emoji string failed to parse, or the parsed …\nWhen the guild’s roles were not found in cache.\nWhen the operation was invoked outside a guild.\nParser was invoked outside a guild.\nParser was invoked outside a guild.\nRepresents a relative time format, indicating the time …\nError that can be returned from <code>Role::convert</code>.\nRepresents a short date format, e.g., “2023-11-17”.\nRepresents a short date and time format, e.g., “November …\nRepresents a short time format, e.g., “12:34 PM”.\nError that can be returned from <code>User::convert</code>.\nTransforms role, channel, user, <code>@everyone</code> and <code>@here</code> …\nParses a string <code>s</code> as a command parameter of this type.\nErrors\nAdds an input text field.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience method to add a multi-line input text field.\nRetrieves an Id from a channel mention.\nRetrieves the animated state, name and Id from an emoji …\nRetrieves the “code” part of an invite out of a URL.\nRetrieves IDs from “{channel ID}-{message ID}” …\nRetrieves guild, channel, and message ID from a message …\nTurns a string into a vector of string arguments, …\nRetrieves an Id from a role mention.\nRetrieves an Id from a user mention.\nRetrieves the username and discriminator out of a user tag …\nParses the id and token from a webhook url. Expects a …\nPushes a named link to a message, intended for use in …\nPushes a named link intended for use in an embed, but with …\nCalculates the Id of the shard responsible for a guild, …\nConvenience method to add a single-line input text field.\nSets a timeout when waiting for the modal response.\nValidates that a token is likely in a valid format.\nExpected a certain argument type at a certain position in …\nImplemented for all types that can be used in a context …\nHTTP error occurred while retrieving the model type from …\nThe argument passed by the user is invalid in this …\nA string parameter was found, but it could not be parsed …\nPossible errors when parsing slash command arguments\nImplement this trait on types that you want to use as a …\nIf this is a choice parameter, returns the choices\nIf this is a choice parameter, returns the choices\nCreate a slash command parameter equivalent to type T.\nFull version of <code>crate::SlashArgument::create</code>.\nExtract a Rust value of type T from the slash command …\nFull version of <code>crate::SlashArgument::extract</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMacro for extracting and parsing slash command arguments …\nFull version of <code>crate::SlashArgument::choices</code>.\nConvert an action function pointer that takes Self as an …\nA short string describing what specifically is …\nError that occurred while parsing the string into the …\nOriginal input string\nApplication command context\nApplication command specific context passed to command …\nA command argument failed to parse from the Discord …\nInvoked from an autocomplete interaction\nType returned from <code>#[poise::command]</code> annotated functions, …\nInvoked from an application command\nError occurred during command execution\nProvided pre-command check either errored, or returned …\nSpecifies if the current invokation is from a Command or …\nPanic occurred at any phase of command execution after …\nA single parameter of a <code>crate::Command</code>\nA single drop-down choice in a slash command choice …\nExpected a certain argument type at a certain position in …\nWrapper around either <code>crate::ApplicationContext</code> or …\nPossible actions that a context menu entry can have\nCommand was invoked before its cooldown expired\nCommand was invoked but the channel was a non-DM channel\n<code>crate::PrefixFrameworkOptions::dynamic_prefix</code> or …\nUser code threw an error in generic event event handler\nAny error that can occur while the bot runs. Either thrown …\nFramework configuration\nCommand was invoked but the channel was a DM channel\nA case-sensitive string literal prefix (passed to …\nContext menu entry on a message\nThe invocation message was posted directly (common case)\nThe event that triggered a prefix command execution\nThe message was edited, and was already a valid invocation …\nThe message was edited, and was not a valid invocation …\nCommand was invoked but the bot is lacking the permissions …\nCommand was invoked but the user is lacking the …\nAn error occurred in …\nA non-owner tried to invoke an owners-only command\nCommand was invoked but the channel wasn’t a NSFW channel\nTrimmed down, more general version of <code>Context</code>\nPossible ways to define a command prefix\nPrefix command context\nPrefix-specific context passed to command invocations.\nPrefix-specific framework configuration\nRegular expression which matches the prefix\nUser code threw an error in user data setup\nCommand was invoked without specifying a subcommand, but …\nA message had the correct prefix but the following string …\nThe command name from the interaction is unrecognized\nContext menu entry on a user\nThe function that is called to execute the actual command\nList of additional bot prefixes\nAlternative triggers for the command (prefix-only)\nDefault set of allowed mentions to use for all responses\nEntire argument string\nSlash command arguments\nGet the author of the command message or application …\nGet the author of the command message or application …\nGet the author of the command message or application …\nID of the invocation author\nReturns the author of the invoking message or interaction, …\nReturns the author of the invoking message or interaction, …\nReturns the author of the invoking message or interaction, …\nOptionally, a callback that is invoked on autocomplete …\nWhether to broadcast a typing indicator while executing …\nReturns serenity’s cache which stores various useful …\nReturns serenity’s cache which stores various useful …\nReturns serenity’s cache which stores various useful …\nWhether command names should be compared …\nIdentifier for the category that this command will be …\nReturn the channel ID of this context\nReturn the channel ID of this context\nReturn the channel ID of this context\nID of the invocation channel\nIf this parameter is a channel, users can only enter these …\nIf any of these functions returns false, this command will …\nIf this parameter is a choice parameter, this is the fixed …\nReturns a reference to the command.\nAdd a new command to the framework\nReturns a reference to the command.\nReturns a reference to the command.\nThe command object which is the current command\nThe command object which is the current command\nProvide a callback to be invoked before every command. The …\nList of commands in the framework\nCallback to execute when this command is invoked in a …\nContext menu specific name for this command, displayed in …\nConfiguration for the <code>crate::CooldownTracker</code>\nCreate a <code>crate::CooldownContext</code> based off the underlying …\nCreate a <code>crate::CooldownContext</code> based off the underlying …\nCreate a <code>crate::CooldownContext</code> based off the underlying …")
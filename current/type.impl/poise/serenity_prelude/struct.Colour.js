(function() {
    var type_impls = Object.fromEntries([["poise",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Clone-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#266\">source</a><a href=\"#impl-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BLITZ_BLUE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#268\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.BLITZ_BLUE\" class=\"constant\">BLITZ_BLUE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(111, 198, 226)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BLUE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#270\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.BLUE\" class=\"constant\">BLUE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(52, 152, 219)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BLURPLE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#272\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.BLURPLE\" class=\"constant\">BLURPLE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(114, 137, 218)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_BLUE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#274\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_BLUE\" class=\"constant\">DARK_BLUE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(32, 102, 148)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_GOLD\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#276\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_GOLD\" class=\"constant\">DARK_GOLD</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(194, 124, 14)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_GREEN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#278\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_GREEN\" class=\"constant\">DARK_GREEN</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(31, 139, 76)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_GREY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#280\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_GREY\" class=\"constant\">DARK_GREY</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(96, 125, 139)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_MAGENTA\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#282\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_MAGENTA\" class=\"constant\">DARK_MAGENTA</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(173, 20, 87)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_ORANGE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#284\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_ORANGE\" class=\"constant\">DARK_ORANGE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(168, 67, 0)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_PURPLE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#286\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_PURPLE\" class=\"constant\">DARK_PURPLE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(113, 54, 138)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_RED\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#288\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_RED\" class=\"constant\">DARK_RED</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(153, 45, 34)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARK_TEAL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#290\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARK_TEAL\" class=\"constant\">DARK_TEAL</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(17, 128, 106)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DARKER_GREY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#292\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.DARKER_GREY\" class=\"constant\">DARKER_GREY</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(84, 110, 122)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FABLED_PINK\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#294\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.FABLED_PINK\" class=\"constant\">FABLED_PINK</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(250, 177, 237)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FADED_PURPLE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#296\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.FADED_PURPLE\" class=\"constant\">FADED_PURPLE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(136, 130, 196)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.FOOYOO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#298\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.FOOYOO\" class=\"constant\">FOOYOO</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(17, 202, 128)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.GOLD\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#300\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.GOLD\" class=\"constant\">GOLD</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(241, 196, 15)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.KERBAL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#302\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.KERBAL\" class=\"constant\">KERBAL</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(186, 218, 85)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LIGHT_GREY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#304\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.LIGHT_GREY\" class=\"constant\">LIGHT_GREY</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(151, 156, 159)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.LIGHTER_GREY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#306\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.LIGHTER_GREY\" class=\"constant\">LIGHTER_GREY</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(149, 165, 166)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAGENTA\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#308\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.MAGENTA\" class=\"constant\">MAGENTA</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(233, 30, 99)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MEIBE_PINK\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#310\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.MEIBE_PINK\" class=\"constant\">MEIBE_PINK</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(230, 131, 151)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ORANGE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#312\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.ORANGE\" class=\"constant\">ORANGE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(230, 126, 34)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PURPLE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#314\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.PURPLE\" class=\"constant\">PURPLE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(155, 89, 182)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.RED\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#316\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.RED\" class=\"constant\">RED</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(231, 76, 60)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ROHRKATZE_BLUE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#318\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.ROHRKATZE_BLUE\" class=\"constant\">ROHRKATZE_BLUE</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(117, 150, 255)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ROSEWATER\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#320\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.ROSEWATER\" class=\"constant\">ROSEWATER</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(246, 219, 216)</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.TEAL\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#322\">source</a><h4 class=\"code-header\">pub const <a href=\"poise/serenity_prelude/struct.Colour.html#associatedconstant.TEAL\" class=\"constant\">TEAL</a>: <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a> = _</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a>, setting its RGB value to <code>(26, 188, 156)</code>.</p>\n</div></details></div></details>",0,"poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#75\">source</a><a href=\"#impl-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#92\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Generates a new Colour with the given integer value set.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>Create a new Colour, and then ensure that its inner value is equivalent to a specific RGB\nvalue, retrieved via <a href=\"poise/serenity_prelude/struct.Colour.html#method.tuple\" title=\"method poise::serenity_prelude::Colour::tuple\"><code>Self::tuple</code></a>:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"kw\">let </span>colour = Colour::new(<span class=\"number\">6573123</span>);\n\n<span class=\"macro\">assert_eq!</span>(colour.tuple(), (<span class=\"number\">100</span>, <span class=\"number\">76</span>, <span class=\"number\">67</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rgb\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#125\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.from_rgb\" class=\"fn\">from_rgb</a>(red: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, green: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, blue: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Generates a new Colour from an RGB value, creating an inner u32 representation.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Creating a <a href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\"><code>Colour</code></a> via its RGB values will set its inner u32 correctly:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert!</span>(Colour::from_rgb(<span class=\"number\">255</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>).<span class=\"number\">0 </span>== <span class=\"number\">0xFF0000</span>);\n<span class=\"macro\">assert!</span>(Colour::from_rgb(<span class=\"number\">217</span>, <span class=\"number\">23</span>, <span class=\"number\">211</span>).<span class=\"number\">0 </span>== <span class=\"number\">0xD917D3</span>);</code></pre></div>\n<p>And you can then retrieve those same RGB values via its methods:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"kw\">let </span>colour = Colour::from_rgb(<span class=\"number\">217</span>, <span class=\"number\">45</span>, <span class=\"number\">215</span>);\n\n<span class=\"macro\">assert_eq!</span>(colour.r(), <span class=\"number\">217</span>);\n<span class=\"macro\">assert_eq!</span>(colour.g(), <span class=\"number\">45</span>);\n<span class=\"macro\">assert_eq!</span>(colour.b(), <span class=\"number\">215</span>);\n<span class=\"macro\">assert_eq!</span>(colour.tuple(), (<span class=\"number\">217</span>, <span class=\"number\">45</span>, <span class=\"number\">215</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.r\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#139\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.r\" class=\"fn\">r</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the red RGB component of this Colour.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::new(<span class=\"number\">6573123</span>).r(), <span class=\"number\">100</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.g\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#153\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.g\" class=\"fn\">g</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the green RGB component of this Colour.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::new(<span class=\"number\">6573123</span>).g(), <span class=\"number\">76</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.b\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#167\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.b\" class=\"fn\">b</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the blue RGB component of this Colour.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::new(<span class=\"number\">6573123</span>).b(), <span class=\"number\">67</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tuple\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#184\">source</a><h4 class=\"code-header\">pub const fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.tuple\" class=\"fn\">tuple</a>(self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class=\"docblock\"><p>Returns a tuple of the red, green, and blue components of this Colour.</p>\n<p>This is equivalent to creating a tuple with the return values of <a href=\"poise/serenity_prelude/struct.Colour.html#method.r\" title=\"method poise::serenity_prelude::Colour::r\"><code>Self::r</code></a>, <a href=\"poise/serenity_prelude/struct.Colour.html#method.g\" title=\"method poise::serenity_prelude::Colour::g\"><code>Self::g</code></a>,\nand <a href=\"poise/serenity_prelude/struct.Colour.html#method.b\" title=\"method poise::serenity_prelude::Colour::b\"><code>Self::b</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::new(<span class=\"number\">6573123</span>).tuple(), (<span class=\"number\">100</span>, <span class=\"number\">76</span>, <span class=\"number\">67</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hex\" class=\"method\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#201\">source</a><h4 class=\"code-header\">pub fn <a href=\"poise/serenity_prelude/struct.Colour.html#tymethod.hex\" class=\"fn\">hex</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Returns a hexadecimal string of this Colour.</p>\n<p>This is equivalent to passing the integer value through <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\"><code>std::fmt::UpperHex</code></a> with 0\npadding and 6 width.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::new(<span class=\"number\">6573123</span>).hex(), <span class=\"string\">\"644C43\"</span>);</code></pre></div>\n</div></details></div></details>",0,"poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Debug-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Default-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a>, &lt;__D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(u8,+u8,+u8)%3E-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#259\">source</a><a href=\"#impl-From%3C(u8,+u8,+u8)%3E-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)&gt; for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#261\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>)) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Constructs a Colour from RGB.</p>\n</div></details></div></details>","From<(u8, u8, u8)>","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#206\">source</a><a href=\"#impl-From%3Ci32%3E-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#220\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Constructs a Colour from a i32.</p>\n<p>This is used for functions that accept <code>Into&lt;Colour&gt;</code>.</p>\n<p>This is useful when providing hex values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::from(<span class=\"number\">0xDEA584</span>).tuple(), (<span class=\"number\">222</span>, <span class=\"number\">165</span>, <span class=\"number\">132</span>));</code></pre></div>\n</div></details></div></details>","From<i32>","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu32%3E-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#225\">source</a><a href=\"#impl-From%3Cu32%3E-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#237\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Constructs a Colour from a u32.</p>\n<p>This is used for functions that accept <code>Into&lt;Colour&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::from(<span class=\"number\">6573123u32</span>).r(), <span class=\"number\">100</span>);</code></pre></div>\n</div></details></div></details>","From<u32>","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#242\">source</a><a href=\"#impl-From%3Cu64%3E-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#254\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h4></section></summary><div class=\"docblock\"><p>Constructs a Colour from a u32.</p>\n<p>This is used for functions that accept <code>Into&lt;Colour&gt;</code>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>serenity::model::Colour;\n\n<span class=\"macro\">assert_eq!</span>(Colour::from(<span class=\"number\">6573123u64</span>).r(), <span class=\"number\">100</span>);</code></pre></div>\n</div></details></div></details>","From<u64>","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Ord-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#854-856\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#875-877\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#901-903\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-PartialEq-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#261\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-PartialOrd-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1195\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1213\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1231\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","poise::serenity_prelude::model::Color"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Serialize-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","poise::serenity_prelude::model::Color"],["<section id=\"impl-Copy-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Copy-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section>","Copy","poise::serenity_prelude::model::Color"],["<section id=\"impl-Eq-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-Eq-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section>","Eq","poise::serenity_prelude::model::Color"],["<section id=\"impl-StructuralPartialEq-for-Colour\" class=\"impl\"><a class=\"src rightside\" href=\"src/serenity/model/colour.rs.html#69\">source</a><a href=\"#impl-StructuralPartialEq-for-Colour\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"poise/serenity_prelude/struct.Colour.html\" title=\"struct poise::serenity_prelude::Colour\">Colour</a></h3></section>","StructuralPartialEq","poise::serenity_prelude::model::Color"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[63956]}
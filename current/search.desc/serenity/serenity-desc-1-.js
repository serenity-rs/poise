searchState.loadedDescShard("serenity", 1, "Creates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nReturns the blue RGB component of this Colour.\nColour constants used by Discord for their branding, role …\nConstructs a Colour from RGB.\nConstructs a Colour from a i32.\nConstructs a Colour from a u32.\nConstructs a Colour from a u32.\nReturns the argument unchanged.\nGenerates a new Colour from an RGB value, creating an …\nReturns the green RGB component of this Colour.\nReturns a hexadecimal string of this Colour.\nCalls <code>U::from(self)</code>.\nGenerates a new Colour with the given integer value set.\nReturns the red RGB component of this Colour.\nReturns a tuple of the red, green, and blue components of …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(35, 39, 42)</code>.\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(237, 66, 69)</code>…\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(31, 139, 76)</code>…\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(173, 20, 87)</code>…\nCreates a new <code>Colour</code>, setting its value to <code>rgb(168, 67, 0)</code>.\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(153, 45, 34)</code>…\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(233, 30, 99)</code>…\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to …\nCreates a new <code>Colour</code>, setting its value to <code>rgb(231, 76, 60)</code>…\nCreates a new <code>Colour</code>, setting its value to …\nInformation about a connection between the current user …\nThe visibility of a user connection on a user’s profile.\nVisible to everyone\nInvisible to everyone except the user themselves\nVariant value is unknown.\nWhether friend sync is enabled for this connection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe ID of the account on the other side of this connection.\nA list of partial guild <code>Integration</code>s that use this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe service that this connection represents (e.g. twitch, …\nThe username of the account on the other side of this …\nWhether this connection has been revoked and is no longer …\nWhether activities related to this connection will be …\nWhether this connection has a corresponding third party …\nWhether this connection has been verified and the user has …\nThe visibility of this connection.\nWhen attempting to delete below or above the minimum or …\nAn indication that you cannot crosspost a <code>Message</code>.\nWhen attempting to edit a voice message.\nAn indication that a <code>Channel</code> could not be found by Id in …\nWhen attempting to delete a number of days’ worth of …\nWhen attempting to delete a built in nitro sticker instead …\nWhen attempting to send a message with over 10 embeds.\nIndicates that the textual content of an embed exceeds the …\nAn error returned from the <code>model</code> module.\nAn indication that a <code>Guild</code> could not be found by Id in the …\nIndicates that there are hierarchy problems restricting an …\nAn indicator that the <code>ChannelType</code> cannot perform an action.\nIndicates that you do not have the required permissions to …\nAn indicator that the current user cannot perform an …\nAn indicator that an item is missing from the <code>Cache</code>, and …\nAn indication that a <code>Member</code> could not be found by Id in …\nAn indication that a <code>Message</code> has already been crossposted, …\nIndicates that a <code>Message</code>s content was too long and will …\nIndicates that the current user is attempting to Direct …\nIndicates that the webhook name is over the 100 characters …\nIndicates that the webhook name is under the 2 characters …\nIndicates that the sticker file is missing.\nIndicates that the webhook token is missing.\nIndicates that the bot is not author of the message. This …\nAn indication that a <code>Role</code> could not be found by Id in the …\nWhen attempting to send a message with over 3 stickers.\nIndicates that a member, role or channel from the wrong …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the model error is related to an item …\nWhich permissions the bot had\nWhich permissions were required for the operation\nA <code>Rule</code> was triggered and an action was executed.\nRequires <code>GatewayIntents::AUTO_MODERATION_EXECUTION</code>.\nA <code>Rule</code> was created.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> was deleted.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Rule</code> has been updated.\nRequires <code>GatewayIntents::AUTO_MODERATION_CONFIGURATION</code>.\nA <code>Channel</code> was created.\nEvent data for the channel creation event.\nA <code>Channel</code> has been deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe pins for a <code>Channel</code> have been updated.\nRequires <code>GatewayIntents::GUILDS</code> or …\nA <code>Channel</code> has been updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe permissions of an <code>Command</code> was changed.\nRequires no gateway intents.\nA user subscribed to a SKU.\nRequires no gateway intents.\nA user’s entitlement was deleted by Discord, or refunded.\nRequires no gateway intents.\nA user’s entitlement was updated or renewed.\nRequires no gateway intents.\nEvent received over a websocket connection\nDiscord docs.\nRequires <code>GatewayIntents::GUILD_MODERATION</code> and …\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRequires <code>GatewayIntents::GUILD_MODERATION</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA member’s roles have changed\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nRequires no gateway intents.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA scheduled event was created.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was deleted.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA scheduled event was updated.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has subscribed to a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA guild member has unsubscribed from a scheduled event.\nRequires <code>GatewayIntents::GUILD_SCHEDULED_EVENTS</code>.\nA <code>Sticker</code> was created, updated, or deleted\nRequires <code>GatewayIntents::GUILD_EMOJIS_AND_STICKERS</code>.\nRequires <code>GatewayIntents::GUILDS</code>.\nA guild integration was created\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nA guild integration was deleted\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nA guild integration was updated\nRequires <code>GatewayIntents::GUILD_INTEGRATIONS</code>.\nAn interaction was created.\nRequires no gateway intents.\nWhether the session can be resumed.\nAn <code>Invite</code> was created.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nAn <code>Invite</code> was deleted.\nRequires <code>GatewayIntents::GUILD_INVITES</code> and [`…\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGES</code> or …\nA user has voted on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA user has removed a previous vote on a Message Poll.\nRequires <code>GatewayIntents::GUILD_MESSAGE_POLLS</code> or …\nA message has been edited, either by the user or the system\nRequires <code>GatewayIntents::GUILD_MESSAGES</code>.\nA member’s presence state (or username or avatar) has …\nRequires <code>GatewayIntents::GUILD_PRESENCES</code>.\nThe presence list of the user’s friends should be …\nNot officially documented.\nA reaction was added to a message.\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nA reaction was removed to a message.\nA request was issued to remove all <code>Reaction</code>s from a <code>Message</code>…\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nSent when a bot removes all instances of a given emoji …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nRequires <code>GatewayIntents::GUILD_MESSAGE_REACTIONS</code> or …\nThe first event in a connection, containing the initial …\nThe “Ready” event, containing initial ready cache\nThe connection has successfully resumed after a disconnect.\nRequires no gateway intents.\nA stage instance was created.\nRequires <code>GatewayIntents::GUILDS</code>.\nA stage instance was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nA stage instance was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA thread was created or the current user was added to a …\nRequires <code>GatewayIntents::GUILDS</code>.\nA thread was deleted.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe current user gains access to a channel.\nRequires <code>GatewayIntents::GUILDS</code>.\nThe <code>ThreadMember</code> object for the current user is updated.\nRequires <code>GatewayIntents::GUILDS</code>, and, to receive this …\nAnyone is added to or removed from a thread.\nRequires <code>GatewayIntents::GUILD_MEMBERS</code>.\nA thread was updated.\nRequires <code>GatewayIntents::GUILDS</code>.\nA user is typing; considered to last 5 seconds\nRequires <code>GatewayIntents::GUILD_MESSAGE_TYPING</code> or …\nAn event type not covered by the above\nUpdate to the logged-in user’s information\nSent when properties about the current bot’s user change.\nFired when the status of a Voice Channel changes.\nRequires <code>GatewayIntents::GUILDS</code>.\nVoice server information is available\nRequires no gateway intents.\nA member’s voice state has changed\nRequires <code>GatewayIntents::GUILD_VOICE_STATES</code>.\nA webhook for a channel was updated in a <code>Guild</code>.\nRequires <code>GatewayIntents::GUILD_WEBHOOKS</code>.\nThe users who were added to the thread.\nWrites the updated data in this message update event into …\nThe channel that was created.\nWhether or not the invite is temporary (invited users will …\nID of the channel.\nThe parent channel Id whose threads are being synced. If …\nTotal number of expected chunks for this response.\nChunk index in the expected chunks for this response (0 &lt;= …\nUnique invite code.\nTime at which the invite was created.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuildUpdateEvent doesn’t have GuildCreate’s extra …\nID of the guild.\nGuild of the invite.\nID of the guild.\nThe guild Id.\nThe id of the Guild.\nThe id of the thread.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUser that created the invite.\nHow long the invite is valid for (in seconds).\nMaximum number of times the invite can be used.\nMember who started typing if this happened in a guild.\nThe approximate number of members in the thread, capped at …\nSet of guild members.\nAll thread member objects from the synced threads for the …\nReturn the event name of this event. Returns <code>None</code> if the …\nNonce used in the …\nWhen passing an invalid ID to …\nWhen passing true to …\nThe ids of the users who were removed from the thread.\nEmbedded application to open for this voice channel …\nType of target for this voice channel invite.\nUser whose stream to display for this voice channel stream …\nthey’re assigned a role).\nAll active threads in the given channels that the current …\nTimestamp of when the user started typing.\nID of the user.\nHow many times the invite has been used (always will be 0).\nEnables the following gateway events:\nEnables the following gateway events:\nRepresentation of an activity that a <code>User</code> is performing.\nThe assets for an activity.\nDiscord docs.\nRepresentation of an emoji used in a custom status\nA set of flags defining what is in an activity’s payload.\nInformation about an activity’s party.\nSecrets for an activity.\nTimestamps of when a user started and/or is ending their …\nDiscord docs.\nA representation of the data retrieved from the bot …\nInformation detailing the current active status of a <code>User</code>.\nAn indicator that the user is competing somewhere.\nAn indicator that the user uses custom statuses\nEnables the following gateway events for direct messages:\nEnables the following gateway events for direct messages:\nEnable following gateway events for direct messages:\nEnables the following gateway events for direct messages:\nWhether the activity can be embedded.\nEnables the following gateway events:\nBackwards compatibility with old gateway event name. Same …\nEnables the following gateway events:\nEnables the following gateway events:\nEnables the following gateway events:\nEnables the following gateway events:\nEnables the following gateway events in guilds:\nEnables the following gateway events for guilds:\nEnables the following gateway events in guilds:\nEnable following gateway event:\nEnables the following gateway events:\nEnables the following gateway event:\nEnables the following gateway events:\nEnables the following gateway event:\nEnables the following gateway event:\nA representation of the data retrieved from the gateway …\nGateway Intents will limit the events your bot will …\nWhether the activity is an instance activity.\nWhether the activity is joinable.\nWhether a request can be sent to join the user’s party.\nAn indicator that the user is listening to something.\nEnables receiving message content in gateway events\nWhether the activity party is friend only.\nWhether the activity party is in a voice channel.\nWhether the activity can be played.\nAn indicator that the user is playing a game.\nInformation detailing the current online status of a <code>User</code>.\nInformation about the user of a <code>Presence</code> event.\nAn initial set of information given after IDENTIFYing to …\nWhether the activity can be spectated.\nWhether the activity can be synced.\nInformation describing how many gateway sessions you can …\nAn indicator that the user is streaming to a service.\nVariant value is unknown.\nAn indicator that the user is watching something.\n<code>User</code>’s current activities.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nWhether this emoji is animated.\nContains id and flags\nThe ID of the application for the activity.\nImages for the presence and their texts.\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe buttons of this activity.\nThe devices a user are currently active on, if available.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nUnix timestamp (in milliseconds) of when the activity was …\nWhat the user is doing.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nEmoji currently used in custom status\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nActivity flags describing what the payload includes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nThe <code>GuildId</code> the presence update is coming from.\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nGuilds the user is in\nThe ID of the party.\nThe id of the emoji.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether or not the activity is an instanced game session.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempts to convert this <code>PresenceUser</code> instance into a <code>User</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nChecks if any of the included intents are privileged.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe secret for joining a party.\nThe type of activity being performed\nThe text shown on the button.\nThe ID for a large asset of the activity, usually a …\nText displayed when hovering over the large image of the …\nThe secret for a specific instanced match.\nThe number of identify requests allowed per 5 seconds.\nShorthand for checking that the set of intents contains …\nThe name of the activity.\nThe name of the emoji.\nGets all of the intents that aren’t considered …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nInformation about the user’s current party.\nGets all of the intents that are considered privileged by …\nThe number of sessions that you can still initiate within …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe number of milliseconds until the ratelimit period …\nGateway URL for resuming connections\nSecrets for Rich Presence joining and spectating.\nUsed for resuming connections\nInformation describing how many gateway sessions you can …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nShard information associated with this session, if sent …\nThe number of shards that is recommended to be used by the …\nUsed to show the party’s current and maximum size.\nThe ID for a small asset of the activity, usually a …\nText displayed when hovering over the small image of the …\nThe secret for spectating an activity.\nThe user’s current party status.\nThe user’s online status.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nUnix timestamps for the start and/or end times of the …\nAttempts to convert this <code>PresenceUser</code> instance into a <code>User</code>.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe total number of session starts within the ratelimit …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe gateway to connect to.\nThe Stream URL if <code>Self::kind</code> is <code>ActivityType::Streaming</code>.\nThe url opened when clicking the button.\nThe gateway to connect to.\nData about the associated user.\nInformation about the user including email\nAPI version\nThe <code>Guild</code> AFK timeout length.\nThe guild is age restricted.\nReceive notifications for everything.\nScan messages sent by all members.\nMember is exempt from guild verification requirements. …\nA representation of a banning of a user.\nThe response from <code>GuildId::bulk_ban</code>.\nMember has completed onboarding. Not editable\nA custom emoji.\nMember has left and rejoined the guild. Not editable\nThe nsfw level is not specified.\nDefault message notification level for a guild.\nMFA is enabled.\nRepresents a custom guild emoji, which can either be …\nThe guild is considered as explicit.\nSetting used to filter explicit messages from members.\nInformation about a Discord guild, such as channels, …\nVariant of <code>Guild</code> returned from <code>Http::get_guilds</code>.\nFlags for a guild member.\nPreview <code>Guild</code> information.\nRepresentation of the number of members that would be …\nA channel shown in the <code>GuildWelcomeScreen</code>.\nA <code>GuildWelcomeScreen</code> emoji.\nInformation relating to a guild’s welcome screen.\nA <code>Guild</code> widget.\nMust also be a member of the guild for longer than 10 …\nMust have a verified phone on the user’s Discord account.\nVarious information about integrations.\nIntegration account object.\nIntegration application object.\nThe behavior once the integration expires.\nMust have a verified email on the user’s Discord account.\nMust also be a registered user on Discord for longer than …\nInformation about a member of a guild.\nA helper class returned by <code>GuildId::members_iter</code>\nReceive only mentions.\nMulti-Factor Authentication level for guild moderators.\nDon’t scan any messages.\nMFA is disabled.\nDoes not require any verification.\nThe <code>Guild</code> nsfw level.\nPartial information about a <code>Guild</code>. This does not include …\nA partial amount of data for a member.\nThe guild’s premium tier, depends on the amount of users …\nInformation about a role within a guild. A role represents …\nThe tags of a <code>Role</code>.\nMember has started onboarding. Not editable\nSuppress server setup tips.\nSuppress member join notifications.\nHide member join sticker reply buttons.\nSuppress server boost notifications.\nSuppress role subscription purchase and renewal …\nHide role subscription sticker reply buttons.\nThe guild is considered as safe.\nInformation about a guild scheduled event.\nDiscord docs.\nSee <code>ScheduledEvent::privacy_level</code>.\nDiscord docs.\nDiscord docs.\nDiscord docs.\nDescribes a system channel flags.\nDiscord docs, extra fields.\nDescribes extra features of the message.\nGuild has not unlocked any Server Boost perks\nGuild has unlocked Server Boost level 1 perks\nGuild has unlocked Server Boost level 2 perks\nGuild has unlocked Server Boost level 3 perks\nData for an unavailable guild.\nA unicode emoji.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nThe level to set as criteria prior to a user being able to …\nScan messages from members without a role.\nAdds a <code>User</code> to this guild with a valid OAuth2 access token.\nAdds a <code>Role</code> to the member.\nAdds one or multiple <code>Role</code>s to the member.\nId of a voice channel that’s considered the AFK channel.\nInformation about the voice afk channel.\nInformation about the voice afk channel.\nThe amount of seconds a user can not show any activity in …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nWhether the emoji is animated.\nApplication ID of the guild creator if it is bot-created.\nApplication ID of the guild creator if it is bot-created.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nApproximate number of members in this guild.\nApproximate number of online members in this guild.\nApproximate number of non-offline members in this guild.\nApproximate number of non-offline members in this guild.\nAudit log types for administrative actions within guilds.\nGets a list of the guild’s audit log entries\nRetrieves a list of <code>AuditLogs</code> for the guild.\nAuto moderation types\nGets an auto moderation <code>Rule</code> of this guild by its ID via …\nGets an auto moderation <code>Rule</code> of this guild by its ID via …\nGets all auto moderation <code>Rule</code>s of this guild via HTTP.\nGets all auto moderation <code>Rule</code>s of this guild via HTTP.\nWhether the emoji can be used. This may be false when the …\nWhether this role is available for purchase.\nThe guild avatar hash\nReturns the formatted URL of the member’s per guild …\nReturns a builder which can be awaited to obtain a message …\nReturns a builder which can be awaited to obtain a message …\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reply</code>.\nSame as <code>Self::await_reply</code>.\nReturns a builder which can be awaited to obtain a message …\nReturns a builder which can be awaited to obtain a message …\nBan a <code>User</code> from the guild, deleting a number of days’ …\nBan a <code>User</code> from the guild, deleting a number of days’ …\nBan a <code>User</code> from the guild, deleting a number of days’ …\nBan the member from the guild with a reason. Refer to …\nBan a <code>User</code> from the guild with a reason. Refer to <code>Self::ban</code>…\nBan a <code>User</code> from the guild with a reason. Refer to <code>Self::ban</code>…\nThe guild’s banner, if it has one.\nThe guild’s banner, if it has one.\nReturns a formatted URL of the guild’s banner, if the …\nReturns the formatted URL of the guild’s banner image, …\nGets a list of the guild’s bans, with additional options …\nGets a list of the guild’s bans, with additional options …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe Id of the bot the <code>Role</code> belongs to.\nBans multiple users from the guild, returning the users …\nThe Id of the channel that the event belongs to, if any.\nThe channel Id.\nThe widget channel id.\nGets all of the guild’s channels over the REST API.\nGets all of the guild’s channels over the REST API.\nAll voice and text channels contained within a guild.\nDetermines the member’s colour.\nThe colour of the role.\nWhen the user’s timeout will expire and the user will be …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCreates a guild with the data provided.\nCreates an auto moderation <code>Rule</code> in the guild.\nCreates an auto moderation <code>Rule</code> in the guild.\nCreates a <code>GuildChannel</code> in the guild.\nCreates a new <code>Channel</code> in the guild.\nCreate a guild specific application <code>Command</code>.\nCreate a guild specific application <code>Command</code>.\nCreates an emoji in the guild with a name and …\nCreates an emoji in the guild with a name and …\nCreates an integration for the guild.\nCreates an integration for the guild.\nCreates a new role in the guild with the data set, if any.\nCreates a new role in the guild with the data set, if any.\nCreates a new scheduled event in the guild with the data …\nCreates a new sticker in the guild with the data set, if …\nCreates a new sticker in the guild with the data set, if …\nThe User that created the event.\nThe Id of the User that created the scheduled event.\nReturns a guild <code>Member</code> object for the current user.\nReturns a guild <code>Member</code> object for the current user.\nIndicator of whether the member can hear in voice channels.\nIndicator of whether the member can hear in voice channels.\nReturns the “default channel” of the guild for the …\nReturns the “default” channel of the guild for the …\nReturns the guaranteed “default” channel of the guild. …\nIndicator of whether notifications for all messages are …\nIndicator of whether notifications for all messages are …\nDeletes the emoji. This method requires the cache to fetch …\nDeletes the current guild if the current user is the owner …\nDeletes the role.\nDeletes the current guild if the current user is the owner …\nDeletes an auto moderation <code>Rule</code> from the guild.\nDeletes an auto moderation <code>Rule</code> from the guild.\nDelete guild application command by its Id.\nDelete guild application command by its Id.\nDeletes an <code>Emoji</code> from the guild.\nDeletes an <code>Emoji</code> from the guild.\nDeletes an integration by Id from the guild.\nDeletes an integration by Id from the guild.\nDeletes a <code>Role</code> by Id from the guild.\nDeletes a <code>Role</code> by Id from the guild.\nDeletes a <code>ScheduledEvent</code> by id from the guild.\nDeletes a <code>Sticker</code> by Id from the guild.\nDeletes a <code>Sticker</code> by Id from the guild.\nThe description for the guild, if the guild has the …\nThe server’s description, if it has one.\nThe description of the scheduled event, if any.\nThe server description shown in the welcome screen.\nThe description shown for the channel.\nThe server’s description, if it has one.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nTimes the user out until <code>time</code>.\nDisconnects the member from their voice channel if any.\nThe guild discovery splash hash it it has one.\nAn identifying hash of the guild discovery’s splash icon.\nAn identifying hash of the guild discovery’s splash icon.\nCalculates the member’s display name.\nReturns the DiscordTag of a Member, taking possible …\nEdits the emoji by updating it with a new name. This …\nEdits the member in place with the given data.\nEdits the current guild with new data where specified.\nEdits a <code>Role</code>, optionally setting its new fields.\nEdits the current guild with new data where specified.\nEdit an auto moderation <code>Rule</code>, given its Id.\nEdit an auto moderation <code>Rule</code>, given its Id.\nEdit a guild application command, given its Id.\nEdit a guild application command, given its Id.\nOverwrites permissions for a specific command.\nOverwrites permissions for a specific command.\nEdits an <code>Emoji</code>’s name in the guild.\nEdits an <code>Emoji</code>’s name in the guild.\nEdits the properties a guild member, such as muting or …\nEdits the properties a guild member, such as muting or …\nEdits the guild’s MFA level. Returns the new level on …\nEdits the guild’s MFA level. Returns the new level on …\nEdits the current user’s nickname for the guild.\nEdits the current user’s nickname for the guild.\nEdits a role, optionally setting its fields.\nEdits a role, optionally setting its fields.\nEdits the order of <code>Role</code>s. Requires the Manage Roles …\nEdits the order of <code>Role</code>s. Requires the Manage Roles …\nModifies a scheduled event in the guild with the data set, …\nEdits a sticker.\nEdits a sticker.\nEdits the guild’s welcome screen.\nEdits the guild’s welcome screen.\nEdits the guild’s widget.\nEdits the guild’s widget.\nGets an <code>Emoji</code> of this guild by its ID via HTTP.\nGets an <code>Emoji</code> of this guild by its ID via HTTP.\nThe emoji shown, if there is one.\nGets all <code>Emoji</code>s of this guild via HTTP.\nGets all <code>Emoji</code>s of this guild via HTTP.\nThe custom guild emojis.\nAll of the guild’s custom emojis.\nAll of the guild’s custom emojis.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nAllow a user to communicate, removing their timeout, if …\nWhether the widget is enabled.\nThe event’s ending time; optional.\nThe id of an entity associated with a guild scheduled …\nDefault explicit content filter level.\nDefault explicit content filter level.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nRetrieves the URL to the current member’s avatar, …\nThe guild features. See <code>Guild::features</code>\nThe guild features. More information available at …\nThe guild features. More information available at …\nSee <code>Guild::features</code>.\nFinds the <code>Guild</code> that owns the emoji by looking through the …\nGuild member flags.\nAny user-thread settings, currently only used for …\nFormats the emoji into a string that will cause Discord …\nMentions the user so that they receive a notification.\nFormat a mention for the role, pinging its members.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts this <code>Guild</code> instance into a <code>PartialGuild</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGets a partial amount of guild data by its Id.\nGets a partial amount of guild data by its Id.\nGets the guild active threads.\nGets the guild active threads.\nGet a specific guild application command by its Id.\nGet a specific guild application command by its Id.\nGet permissions for specific guild application command by …\nGet permissions for specific guild application command by …\nGet all guild application commands.\nGet all guild application commands.\nGet all guild application commands permissions only.\nGet all guild application commands permissions only.\nGet all guild application commands with localizations.\nGet all guild application commands with localizations.\nReturns which of two <code>User</code>s has a higher <code>Member</code> hierarchy.\nReturns which of two <code>User</code>s has a higher <code>Member</code> hierarchy.\nWhether this role is a guild’s linked role.\nOnly present in <code>IntegrationCreateEvent</code> and …\nThe unique Id of the guild that the member is a part of.\nThe unique Id of the guild that the member is a part of.\nID of the guild.\nThe Id of the Guild the Role is in.\nThe Id of the guild that the event belongs to.\nCheck that the role has the given permission.\nChecks whether the role has all of the given permissions.\nRetrieves the ID and position of the member’s highest …\nIndicator of whether the role is pinned above lesser roles.\nThe guild icon hash if it has one.\nThe hash of the icon used by the guild.\nRole icon image hash.\nThe hash of the icon used by the guild.\nThe hash of the icon of the guild.\nIcon hash, returned when in the template object\nIcon hash, returned when in the template object\nReturns a formatted URL of the guild’s icon, if the …\nReturns the formatted URL of the guild’s icon, if one …\nReturns the formatted URL of the guild’s icon, if the …\nThe Id of the emoji.\nThe guild Id.\nThe id of the thread.\nThe unique Id identifying the guild.\nThe Id of the role. Can be used to calculate the role’s …\nThe Id of the scheduled event.\nThe unique Id identifying the guild.\nThe unique Id of the guild.\nThe Id of the <code>Guild</code> that may be unavailable.\nThe hash of the event’s cover image, if present.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe Id of the integration the <code>Role</code> belongs to.\nGets all integration of the guild.\nGets all integration of the guild.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets all of the guild’s invites.\nRetrieves the active invites for the guild.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nChecks if the guild is ‘large’.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe time the current user last joined the thread.\nTimestamp representing the date when the member joined.\nTimestamp representing the date when the member joined.\nThe date that the current user joined the guild.\nKick the member from the guild.\nKicks a <code>Member</code> from the guild.\nKicks a <code>Member</code> from the guild.\nKicks the member from the guild, with a reason.\nErrors\nErrors\nThe type of the event, indicating if it will take place in …\nIndicator of whether the guild is considered “large” …\nLeaves the guild.\nLeaves the guild.\nWhether the emoji is managed via an <code>Integration</code> service.\nIndicator of whether the role is managed by an integration …\nThe maximum number of members for the guild.\nThe maximum number of members for the guild.\nThe maximum number of presences for the guild. The default …\nThe maximum number of presences for the guild. The default …\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a video channel.\nThe maximum amount of users in a video channel.\nGets a user’s <code>Member</code> for the guild by Id.\nGets a user’s <code>Member</code> for the guild by Id.\nAdditional information about the user.\nThe number of members in the guild.\nGets the highest role a <code>Member</code> of this Guild has.\nRetrieves the first <code>Member</code> found that matches the name - …\nCalculate a <code>Member</code>’s permissions in the guild.\nCalculate a <code>Member</code>’s permissions in the guild.\nGets a list of the guild’s members.\nGets a list of the guild’s members.\nUsers who are members of the guild.\nRetrieves all <code>Member</code> containing a given <code>String</code> as either …\nRetrieves all <code>Member</code> containing a given <code>String</code> in their …\nRetrieves all <code>Member</code> that start with a given <code>String</code>.\nRetrieves a tuple of <code>Member</code>s containing a given <code>String</code> in …\nGets a list of all the members (satisfying the status …\nIndicator of whether the role can be mentioned, similar to …\nOptional event location, only required for External events.\nIndicator of whether the guild requires multi-factor …\nIndicator of whether the guild requires multi-factor …\nMoves a member to a specific voice channel.\nMoves a member to a specific voice channel.\nMoves the member to a voice channel.\nIndicator of whether the member can speak in voice …\nIndicator of whether the member can speak in voice channels\nThe name of the emoji. It must be at least 2 characters …\nThe guild name.\nThe name of the guild.\nThe name of the role.\nThe name of the scheduled event.\nThe name of the guild.\nThe name of the guild.\nThe member’s nickname, if present.\nThe member’s nickname, if present.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe guild NSFW state. See <code>discord support article</code>.\nThe guild NSFW state. See <code>discord support article</code>.\nIndicator of whether the current user is the owner.\nThe Id of the <code>User</code> who owns the guild.\nThe Id of the <code>User</code> who owns the guild.\nCalculate a <code>PartialMember</code>’s permissions in a given …\nCalculate a <code>PartialMember</code>’s permissions in a given …\nIndicator that the member hasn’t accepted the rules of …\nIndicator that the member hasn’t accepted the rules of …\nReturns the guild-level permissions for the member.\nThe total permissions of the member in a channel, …\nThe total permissions of the member in a channel, …\nA set of permissions that the role has been assigned.\nThe permissions that the current user has.\nThe role’s position in the position list. Roles are …\nThe preferred locale of this guild only set if guild has …\nThe preferred locale of this guild only set if guild has …\nWhether the guild has the boost progress bar enabled\nWhether the guild has the boost progress bar enabled\nTimestamp representing the date since the member is …\nTimestamp representing the date since the member is …\nWhether this is the guild’s premium subscriber role.\nThe total number of users currently boosting this server.\nThe total number of users currently boosting this server.\nThe server’s premium boosting level.\nThe server’s premium boosting level.\nA mapping of <code>User</code>s’ Ids to their current presences.\nThe privacy level of the scheduled event.\nGets the number of <code>Member</code>s that would be pruned with the …\nRetrieves the count of the number of <code>Member</code>s that would be …\nThe number of members that would be pruned by the …\nThe id of the channel where admins and moderators of …\nThe id of the channel where admins and moderators of …\nThe reason given for this ban.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemoves a <code>Role</code> from the member.\nRemoves one or multiple <code>Role</code>s from the member.\nRe-orders the channels of the guild.\nRe-orders the channels of the guild.\nWhether the emoji name needs to be surrounded by colons in …\nObtain a reference to a role by its name.\nObtain a reference to a role by its name.\nCalculate a <code>Role</code>’s permissions in a given channel in the …\nCalculate a <code>Role</code>’s permissions in a given channel in the …\nRetrieves the full role data for the user’s roles.\nA list of <code>Role</code>s that are allowed to use the emoji. If …\nVector of Ids of <code>Role</code>s given to the member.\nVector of Ids of <code>Role</code>s given to the member.\nA mapping of the guild’s roles.\nA mapping of the guild’s roles.\nThe id of the channel where rules and/or guidelines are …\nThe id of the channel where rules and/or guidelines are …\nFetches a specified scheduled event in the guild, by Id. …\nFetches a list of interested users for the specified event.\nFetches a list of interested users for the specified …\nFetches a list of all scheduled events in the guild. If …\nThe stage instances in this guild.\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nOverride all guild application commands.\nOverride all guild application commands.\nReturns the Id of the shard associated with the guild.\nReturns the Id of the shard associated with the guild.\nThe guild splash hash if it has one.\nAn identifying hash of the guild’s splash icon.\nAn identifying hash of the guild’s splash icon.\nReturns the formatted URL of the guild’s splash image, …\nReturns the formatted URL of the guild’s splash image, …\nThe stage instances in this guild.\nStarts an integration sync for the given integration Id.\nStarts an integration sync for the given integration Id.\nStarts a prune of <code>Member</code>s.\nStarts a prune of <code>Member</code>s.\nThe event’s starting time.\nThe event’s status; either Scheduled, Active, Completed, …\nCustom guild stickers.\nAll of the guild’s custom stickers.\nAll of the guild’s custom stickers.\nStreams over all the members in a guild.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe id of this role’s subscription sku and listing.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSystem channel flags.\nSystem channel flags.\nThe ID of the channel to which system messages are sent.\nThe ID of the channel to which system messages are sent.\nThe tags this role has. It can be used to determine if …\nAll active threads in this guild that current user has …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether this guild is unavailable due to an outage.\nIndicator of whether the guild is unavailable.\nUnbans the <code>User</code> from the guild.\nUnbans a <code>User</code> from the guild.\nUnbans the given <code>User</code> from the guild.\nRole unicoded image.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nIf the member is currently flagged for sending excessive …\nIf the member is currently flagged for sending excessive …\nGenerates a URL to the emoji’s image.\nThe user who created the emoji.\nAttached User struct.\nAttached User struct.\nThe user that was banned.\nNumber of users interested in the event.\nThe id of the user.\nCalculate a <code>Member</code>’s permissions in a given channel in …\nCalculate a <code>Member</code>’s permissions in a given channel in …\nRetrieve’s the guild’s vanity URL.\nRetrieve’s the guild’s vanity URL.\nThe vanity url code for the guild, if it has one.\nThe vanity url code for the guild, if it has one.\nIndicator of the current verification level of the guild.\nIndicator of the current verification level of the guild.\nA mapping of <code>User</code>s to their current voice state.\nRetrieves the guild’s webhooks.\nRetrieves the guild’s webhooks.\nThe channels shown in the welcome screen.\nThe welcome screen of the guild.\nThe welcome screen of the guild.\nThe channel id that the widget will generate an invite to, …\nThe channel id that the widget will generate an invite to, …\nWhether or not the guild widget is enabled.\nWhether or not the guild widget is enabled.\nDetermines the action that was done on a target.\nAFK channel was changed.\nAFK timeout duration was changed.\nPermission on a text or voice channel was allowed for a …\nApplication ID of the added or removed webhook or bot.\nThread is now archived/unarchived.\nDiscord docs.\nDiscord docs.\nAuto archive duration of a thread was changed.\nDiscord docs.\nAvailability of a sticker was changed.\nUser avatar was changed.\nGuild banner was changed.\nVoice channel bitrate was changed.\nDiscord docs.\nChannel for invite code or guild scheduled event was …\nDiscord docs.\nInvite code was changed.\nRole color was changed.\nMember timeout state was changed.\nDiscord docs.\nUser was server deafened/undeafened.\nDefault auto archive duration for newly created threads …\nDefault message notification level for a server was …\nPermission on a text or voice channel was denied for a …\nDescription for guild, sticker, or guild scheduled event …\nGuild’s discovery splash was changed.\nDiscord docs.\nIntegration emoticons was enabled/disabled.\nEntity type of guild scheduled event was changed.\nBehavior of the expiration of an integration was changed.\nGrace period of the expiration of an integration was …\nExplicit content filter level of a guild was changed.\nUnknown but sent by discord\nFormat type of a sticker was changed.\nGuild a sticker is in was changed.\nRole is now displayed/no longer displayed separate from …\nGuild icon was changed.\nGuild scheduled event cover image was changed.\nID of the changed entity.\nDiscord docs.\nPrivate thread’s invitable state was changed.\nDiscord docs.\nID of the user who created the invite.\nLocation for a guild scheduled event was changed.\nThread was locked/unlocked.\nHow long invite code lasts was changed.\nMaximum uses of an invite was changed.\nDiscord docs.\nWhether a role can be mentioned in a message was changed.\nDiscord docs.\nMulti-factor authentication requirement was changed.\nUser was server muted/unmuted.\nName of an entity was changed.\nNickname of a member was changed.\nChannel NSFW restriction was changed.\nDiscord docs.\nUnknown key was changed.\nOwner of a guild was changed.\nPartial version of <code>Integration</code>, used in …\nPermissions on a channel were changed.\nPermissions for a role were changed.\nChannel or role position was changed.\nPreferred locale of a guild was changed.\nPrivacy level of the stage instance was changed.\nNumber of days after which inactive and role-unassigned …\nID of the public updates channel was changed.\nRatelimit per user in a text channel was changed.\nRegion of a guild was changed.\nDiscord docs.\nRole was added to a member.\nRole was removed to a member.\nID of the rules channel was changed.\nDiscord docs.\nInvite splash page artwork was changed.\nDiscord docs.\nStatus of guild scheduled event was changed.\nDiscord docs.\nSystem channel settings were changed.\nID of the system channel was changed.\nRelated emoji of a sticker was changed.\nWhether an invite is temporary or never expires was …\nDiscord docs.\nTopic of a text channel or stage instance was changed.\nType of a created entity.\nUnicode emoji of a role icon was changed.\nUnknown key was changed and was invalid\nMaximum number of users in a voice channel was changed.\nNumber of uses of an invite was changed.\nGuild invite vanity url was changed.\nRequired verification level for new members was changed.\nIncomplete documentation\nDiscord docs.\nChannel of the server widget was changed.\nWhether a widget is enabled or not was changed.\nDetermines what action was done on a <code>Self::target_id</code>\nList of application commands referenced in the audit log.\nID of the app whose permissions were targeted.\nName of the Auto Moderation rule that was triggered.\nTrigger type of the Auto Moderation rule that was …\nList of auto moderation rules referenced in the audit log.\nWhat changes were made.\nChannel in which the messages were deleted\nNumber of deleted messages.\nNumber of days after which inactive members were kicked.\nList of audit log entries, sorted from most to least …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nList of guild scheduled events referenced in the audit log.\nThe id of this entry.\nId of the overwritten entity\nList of partial integration objects.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType of overwritten entity (“member” or “role”).\nNumber of members removed by the prune\nMessage that was pinned or unpinned.\nSome optional data associated with this entry.\nWhat was the reasoning by doing an action on a target? If …\nName of the role if type is “role”\nThe status of a voice channel when set.\nDetermines to what entity an <code>Self::action</code> was used on.\nList of threads referenced in the audit log.\nThe user that did this action on a target.\nList of users referenced in the audit log.\nList of webhooks referenced in the audit log.\nAn action which will execute whenever a rule is triggered.\nGateway event payload sent when a rule is triggered and an …\nSee <code>Action</code>\nLogs user content to a specified channel.\nBlocks the content of a message according to the rule.\nIndicates in what event context a rule should be checked.\nInternally pre-defined wordsets which will be searched for …\nWords that may be considered forms of swearing or cursing\nConfigured auto moderation rule.\nWords that refer to sexually explicit behavior or activity\nPersonal insults or words that may be considered hate …\nTimeout user for a specified duration.\nCharacterizes the type of content which can trigger the …\nIndividual change for trigger metadata within an audit log …\nType of <code>Trigger</code>.\nVariant value is unknown.\nAction which was executed.\nActions which will execute when the rule is triggered.\nID of any system auto moderation messages posted as a …\nID of the channel in which user content was posted.\nUser generated text content.\nID of the user which created the rule.\nWhether the rule is enabled.\nEvent context in which the rule should be checked.\nChannels that should not be affected by the rule.\nRoles that should not be affected by the rule.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nID of the guild this rule belongs to.\nID of the guild in which the action was executed.\nID of the rule.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSubstring in content that triggered the rule.\nWord or phrase configured in the rule that triggered the …\nID of any user message which content belongs to.\nName of the rule.\nID of the rule which action belongs to.\nCharacterizes the type of content which can trigger the …\nTrigger type of rule which was triggered.\nID of the user which generated the content which triggered …\nAdditional explanation that will be shown to members …\nSubstrings which should not trigger the rule (Maximum of …\nSubstrings which should not trigger the rule (Maximum of …\nTotal number of unique role and user mentions allowed per …\nThe internally pre-defined wordsets which will be searched …\nRegular expression patterns which will be matched against …\nSubstrings which will be searched for in content (Maximum …\nAn identifier for a <code>Poll Answer</code>.\nAn identifier for an Application.\nAn identifier for an attachment.\nAn identifier for an audit log entry.\nAn identifier for a Channel\nAn identifier for a slash command.\nAn identifier for a slash command permission Id. Can …\nAn identifier for a slash command version Id.\nAn identifier for an Emoji\nAn identifier for an entitlement.\nAn identifier for a forum tag.\nAn identifier for an unspecific entity.\nAn identifier for a Guild\nAn identifier for an Integration\nAn identifier for an interaction.\nAn identifier for a Message\nAn identifier for a Role\nAn identifier for an auto moderation rule\nAn identifier for a Scheduled Event\nAn identifier for a Shard.\nAn identifier for a SKU.\nAn identifier for a stage channel instance.\nAn identifier for a sticker.\nAn identifier for a sticker pack banner.\nAn identifier for a sticker pack.\nAn identifier for a slash command target Id. Can contain a …\nAn identifier for a User\nAn identifier for a <code>Webhook</code>\nAdds a <code>User</code> to this guild with a valid OAuth2 access token.\nAdds a thread member, if this channel is a thread.\nGets a list of the guild’s audit log entries\nGets an auto moderation <code>Rule</code> of this guild by its ID via …\nGets all auto moderation <code>Rule</code>s of this guild via HTTP.\nReturns a builder which can be awaited to obtain a …\nReturns a builder which can be awaited to obtain a message …\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reply</code>.\nSame as <code>Self::await_reply</code>.\nReturns a builder which can be awaited to obtain a message …\nReturns a builder which can be awaited to obtain a message …\nBan a <code>User</code> from the guild, deleting a number of days’ …\nBan a <code>User</code> from the guild with a reason. Refer to <code>Self::ban</code>…\nGets a list of the guild’s bans, with additional options …\nBroadcasts that the current user is typing to a channel …\nBans multiple users from the guild, returning the users …\nGets all of the guild’s channels over the REST API.\nCreates an auto moderation <code>Rule</code> in the guild.\nCreates a <code>GuildChannel</code> in the the guild.\nCreate a guild specific application <code>Command</code>.\nCreates a direct message channel between the current user …\nCreates an emoji in the guild with a name and …\nCreates a post in a forum channel.\nCreates an integration for the guild.\nCreates an invite for the given channel.\nCreates a permission overwrite for either a single <code>Member</code> …\nReact to a <code>Message</code> with a custom <code>Emoji</code> or unicode …\nCreates a new role in the guild with the data set, if any.\nCreates a new scheduled event in the guild with the data …\nCreates a stage instance.\nCreates a new sticker in the guild with the data set, if …\nCreates a thread that is not connected to a message.\nCreates a public thread that is connected to a message.\nCreates a webhook in the channel.\nRetrieves the time that the ApplicationId was created.\nRetrieves the time that the ChannelId was created.\nRetrieves the time that the EmojiId was created.\nRetrieves the time that the GenericId was created.\nRetrieves the time that the GuildId was created.\nRetrieves the time that the IntegrationId was created.\nRetrieves the time that the MessageId was created.\nRetrieves the time that the RoleId was created.\nRetrieves the time that the RuleId was created.\nRetrieves the time that the ScheduledEventId was created.\nRetrieves the time that the UserId was created.\nRetrieves the time that the WebhookId was created.\nRetrieves the time that the AuditLogEntryId was created.\nRetrieves the time that the AttachmentId was created.\nRetrieves the time that the StickerId was created.\nRetrieves the time that the StickerPackId was created.\nRetrieves the time that the StickerPackBannerId was …\nRetrieves the time that the SkuId was created.\nRetrieves the time that the InteractionId was created.\nRetrieves the time that the CommandId was created.\nRetrieves the time that the CommandPermissionId was …\nRetrieves the time that the CommandVersionId was created.\nRetrieves the time that the TargetId was created.\nRetrieves the time that the StageInstanceId was created.\nRetrieves the time that the ForumTagId was created.\nRetrieves the time that the EntitlementId was created.\nCrossposts a <code>Message</code>.\nReturns a guild <code>Member</code> object for the current user.\nDeletes this channel, returning the channel on a …\nDeletes the current guild if the current account is the …\nDelete a guild sticker.\nDeletes an auto moderation <code>Rule</code> from the guild.\nDelete guild application command by its Id.\nDeletes an <code>Emoji</code> from the guild.\nDeletes an integration by Id from the guild.\nDeletes a <code>Message</code> given its Id.\nDeletes all messages by Ids from the given vector in the …\nDeletes all permission overrides in the channel from a …\nDeletes the given <code>Reaction</code> from the channel.\nDeletes all <code>Reaction</code>s of the given emoji to a message …\nDeletes all of the <code>Reaction</code>s associated with the provided …\nDeletes a <code>Role</code> by Id from the guild.\nDeletes a specified scheduled event in the guild.\nDeletes a stage instance.\nDeletes a <code>Sticker</code> by id from the guild.\nSends a message to a user through a direct message …\nDisconnects a member from a voice channel in the guild.\nThis is an alias of <code>Self::direct_message</code>.\nEdits a channel’s settings.\nEdits the current guild with new data where specified.\nEdits the sticker.\nEdit an auto moderation <code>Rule</code>, given its Id.\nEdit a guild application command, given its Id.\nOverwrites permissions for a specific command.\nEdits an <code>Emoji</code>’s name in the guild.\nEdits the properties a guild member, such as muting or …\nEdits a <code>Message</code> in the channel given its Id.\nEdits the guild’s MFA level. Returns the new level on …\nEdits the current user’s nickname for the guild.\nEdits a <code>Role</code>, optionally setting its new fields.\nEdit the position of a <code>Role</code> relative to all others in the …\nModifies a scheduled event in the guild with the data set, …\nEdits the stage instance\nEdits a sticker.\nEdits a thread.\nEdits the guild’s welcome screen.\nEdits the guild’s widget.\nGets an <code>Emoji</code> of this guild by its ID via HTTP.\nGets all <code>Emoji</code>s of this guild via HTTP.\nEnds the <code>Poll</code> on a given <code>MessageId</code>, if there is one.\nGets the default permission role (@everyone) from the …\nFollows the News Channel\nReturns the argument unchanged.\nGets the Id of a webhook channel.\nGets the Id of a private channel.\nGets the Id of a guild channel.\nGets the Id of a <code>Channel</code>.\nGets the Id of a <code>Channel</code>.\nGets the Id of a guild channel.\nReturns the argument unchanged.\nGets the Id of a private channel.\nGets the Id of a webhook channel.\nGets the Id of an <code>Emoji</code>.\nReturns the argument unchanged.\nGets the Id of an <code>Emoji</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the Id of a partial guild.\nGets the Id of Webhook Guild struct.\nGets the Id of Guild.\nGets the Id of Webhook Guild struct.\nGets the Id of Invite Guild struct.\nGets the Id of Invite Guild struct.\nGets the Id of Guild information struct.\nGets the Id of Guild information struct.\nGets the Id of a partial guild.\nGets the Id of Guild.\nGets the Id of integration.\nReturns the argument unchanged.\nGets the Id of a <code>Message</code>.\nGets the Id of a <code>Message</code>.\nReturns the argument unchanged.\nGets the Id of a role.\nReturns the argument unchanged.\nGets the Id of a role.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the Id of a <code>Member</code>.\nGets the Id of a <code>Member</code>.\nGets the Id of a <code>User</code>.\nGets the Id of a <code>User</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the value as a <code>u32</code>.\nRetrieves the value as a <code>u64</code>.\nGets the guild active threads.\nGets private archived threads of a channel.\nGets public archived threads of a channel.\nGet a specific guild application command by its Id.\nGet permissions for specific guild application command by …\nGet all guild application commands.\nGet all guild application commands permissions only.\nGet all guild application commands with localizations.\nGets private archived threads joined by the current user …\nGet a list of users that voted for this specific answer.\nGet the guild preview.\nGets a stage instance.\nGets a thread member, if this channel is a thread.\nGets the thread members, if this channel is a thread.\nGet the guild welcome screen.\nGet the guild widget.\nGets all integration of the guild.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets all of the channel’s invites.\nGets all of the guild’s invites.\nJoins the thread, if this channel is a thread.\nKicks a <code>Member</code> from the guild.\nErrors\nLeaves the guild.\nLeaves the thread, if this channel is a thread.\nReturns a link referencing this message. When clicked, …\nSame as <code>Self::link</code> but tries to find the <code>GuildId</code> if it is …\nGets a user’s <code>Member</code> for the guild by Id.\nGets a list of the guild’s members.\nStreams over all the members in a guild.\nGets a message from the channel.\nGets messages from the channel.\nStreams over all the messages in a channel.\nMoves a member to a specific voice channel.\nReturns the name of whatever channel this id holds.\nReturns the name of whatever guild this id holds.\nCreates a new ApplicationId from a u64.\nCreates a new ChannelId from a u64.\nCreates a new EmojiId from a u64.\nCreates a new GenericId from a u64.\nCreates a new GuildId from a u64.\nCreates a new IntegrationId from a u64.\nCreates a new MessageId from a u64.\nCreates a new RoleId from a u64.\nCreates a new RuleId from a u64.\nCreates a new ScheduledEventId from a u64.\nCreates a new UserId from a u64.\nCreates a new WebhookId from a u64.\nCreates a new AuditLogEntryId from a u64.\nCreates a new AttachmentId from a u64.\nCreates a new StickerId from a u64.\nCreates a new StickerPackId from a u64.\nCreates a new StickerPackBannerId from a u64.\nCreates a new SkuId from a u64.\nCreates a new InteractionId from a u64.\nCreates a new CommandId from a u64.\nCreates a new CommandPermissionId from a u64.\nCreates a new CommandVersionId from a u64.\nCreates a new TargetId from a u64.\nCreates a new StageInstanceId from a u64.\nCreates a new ForumTagId from a u64.\nCreates a new EntitlementId from a u64.\nPins a <code>Message</code> to the channel.\nGets the list of <code>Message</code>s which are pinned to the channel.\nGets the number of <code>Member</code>s that would be pruned with the …\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nRemoves a thread member, if this channel is a thread.\nRe-orders the channels of the guild.\nGets all of the guild’s roles over the REST API.\nSends a message with just the given message content in the …\nFetches a specified scheduled event in the guild, by Id. …\nFetches a list of interested users for the specified event.\nFetches a list of interested users for the specified …\nFetches a list of all scheduled events in the guild. If …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nSends file(s) along with optional message contents. The …\nSends a message to the channel.\nOverride all guild application commands.\nReturns the Id of the shard associated with the guild.\nStarts an integration sync for the given integration Id.\nStarts a prune of <code>Member</code>s.\nStarts typing in the channel for an indefinite period of …\nGets an <code>Sticker</code> of this guild by its ID via HTTP.\nGets all <code>Sticker</code>s of this guild via HTTP.\nFirst attempts to retrieve the channel from the <code>temp_cache</code> …\nAttempts to find a <code>GuildChannel</code> by its Id in the cache.\nTries to find the <code>Guild</code> by its Id in the cache.\nConverts this <code>TargetId</code> to <code>MessageId</code>.\nRequests <code>PartialGuild</code> over REST API.\nRequests <code>PartialGuild</code> over REST API with counts.\nTries to find the <code>Role</code> by its Id in the cache.\nConverts this <code>CommandPermissionId</code> to <code>RoleId</code>.\nRequests the sticker via the REST API to get a <code>Sticker</code> …\nFirst attempts to find a <code>User</code> by its Id in the cache, upon …\nAttempts to find a <code>User</code> by its Id in the cache.\nConverts this <code>CommandPermissionId</code> to <code>UserId</code>.\nConverts this <code>TargetId</code> to <code>UserId</code>.\nRequests <code>Webhook</code> over REST API.\nUnbans a <code>User</code> from the guild.\nUnpins a <code>Message</code> in the channel given by its Id.\nRetrieve’s the guild’s vanity URL.\nRetrieves the channel’s webhooks.\nRetrieves the guild’s webhooks.\nGet the widget image URL.\nInformation about an invite code.\nA minimal amount of information about the channel an …\nSubset of <code>Guild</code> used in <code>Invite</code>.\nDiscord docs.\nType of target for a voice channel invite.\nDetailed information about an invite. This information can …\nVariant value is unknown.\nThe approximate number of <code>Member</code>s in the related <code>Guild</code>.\nThe approximate number of <code>Member</code>s with an active session …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nThe unique code for the invite.\nThe unique code for the invite.\nCreates an invite for the given channel.\nWhen the invite was created.\nDeletes the invite.\nDeletes the invite.\nThe expiration date of this invite, returned from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets information about an invite.\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA representation of the minimal amount of information …\nThe user that created the invite.\nThe maximum age of the invite in seconds, from when it was …\nThe maximum number of times that an invite may be used …\nThe members speaking in the Stage\nThe number of users in the Stage\nGuild scheduled event data, only included if …\nReturns the Id of the shard associated with the guild.\nThe number of users speaking in the Stage\nReturns the formatted URL of the guild’s splash image, …\nThe Stage instance data if there is a public Stage …\nThe embedded application to open for this voice channel …\nThe type of target for this voice channel invite.\nThe user whose stream to display for this voice channel …\nIndicator of whether the invite self-expires after a …\nThe topic of the Stage instance (1-120 characters)\nReturns a URL to use for the invite.\nReturns a URL to use for the invite.\nThe amount of times that an invite has been used.\nA struct that represents some way to insert a …\nAllows something - such as a channel or role - to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Mention</code> that will be able to notify or create a …\nA version of an emoji used only when solely the animated …\nAn image hash returned from the Discord API.\nAn error returned when <code>ImageHash</code> is passed an erronous …\nAn incident retrieved from the Discord status page.\nAn update to an incident from the Discord status page.\nThe given hash was not a valid <code>ImageHash</code> length, …\nA Discord status maintenance message. This can be either …\nWhether the emoji is animated\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe Id of the emoji.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the linked image is animated, which means the …\nThe name of the emoji. It must be at least 2 characters …\nGenerates a URL to the emoji’s image.\nSKU is available for purchase.\nEntitlement was purchased as an app subscription.\nRepresents that a user or guild has access to a premium …\nDifferentiates between Entitlement types.\nRecurring SKU that can be purchased by a user and applied …\nA premium offering that can be made available to an …\nDifferentates between user and server subscriptions.\nDifferentiates between SKU classes.\nRepresents a recurring subscription.\nA system-generated group for each SKU created of type …\nRecurring SKU purchased by a user for themselves. Grants …\nVariant value is unknown.\nVariant value is unknown.\nGet a flags value with all known bits set.\nId of the SKU’s parent application.\nThe ID of the parent application.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether the entitlement has been deleted or not. …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nEnd date after which the entitlement is no longer valid. …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFlags indicating the type of subscription the SKU …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe ID of the guild that is granted access to the SKU.\nThe unique ID of the SKU.\nThe ID of the entitlement.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe class of the SKU.\nThe type of the entitlement.\nThe customer-facing name of the premium offering.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe ID of the corresponding SKU.\nA system-generated URL slug based on the SKU.\nStart date after which the entitlement is valid. Not …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe ID of the user that is granted access to the SKU.\n<code>Member</code>s with this permission can add new <code>Reaction</code>s to a …\nAllows all permissions, bypassing channel permission …\nAllows uploading of files.\nAllows the banning of guild members.\nAllows members to change their own nickname in the guild.\nAllows the joining of a voice channel.\nAllows for creating scheduled events, and editing and …\nAllows for creating emojis, stickers, and soundboard …\nAllows for the creation of <code>RichInvite</code>s.\nAllows for creating private threads.\nAllows for creating threads.\nAllows the deafening of members in a voice channel.\nAllows links from this user - or users of this role - to …\nAllows for the kicking of guild members.\nAllows management and editing of guild channels.\nAllows for editing, and deleting scheduled events created …\nAllows management and editing of the guild.\nAllows for editing and deleting emojis, stickers, and …\nAllows the deleting of other messages in a guild channel.\nAllows members to change other members’ nicknames.\nAllows management and editing of roles below their own.\nAllows for deleting and archiving threads, and viewing all …\nAllows management of webhooks.\nAllows the usage of the <code>@everyone</code> mention, which will …\nAllows for timing out users to prevent them from sending …\nAllows the moving of members from one voice channel to …\nAllows the muting of members in a voice channel.\nReturns a set of permissions with the original @everyone …\nReturns a set of text-only permissions with the original …\nReturns a set of voice-only permissions with the original …\nAllows the use of priority speaking in voice channels.\nA set of permissions that can be assigned to <code>User</code>s and <code>Role</code>…\nAllows the reading of a channel’s message history.\nAllows for requesting to speak in stage channels.\nAllows sending messages in a guild channel.\nAllows for sending messages in threads\nAllows attaching polls to message sends.\nAllows the sending of text-to-speech messages in a channel.\nAllows sending voice messages.\nAllows setting the status of a voice channel.\nAllows the user to speak in a voice channel.\nAllows the user to go live.\nAllows members to use application commands, including …\nAllows for launching activities in a voice channel\nAllows the usage of custom emojis from other guilds.\nAllows the usage of custom soundboard sounds from other …\nAllows the usage of custom stickers from other servers.\nAllows for using soundboard in a voice channel.\nAllows the usage of voice-activity-detection in a voice …\nAllows viewing a guild’s audit logs.\nAllows guild members to view a channel, which includes …\nAllows for viewing role subscription insights.\nAllows for viewing guild insights.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nGet a flags value with all known bits set.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nShorthand for checking that the set of permissions …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nShorthand for checking that the set of permissions …\nWhether all set bits in a source flags value are also set …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nThe intersection of a source flags value with the …\nShorthand for checking that the set of permissions …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nShorthand for checking that the set of permissions …\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReturns a list of names of all contained permissions.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nShorthand for checking that the set of permission contains …\nShorthand for checking that the set of permissions …\nThe intersection of a source flags value with the …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permission contains …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nAn APNG format animated sticker.\nA GIF format animated sticker.\nA sticker uploaded to a Boosted guild for the guild’s …\nA LOTTIE format animated sticker.\nA PNG format sticker.\nAn official sticker in a pack, part of Nitro or in a …\nA sticker sent with a message.\nDifferentiates between sticker formats.\nThe smallest amount of data required to render a sticker.\nA sticker sent with a message.\nDifferentiates between sticker types.\nVariant value is unknown.\nVariant value is unknown.\nWhether or not this guild sticker can be used, may be …\nThe unique ID given to the sticker pack’s banner image.\nReturns the sticker that is shown as the pack’s icon\nID of a sticker in the pack which is shown as the pack’s …\nDeletes the <code>Sticker</code> from its guild.\nDescription of the sticker pack.\nDescription of the sticker\nEdits the sticker.\nThe type of sticker format.\nThe type of sticker format.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nId of the guild that owns this sticker.\nThe unique ID given to this sticker.\nThe unique ID given to this sticker sticker pack.\nThe unique ID given to this sticker.\nRetrieves the URL to the sticker image.\nRetrieves the URL to the sticker image.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of sticker.\nThe name of the sticker.\nThe name of the sticker pack\nThe name of the sticker.\nThe unique ID of the pack the sticker is from.\nThe unique ID given to the pack’s SKU.\nA sticker’s sort order within a pack.\nThe stickers in the pack\nFor guild stickers, the Discord name of a unicode emoji …\nRequests the sticker via the REST API to get a <code>Sticker</code> …\nUser that uploaded the sticker. This will be <code>None</code> if the …\nAn error from the <code>parse</code> function.\nSignifies the failure to parse the <code>Timestamp</code> from an RFC …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Timestamp</code> from the number of milliseconds …\nParses an RFC 3339 date and time string such as …\nCreates a new <code>Timestamp</code> from a UNIX timestamp (seconds …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe category of parse error\nCreate a new <code>Timestamp</code> with the current date and time in …\nParse a timestamp from an RFC 3339 date and time string.\nParses an RFC 3339 date and time string such as …\nReturns the number of non-leap seconds since January 1, …\nUser’s flag as active developer\nBot’s running with HTTP interactions\nUser’s flag as bug hunter level 1\nUser’s flag as bug hunter level 2\nInformation about the current user.\nUser’s flag as discord certified moderator\nUser’s flag as discord employee\nUser’s flag as early supporter\nUser’s flag as early verified bot developer\nUser’s flag as house balance\nUser’s flag as house bravery\nUser’s flag as house brilliance\nUser’s flag as hypesquad events\nThe representation of a user’s status.\nUser’s flag as partnered server owner\nPremium types denote the level of premium a user has. …\nUser’s flag as system\nUser’s flag as team user\nVariant value is unknown.\nInformation about a user.\nUser’s public flags\nUser’s flag as verified bot\nThe user’s banner colour encoded as an integer …\nGet a flags value with all known bits set.\nOptional avatar hash.\nReturns the formatted URL of the user’s icon, if one …\nReturns a builder which can be awaited to obtain a …\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reply</code>.\nReturns a builder which can be awaited to obtain a message …\nOptional banner hash.\nReturns the formatted URL of the user’s banner, if one …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nIndicator of whether the user is a bot.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nCreates a direct message channel between the current user …\nRetrieves the time that this user was created at.\nReturns the formatted URL to the user’s default avatar …\nThe intersection of a source flags value with the …\nSends a message to a user through a direct message …\nThe account’s discriminator to differentiate the user …\nThis is an alias of <code>Self::direct_message</code>.\nEdits the current user’s profile settings.\nThe user’s email\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nRetrieves the URL to the user’s avatar, falling back to …\nThe flags on a user’s account\nFormats a string which will mention the user.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe account’s display name, if it is set. For bots this …\nCheck if a user has a <code>Role</code>. This will retrieve the <code>Guild</code> …\nThe unique Id of the user. Can be used to calculate the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe user’s chosen language option\nOnly included in <code>Message::mentions</code> for messages from the …\nWhether the user has two factor enabled on their account\nThe account’s username. Changing username will trigger a …\nReturns the user’s nickname in the given <code>guild_id</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe type of Nitro subscription on a user’s account\nThe public flags on a user’s account\nRefreshes the information about the user.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nReturns a static formatted URL of the user’s icon, if …\nRetrieves the URL to the static version of the user’s …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether the user is an Official Discord System user (part …\nReturns the “tag” for the user.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether the email on this account has been verified\nInformation about an available voice region.\nA user’s state within a voice channel.\nWhether it is a custom voice region, which is used for …\nWhether it is a deprecated voice region, which you should …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe internal Id of the voice region.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA recognizable name of the location of the voice region.\nWhether the voice region is optimal for use by the current …\nWhen unsuppressed, non-bot users will have this set to the …\nApplication webhooks are webhooks used with Interactions.\nAn indicator that the webhook is managed by Discord for …\nAn indicator that the webhook can post messages to …\nVariant value is unknown.\nA representation of a webhook, which is a low-effort way …\nThe guild object returned by a <code>Webhook</code>, of type …\nA representation of a type of webhook.\nThe bot/OAuth2 application that created this webhook.\nThe default avatar.\nThe Id of the channel that owns the webhook.\nDeletes the webhook.\nDeletes a webhook message.\nEdits the webhook.\nEdits a webhook message with the fields set via the given …\nExecutes a webhook with the fields set via the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves a webhook given its Id.\nRetrieves a webhook given its Id and unique token.\nRetrieves a webhook given its url.\nGets a previously sent message from the webhook.\nThe Id of the guild that owns the webhook.\nThe hash of the icon used by the guild.\nThe unique Id.\nThe unique Id identifying the guild.\nThe unique Id of the channel.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of the webhook.\nThe default name of the webhook.\nThe name of the guild.\nThe name of the channel.\nRetrieves the latest information about the webhook, …\nThe channel that this webhook is following (returned for …\nThe guild of the channel that this webhook is following …\nFirst attempts to retrieve the channel from the <code>temp_cache</code> …\nAttempts to find a <code>GuildChannel</code> by its Id in the cache.\nTries to find the <code>Guild</code> by its Id in the cache.\nRequests <code>PartialGuild</code> over REST API.\nRequests <code>PartialGuild</code> over REST API with counts.\nThe webhook’s secure token.\nReturns the url of the webhook.\nThe url used for executing the webhook (returned by the …\nThe user that created the webhook.\nA client error.\nAn error while decoding a payload.\nInput exceeded a limit. Providing the input and the limit …\nThere was an error with a format.\nAn error from the <code>gateway</code> module.\nAn error from the <code>http</code> module.\nAn <code>std::io</code> error.\nAn error from the <code>serde_json</code> crate.\nAn error from the <code>model</code> module.\nAn asynchronous <code>Mutex</code>-like type.\nThe input is not in the specified range. Returned by …\nSome other error. This is only used for “Expected value …\nAn asynchronous reader-writer lock.\nA common error enum returned by most of the library’s …\nAn error from the <code>tungstenite</code> crate.\nTypeMap is a simple abstraction around the standard library…\nTypeMapKey is used to declare key types that are eligible …\nAn error from the <code>url</code> crate.\nDefines the value type that corresponds to this <code>TypeMapKey</code>.\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>Mutex</code>. When the lock has been …\nBlockingly locks this <code>RwLock</code> with shared read access.\nBlockingly locks this <code>RwLock</code> with exclusive write access.\nClears all entries in the map.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nReturns <code>true</code> if the map contains a value for the specified …\nCreates a new instance of <code>TypeMap</code> with a custom storage …\nRetrieve the entry based on its <code>TypeMapKey</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve a reference to a value based on its <code>TypeMapKey</code>. …\nRetrieve a mutable reference to a value based on its …\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nInserts a new value based on its <code>TypeMapKey</code>. If the value …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the mutex, returning the underlying data.\nConsumes the lock, returning the underlying data.\nReturns an indicator whether the map is empty (no entries).\nReturns the amount of entries in the map.\nLocks this mutex, causing the current task to yield until …\nLocks this mutex, causing the current task to yield until …\nCreates a new instance of <code>TypeMap</code>.\nCreates a new lock in an unlocked state ready for use.\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.\nLocks this <code>RwLock</code> with shared read access, causing the …\nLocks this <code>RwLock</code> with shared read access, causing the …\nRemoves a value from the map based on its <code>TypeMapKey</code>.\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire the lock, and returns <code>TryLockError</code> if …\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nAttempts to acquire this <code>RwLock</code> with exclusive write …\nCreates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nLocks this <code>RwLock</code> with exclusive write access, causing the …\nParse a value from a string in context of a received …\nError that can be returned from <code>Channel::convert</code>.\nDescribes formatting on string content\nFormatting modifiers for MessageBuilder content pushes\nStruct that allows to alter <code>content_safe</code>’s behaviour.\nConvenience builder to create a modal, wait for the user …\nA builder for constructing a personal <code>Message</code> instance. …\nA trait with additional functionality over the …\nError that can be returned from <code>Emoji::convert</code>.\nThe associated error which can be returned from parsing.\nGuild was not in cache, or guild HTTP request failed.\nRepresents a combination of a timestamp and a style for …\nAn error that can occur when parsing a <code>FormattedTimestamp</code> …\nEnum representing various styles for formatting time in …\nError that can be returned from <code>GuildChannel::convert</code>.\nThe guild in which the parser was invoked is not in cache.\nError that can be returned from <code>Guild::convert</code>.\nWhen message data retrieval via HTTP failed\nWhen channel retrieval via HTTP failed\nWhen channel retrieval via HTTP failed\nHTTP error while retrieving guild roles.\nWhen the <code>gateway</code> feature is disabled and the required …\nRepresents a long date format, e.g., “November 17, 2023…\nRepresents a long date and time format, e.g., “Thursday, …\nRepresents a long time format, e.g., “12:34:56 PM”.\nWhen the provided string does not adhere to any known …\nError that can be returned from <code>Member::convert</code>.\nThe Message Builder is an ergonomic utility to easily …\nError that can be returned from <code>Message::convert</code>.\nNo cache, so no guild search could be done.\nWhen the referenced channel is not a guild channel\nThe provided member string failed to parse, or the parsed …\nThe provided user string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided guild string failed to parse, or the parsed …\nThe provided channel string failed to parse, or the parsed …\nThe provided emoji string failed to parse, or the parsed …\nWhen the guild’s roles were not found in cache.\nWhen the operation was invoked outside a guild.\nParser was invoked outside a guild.\nParser was invoked outside a guild.\nRepresents a relative time format, indicating the time …\nError that can be returned from <code>Role::convert</code>.\nRepresents a short date format, e.g., “2023-11-17”.\nRepresents a short date and time format, e.g., “November …\nRepresents a short time format, e.g., “12:34 PM”.\nError that can be returned from <code>User::convert</code>.\nAssign the dummy message files attached to it.\nAssign the dummy message its author.\nConsume this builder and return the constructed message.\nPulls the inner value out of the builder.\nMentions the <code>GuildChannel</code> in the built message.\nAssign the dummy message its origin channel’s ID.\nIf set to true, <code>content_safe</code> will replace channel mentions …\nIf set, <code>content_safe</code> will replace <code>@everyone</code> with a …\nIf set, <code>content_safe</code> will replace <code>@here</code> with a non-pinging …\n<code>content_safe</code> will replace role mentions (<code>&lt;@&amp;{id}&gt;</code>) with …\nIf set to true, <code>content_safe</code> will replace user mentions (…\nAssign the dummy message its contents.\nTransforms role, channel, user, <code>@everyone</code> and <code>@here</code> …\nParses a string <code>s</code> as a command parameter of this type.\nInstantiates with all options set to <code>true</code>.\nIf set, <code>content_safe</code> will replace a user mention with the …\nAssign the dummy message the timestamp it was edited.\nAssign the dummy message embeds.\nDisplays the given emoji in the built message.\nErrors\nAdds an input text field.\nFormats the message builder into a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>FormattedTimestamp</code> instance from the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAssign the dummy message its origin guild’s ID.\nAssign the dummy message a proper ID for identification.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAssign the dummy message its type.\nAssign the dummy message member data pertaining to its …\nMentions something that implements the <code>Mentionable</code> trait.\nAssign the dummy message a flag whether it mentions …\nAssign the dummy message a list of roles it mentions.\nAssign the dummy message a list of mentions.\nConstructs a new instance of this builder, alongside a …\nCreates a new <code>FormattedTimestamp</code> instance from the given …\nCreates a new, empty builder.\nCreates a new <code>FormattedTimestamp</code> instance representing the …\nConvenience method to add a multi-line input text field.\nRetrieves an Id from a channel mention.\nRetrieves the animated state, name and Id from an emoji …\nRetrieves the “code” part of an invite out of a URL.\nRetrieves IDs from “{channel ID}-{message ID}” …\nRetrieves guild, channel, and message ID from a message …\nTurns a string into a vector of string arguments, …\nRetrieves an Id from a role mention.\nRetrieves an Id from a user mention.\nRetrieves the username and discriminator out of a user tag …\nParses the id and token from a webhook url. Expects a …\nAssign the dummy message a flag whether it’s been pinned.\nPushes a string to the internal message content.\nPushes an inline bold text to the content.\nPushes an inline bold text with an added newline to the …\nPushes an inline bold text with added newline to the …\nPushes an inline bold text to the content normalizing …\nPushes a codeblock to the content, with optional syntax …\nPushes a code-block to your message normalizing content.\nPushes inlined italicized text to the content.\nPushes an inlined italicized text with an added newline to …\nPushes an inline italicized text with added newline to the …\nPushes an inline italicized text to the content …\nPushes the given text with a newline appended to the …\nPushes text with a newline appended to the content …\nPushes inlined monospaced text to the content.\nPushes inlined monospace text with an added newline to the …\nPushes an inline monospaced text with added newline to the …\nPushes an inline monospaced text to the content …\nPushes a named link to a message, intended for use in …\nPushes a named link intended for use in an embed, but with …\nPushes a quoted inline text to the content\nPushes a quoted inline text to the content\nPushes a quoted inline text with added newline to the …\nPushes a quoted inline text to the content normalizing …\nPushes text to your message, but normalizing content - …\nPushes a spoiler’d inline text to the content.\nPushes a spoiler’d inline text with a newline added to …\nPushes a spoiler’d inline text with added newline to the …\nPushes a spoiler’d inline text to the content …\nPushes a strikethrough inline text to the content.\nPushes a strikethrough inline text with a newline added to …\nPushes a strikethrough inline text with added newline to …\nPushes a strikethrough inline text to the content …\nPushes an underlined inline text to the content.\nPushes an underlined inline text with an added newline to …\nPushes an underlined inline text with added newline to the …\nPushes an underlined inline text to the content …\nStarts a multi-line quote, every push after this one will …\nAssign the dummy message a list of emojis it was reacted …\nMentions the <code>Role</code> in the built message.\nCalculates the Id of the shard responsible for a guild, …\nConvenience method to add a single-line input text field.\nIf set to true, if <code>content_safe</code> replaces a user mention it …\nReturns the style of this <code>FormattedTimestamp</code>.\nSets a timeout when waiting for the modal response.\nAssign the dummy message the timestamp it was created at.\nReturns the timestamp of this <code>FormattedTimestamp</code>.\nUtilities to parse and validate Discord tokens.\nAssign the dummy message a flag whether it’ll be read by …\nMentions the <code>User</code> in the built message.\nValidates that a token is likely in a valid format.\nAssign the dummy message the webhook author’s ID.\nError that can be return by <code>validate</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValidates that a token is likely in a valid format.")
searchState.loadedDescShard("poise", 1, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts this <code>Guild</code> instance into a <code>PartialGuild</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the Id of a webhook channel.\nGets the Id of a private channel.\nGets the Id of a <code>Channel</code>.\nReturns the argument unchanged.\nGets the Id of a webhook channel.\nGets the Id of a guild channel.\nGets the Id of a <code>Channel</code>.\nGets the Id of a guild channel.\nGets the Id of a private channel.\nReturns the argument unchanged.\nGets the Id of an <code>Emoji</code>.\nGets the Id of an <code>Emoji</code>.\nReturns the argument unchanged.\nGets the Id of a partial guild.\nGets the Id of Guild.\nGets the Id of Guild.\nGets the Id of a partial guild.\nGets the Id of Guild information struct.\nGets the Id of Guild information struct.\nGets the Id of Webhook Guild struct.\nGets the Id of Webhook Guild struct.\nReturns the argument unchanged.\nGets the Id of Invite Guild struct.\nGets the Id of Invite Guild struct.\nReturns the argument unchanged.\nGets the Id of integration.\nReturns the argument unchanged.\nGets the Id of a <code>Message</code>.\nGets the Id of a <code>Message</code>.\nGets the Id of a role.\nGets the Id of a role.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the Id of a <code>User</code>.\nReturns the argument unchanged.\nGets the Id of a <code>Member</code>.\nGets the Id of a <code>Member</code>.\nGets the Id of a <code>User</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>FormattedTimestamp</code> instance from the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nRetrieves a webhook given its Id.\nRetrieves a webhook given its Id and unique token.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGenerates a new Colour from an RGB value, creating an …\nCreates a new builder with the values of the given <code>Role</code>.\nRetrieves a webhook given its url.\nFuse a future such that <code>poll</code> will never again be called …\nReturns the green RGB component of this Colour.\nThe gateway module contains the pieces - primarily the …\nGets a partial amount of guild data by its Id.\nGets a partial amount of guild data by its Id.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the inner <code>id</code> as a <code>u64</code>.\nRetrieves the value as a <code>u32</code>.\nRetrieves the value as a <code>u64</code>.\nGets information about an invite.\nGets the active maintenances from Discord’s Status API.\nGets the guild active threads.\nGets the guild active threads.\nGets the guild active threads.\nGets private archived threads of a channel.\nGets public archived threads of a channel.\nGets all audit logs in a specific guild.\nRetrieves an auto moderation rule in a guild.\nRetrieves all auto moderation rules in a guild.\nGets all the users that are banned in specific guild, with …\nGets current bot gateway.\nGets channel information.\nGets all archived private threads from a channel.\nGets all archived public threads from a channel.\nGets all invites for a channel.\nGets all archived private threads joined from a channel.\nGets all thread members for a thread.\nRetrieves the webhooks for the given channel’s Id.\nGets all channels in a guild.\nGet a specific guild application command by its Id.\nGet a specific guild application command by its Id.\nGet a specific guild application command by its Id.\nGet permissions for specific guild application command by …\nGet permissions for specific guild application command by …\nGet permissions for specific guild application command by …\nGet all guild application commands.\nGet all guild application commands.\nGet all guild application commands.\nGet all guild application commands permissions only.\nGet all guild application commands permissions only.\nGet all guild application commands permissions only.\nGet all guild application commands with localizations.\nGet all guild application commands with localizations.\nGet all guild application commands with localizations.\nGets information about the current application.\nGets information about the user we’re connected with.\nReturns a guild <code>Member</code> object for the current user.\nGets information about an emoji in a guild.\nGets all emojis of a guild.\nGets all entitlements for the current app, active and …\nGets a followup message.\nGets a followup message.\nGet a follow-up message for an interaction.\nGets current gateway.\nGets a global command by its Id.\nFetches a global commands for your application by its Id.\nGets all global commands.\nFetches all of the global commands for your application.\nGets all global commands with localizations.\nFetches all of the global commands for your application …\nGets guild information.\nGets all active threads from a guild.\nFetches a guild command by its Id.\nGives the guild command permission for your application …\nFetches all of the guild commands for your application for …\nFetches all of the guild commands permissions for your …\nFetches all of the guild commands with localizations for …\nGets integrations that a guild has.\nGets all invites to a guild.\nGets the members of a guild. Optionally pass a <code>limit</code> and …\nGets a guild preview.\nGets the amount of users that can be pruned.\nGets regions that a guild can use. If a guild has the …\nRetrieves a list of roles in a <code>Guild</code>.\nRetrieves a single sticker in a <code>Guild</code>.\nRetrieves a list of stickers in a <code>Guild</code>.\nGets a guild’s vanity URL if it has one.\nRetrieves the webhooks for the given guild’s Id.\nGets a guild welcome screen information.\nGets a guild widget information.\nGets guild information with counts.\nGets a paginated list of the current user’s guilds.\nGets information about a specific invite.\nGets private archived threads joined by the current user …\nGets member of a guild.\nGets a previously sent message from the webhook.\nGets a message by an Id, bots only.\nGets X messages from a channel.\nRetrieves a list of all nitro sticker packs.\nGets the initial interaction response.\nReturns a list of names of all contained permissions.\nGets all pins of a channel.\nGet a list of users that voted for this specific answer.\nGet a list of users that voted for this specific answer.\nGet the guild preview.\nGets user Ids based on their reaction to a message. This …\nGets the interaction response.\nGets the interaction response.\nGets the interaction response.\nGets a scheduled event by Id.\nGets a list of all interested users for the corresponding …\nGets a list of all scheduled events for the corresponding …\nGets all SKUs for the current application.\nGets a stage instance.\nGets a stage instance.\nGets a stage instance.\nGets a sticker.\nGets a thread member, if this channel is a thread.\nGets the thread members, if this channel is a thread.\nGets the current unresolved incidents from Discord’s …\nGets the upcoming (planned) maintenances from Discord’s …\nGets a user by Id.\nGets the current user’s third party connections.\nGets our DM channels.\nGets all voice regions.\nRetrieves a webhook given its Id.\nRetrieves a webhook given its url.\nRetrieves a webhook given its Id and unique token.\nGet the guild welcome screen.\nGet the guild widget.\nThe account’s display name, if it is set. For bots this …\nReturns which of two <code>User</code>s has a higher <code>Member</code> hierarchy.\nReturns which of two <code>User</code>s has a higher <code>Member</code> hierarchy.\nAttempts to find this channel’s guild in the Cache.\nConverts from <code>Channel</code> to <code>Option&lt;GuildChannel&gt;</code>.\nGets a reference to a guild from the cache based on the …\nGuildUpdateEvent doesn’t have GuildCreate’s extra …\nA representation of the minimal amount of information …\nA representation of the minimal amount of information …\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nShorthand for checking that the set of intents contains …\nClones all channel categories in the given guild and …\nReturns the number of guild channels in the cache.\nThis method returns all channels from a guild of with the …\nWhether this role is a guild’s linked role.\nReturns the number of cached guilds.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nShorthand for checking that the set of intents contains …\nDispatched when the emojis are updated.\nSpecify the Id of the guild to prefill the dropdown picker …\nFilters <code>ComponentInteraction</code>’s by a specific <code>GuildId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>GuildId</code>.\nFilters <code>Reaction</code>’s by a specific <code>GuildId</code>.\nFilters <code>Message</code>’s by a specific <code>GuildId</code>.\nAssign the dummy message its origin guild’s ID.\nThe command guild Id, if it is a guild command.\nThe id of the guild.\nThe guild Id this interaction was sent from, if there is …\nThe Id of the guild the command is registered to.\nThe guild Id this interaction was sent from, if there is …\nThe guild Id this interaction was sent from, if there is …\nThe Id of the guild the channel is located in.\nThe channel guild Id.\nThe Id of the <code>Guild</code> that the message was sent in. This …\nID of the originating message’s guild.\nID of the guild containing the channel.\nThe optional Id of the <code>Guild</code> where the reaction was sent.\nThe guild Id of the associated stage channel.\nID of the guild.\nGuild of the invite.\nID of the guild.\nThe guild Id.\nThe id of the Guild.\nThe <code>GuildId</code> the presence update is coming from.\nID of the guild this rule belongs to.\nID of the guild in which the action was executed.\nOnly present in <code>IntegrationCreateEvent</code> and …\nThe unique Id of the guild that the member is a part of.\nThe unique Id of the guild that the member is a part of.\nID of the guild.\nThe Id of the Guild the Role is in.\nThe Id of the guild that the event belongs to.\nThe ID of the guild that is granted access to the SKU.\nId of the guild that owns this sticker.\nThe Id of the guild that owns the webhook.\nShorthand for checking that the set of intents contains …\nDispatched when a guild’s integration is added, updated …\nShorthand for checking that the set of intents contains …\nGets the invoked guild locale.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nShorthand for checking that the set of intents contains …\nDispatched when the data for offline members was requested.\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nThe id of the scheduled event for this Stage instance.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nShorthand for checking that the set of intents contains …\nList of guild scheduled events referenced in the audit log.\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nShorthand for checking that the set of intents contains …\nFetches a vector of all <code>Guild</code>s’ Ids that are stored in …\nGuilds the user is in\nReturns whether the shard manager contains either an …\nWhether there are potentially more threads that could be …\nCheck that the role has the given permission.\nChecks whether the role has all of the given permissions.\nCheck if a user has a <code>Role</code>. This will retrieve the <code>Guild</code> …\nIf the attachment is an image, then the height of the …\nThe height of the image.\nThe height of the thumbnail in pixels.\nThe height of the video in pixels.\nReturns a hexadecimal string of this Colour.\nRetrieves the ID and position of the member’s highest …\nWhether or not to hoist the role above lower-positioned …\nIndicator of whether the role is pinned above lesser roles.\nThe HTTP module which provides functions for performing …\nAn HTTP client.\nSet the icon of the guild. Pass <code>None</code> to remove the icon.\nSet the role icon to a custom image.\nThe icon of the team.\nID of the application’s icon.\nThe guild icon hash if it has one.\nThe hash of the icon used by the guild.\nRole icon image hash.\nThe hash of the icon used by the guild.\nThe hash of the icon of the guild.\nThe hash of the icon used by the guild.\nIcon hash, returned when in the template object\nIcon hash, returned when in the template object\nReturns a formatted URL of the guild’s icon, if the …\nReturns the formatted URL of the guild’s icon, if one …\nReturns the formatted URL of the guild’s icon, if the …\nSet the URL of the author’s icon.\nSet the icon URL’s value. This only supports HTTP(S).\nThe URL of the author icon.\nThe URL of the footer icon.\nGets the interaction Id.\nRetrieves the Id of the inner <code>GuildChannel</code>, or …\nThe Id of the channel to show.\nAssign the dummy message a proper ID for identification.\nThe command Id.\nThe id of the command.\nThe <code>RoleId</code> or <code>UserId</code>, depends on <code>kind</code> value.\nId of the interaction.\nThe Id of the invoked command.\nId of the interaction.\nThe id of the interaction.\nId of the interaction.\nId of the interaction.\nThe unique Id of the user.\nThe snowflake ID of the team.\nThe unique ID given to this attachment.\nThe unique Id of the channel.\nThe channel Id.\nThe unique Id of the message. Can be used to calculate the …\nID of the application.\nID of the channel.\nThe channel Id.\nThe unique Id of the private channel.\nThe Id of the stage instance.\nThe id of the tag.\nThe ID of the account on the other side of this connection.\nThe id of the thread.\nThe ID of the party.\nThe id of the emoji.\nThe id of this entry.\nId of the overwritten entity\nID of the rule.\nThe Id of the emoji.\nThe guild Id.\nThe id of the thread.\nThe unique Id identifying the guild.\nThe Id of the role. Can be used to calculate the role’s …\nThe Id of the scheduled event.\nThe unique Id identifying the guild.\nThe unique Id of the guild.\nThe Id of the <code>Guild</code> that may be unavailable.\nThe Id of the emoji.\nThe unique ID of the SKU.\nThe ID of the entitlement.\nThe unique ID given to this sticker.\nThe unique ID given to this sticker sticker pack.\nThe unique ID given to this sticker.\nThe unique Id of the user. Can be used to calculate the …\nThe internal Id of the voice region.\nThe unique Id.\nThe unique Id identifying the guild.\nThe unique Id of the channel.\nSets the current user as being <code>Idle</code>. This maintains the …\nSet the image associated with the embed. This only …\nSets the cover image for the scheduled event.\nSets the cover image for the scheduled event.\nImage information of the embed.\nThe hash of the event’s cover image, if present.\nRetrieves the URL to the sticker image.\nRetrieves the URL to the sticker image.\nEdits a message within a given thread. If the provided …\nExecute within a given thread. If the provided thread Id …\nCalled directly after the <code>Client</code> is created.\nInitializes all shards that the manager is responsible for.\nIndicator of whether the field should display as inline.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nDo something with the output of a future before passing it …\nWhether or not the activity is an instanced game session.\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nThe Id of the integration the <code>Role</code> belongs to.\nDispatched when a guild integration is updated.\nGets all integration of the guild.\nGets all integration of the guild.\nGets all integration of the guild.\nA list of partial guild <code>Integration</code>s that use this …\nList of partial integration objects.\nReturns the gateway intents used for this gateway …\nDispatched when an interaction is created (e.g a slash …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this to a <code>CommandInteraction</code>\nConverts this to an <code>CommandInteraction</code>\nConverts this to a <code>ComponentInteraction</code>\nConverts this to a <code>ModalInteraction</code>\nConverts this to a <code>PingInteraction</code>\nConvert this future into a single element stream.\nAttempts to convert this <code>PresenceUser</code> instance into a <code>User</code>.\nSets the current user as being <code>Invisible</code>. This maintains …\nWhether or not non-moderators can add other non-moderators …\nWhether non-moderators can add other non-moderators to a …\nWhether non-moderators can add other non-moderators to a …\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nUser that created the invite.\nA representation of the minimal amount of information …\nThe user that created the invite.\nGets all of the channel’s invites.\nGets all of the guild’s invites.\nRetrieves the active invites for the guild.\nGets all of the channel’s invites.\nGets all of the guild’s invites.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nReturns if the linked image is animated, which means the …\nReturn <code>true</code> if the model error is related to an item …\nWhether the stage is a form of connecting.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturns true when the error is caused by an invalid header\nChecks if the guild is ‘large’.\nDetermines if the channel is NSFW.\nDetermines if the channel is NSFW.\nDetermines if the channel is NSFW.\nChecks if any of the included intents are privileged.\nWhether this notification is for a renewal rather than a …\nWhether or not this channel is text-based, meaning that it …\nReturns true when the error is caused by an unsuccessful …\nReturns true when the error is caused by the url …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe secret for joining a party.\nJoins the thread, if this channel is a thread.\nJoins a thread channel.\nThe time the current user last joined the thread.\nTimestamp representing the date when the member joined.\nTimestamp representing the date when the member joined.\nThe date that the current user joined the guild.\nThis module exports different types for JSON interactions. …\nThis method adds an existing attachment to the list of …\nCreates a new attachments builder that keeps all existing …\nShorthand for <code>EditAttachments::keep</code>.\nShorthand for <code>EditAttachments::keep</code>.\nShorthand for <code>EditAttachments::keep</code>.\nKick the member from the guild.\nKicks a <code>Member</code> from the guild.\nKicks a <code>Member</code> from the guild.\nKicks a <code>Member</code> from the guild.\nKicks a member from a guild with a provided reason.\nShorthand for checking that the set of permissions …\nKicks the member from the guild, with a reason.\nErrors\nErrors\nErrors\nGets the interaction type\nSpecify what type the channel is, whether it’s a text, …\nSets the <code>CommandOptionType</code>, replacing the current value as …\nSpecifies the type of the application command.\nSets the entity type of the scheduled event, replacing the …\nThe thread type, either <code>ChannelType::PublicThread</code> or …\nThe type of channel; only conversion between text and …\nSets the entity type of the scheduled event.\nAssign the dummy message its type.\nThe application command kind.\nThe option type.\nThe type of data this permissions applies to.\nThe application command type of the triggered application …\nAlways <code>ComponentType::ActionRow</code>\nThe component type, it will always be <code>ComponentType::Button</code>…\nThe component type, which may either be …\nThe component type, it will always be …\nType and type-specific data of this component interaction.\nThe type of the interaction.\nThe type of the embed. For embeds not generated by Discord…\nThe type of the channel.\nThe channel type.\nIndicator of the type of message this is, i.e. whether it …\nKind of message activity.\nThe kind of channel\nThe channel type.\nIndicator of the type of channel this is.\nThe service that this connection represents (e.g. twitch, …\nThe type of activity being performed\nType of overwritten entity (“member” or “role”).\nThe type of the event, indicating if it will take place in …\nThe class of the SKU.\nThe type of the entitlement.\nThe type of sticker.\nThe type of the webhook.\nThe type of the activity\nSets label of the button.\nSets the label of this option, replacing the current value …\nSets the label of this input text. Replaces the current …\nThe text which appears on the button.\nThe text displayed on this option.\nLabel for this component; max 45 characters. Required when …\nThe text shown on the button.\nIndicator of whether the guild is considered “large” …\nThe ID for a large asset of the activity, usually a …\nText displayed when hovering over the large image of the …\nThe Id of the last message sent in the channel.\nThe Id of the last message sent.\nThe timestamp of the time a pin was most recently made.\nTimestamp of the last time a <code>Message</code> was pinned.\nThe instant that a shard was last started.\nThe latency between when a heartbeat was sent and when the …\nSets the layout type for the Poll to take.\nLeaves the guild.\nLeaves the guild.\nLeaves the guild.\nLeaves a guild.\nLeaves the thread, if this channel is a thread.\nLeaves a thread channel.\nWrap this future in an <code>Either</code> future, making it the …\nThe maximum number of messages to retrieve for the query.\nThe total number of requests that can be made in a period …\nReturns a link referencing this message. When clicked, …\nSame as <code>Self::link</code> but tries to find the <code>GuildId</code> if it is …\nCreates an activity that appears as <code>Listening to &lt;name&gt;</code>.\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nThe user’s chosen language option\nSets the location of the scheduled event. Required to be …\nSets the location of the scheduled event.\nThe lock status of the thread.\nWhen a thread is locked, only users with <code>MANAGE_THREADS</code> …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nWhether the emoji is managed via an <code>Integration</code> service.\nIndicator of whether the role is managed by an integration …\nA copy of the <code>ShardManager</code> to communicate with it.\nMap this future’s output to a different type, returning …\nMap this future’s output to a different type, returning …\nThe secret for a specific instanced match.\nSubstring in content that triggered the rule.\nWord or phrase configured in the rule that triggered the …\nThe duration that the invite will be valid for.\nHow long the invite is valid for (in seconds).\nThe maximum age of the invite in seconds, from when it was …\nThe number of identify requests allowed per 5 seconds.\nSets the maximum permitted value for this integer option\nSets the maximum permitted length for this string option.\nSets the maximum length required for the input text\nMaximum permitted length for String options\nMaximum input length for a text input; min 1, max 4000\nThe maximum number of members for the guild.\nThe maximum number of members for the guild.\nThe maximum number of messages to store in a channel’s …\nSets the maximum permitted value for this number option\nThe maximum number of presences for the guild. The default …\nThe maximum number of presences for the guild. The default …\nThe maximum amount of users in a stage video channel\nThe maximum amount of users in a stage video channel\nThe number of uses that the invite will be valid for.\nMaximum number of times the invite can be used.\nThe maximum number of times that an invite may be used …\nMaximum permitted value for Integer or Number options\nSets the maximum values for the user to select.\nThe maximum number of selections allowed.\nThe maximum amount of users in a video channel.\nThe maximum amount of users in a video channel.\nIndicator of whether the current user has sent this type …\nIndicator of whether the current user has sent the type of …\nGets a user’s <code>Member</code> for the guild by Id.\nGets a user’s <code>Member</code> for the guild by Id.\nGets a user’s <code>Member</code> for the guild by Id.\nRetrieves a <code>Guild</code>’s member from the cache based on the …\nAssign the dummy message member data pertaining to its …\nThe <code>member</code> data for the invoking user.\nThe <code>member</code> data for the invoking user.\nThe member who invoked the interaction in the guild.\nThe <code>member</code> data for the invoking user.\nThread member object for the current user, if they have …\nA partial amount of data about the user’s member data\nThe optional object of the member which added the reaction.\nMember who started typing if this happened in a guild.\nAdditional information about the user.\nOnly included in <code>Message::mentions</code> for messages from the …\nAn approximate count of users in a thread, stops counting …\nThe approximate number of members in the thread, capped at …\nThe number of members in the guild.\nGets the highest role a <code>Member</code> of this Guild has.\nRetrieves the first <code>Member</code> found that matches the name - …\nCalculate a <code>Member</code>’s permissions in the guild.\nCalculate a <code>Member</code>’s permissions in the guild.\nRetrieves <code>Member</code>s from the current channel.\nGets a list of the guild’s members.\nGets a list of the guild’s members.\nGets a list of the guild’s members.\nThe resolved partial members.\nThe members of the team\nA thread member for each returned thread the current user …\nSet of guild members.\nAll thread member objects from the synced threads for the …\nUsers who are members of the guild.\nThe members speaking in the Stage\nRetrieves all <code>Member</code> containing a given <code>String</code> as either …\nStreams over all the members in a guild.\nRetrieves all <code>Member</code> containing a given <code>String</code> in their …\nNumber of members removed by the prune\nRetrieves all <code>Member</code> that start with a given <code>String</code>.\nRetrieves a tuple of <code>Member</code>s containing a given <code>String</code> in …\nGets a list of all the members (satisfying the status …\nThe member’s membership state.\nCreates a <code>Mention</code> that will be able to notify or create a …\nMentions something that implements the <code>Mentionable</code> trait.\nChannels specifically mentioned in this message.\nShorthand for checking that the set of permissions …\nAssign the dummy message a flag whether it mentions …\nIndicator of whether the message mentions everyone.\nAssign the dummy message a list of roles it mentions.\nArray of <code>Role</code>s’ Ids mentioned in the message.\nWhether or not to make the role mentionable, upon which …\nIndicator of whether the role can be mentioned, similar to …\nAssign the dummy message a list of mentions.\nArray of users mentioned in the message.\nGets a message from the channel.\nGets a message from the channel.\nRetrieves the <code>Message</code> associated with this reaction.\nGets a message from the channel.\nThe contents of the first message in the forum post.\nRetrieves a <code>Channel</code>’s message from the cache based on …\nDispatched when a message is created.\nThe message this interaction was triggered by, if it is a …\nThe message this interaction was triggered by\nThe error message.\nThe error message.\nThe Id of the user who sent the message which this reacted …\nConverts this to a <code>ComponentInteraction</code>\nShorthand for checking that the set of intents contains …\nAn approximate count of messages in the thread.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nFilters <code>ComponentInteraction</code>’s by a specific <code>MessageId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>MessageId</code>.\nFilters <code>Reaction</code>’s by a specific <code>MessageId</code>.\nID of the originating message.\nThe Id of the <code>Message</code> that was reacted to.\nMessage that was pinned or unpinned.\nID of any user message which content belongs to.\nReference data sent with crossposted messages.\nDispatched when a message is updated.\nGets messages from the channel.\nGets messages from the channel.\nGets messages from the channel.\nThe resolved messages.\nStreams over all the messages in a channel.\nOptional event location, only required for External events.\nWhether the user has two factor enabled on their account\nIndicator of whether the guild requires multi-factor …\nIndicator of whether the guild requires multi-factor …\nSets the minimum permitted value for this integer option\nSets the minimum permitted length for this string option.\nSets the minimum length required for the input text\nMinimum permitted length for String options\nMinimum input length for a text input; min 0, max 4000\nSets the minimum permitted value for this number option\nMinimum permitted value for Integer or Number options\nSets the minimum values for the user to select.\nThe minimum number of selections allowed.\nConverts this to a <code>ModalInteraction</code>\nMappings of objects received from the API, with optional …\nShorthand for checking that the set of permissions …\nWhether this tag can only be added to or removed from …\nMoves a member to a specific voice channel.\nMoves a member to a specific voice channel.\nMoves a member to a specific voice channel.\nShorthand for checking that the set of permissions …\nMoves the member to a voice channel.\nWhether to mute the member.\nWhether to mute the member.\nIndicator of whether the member can speak in voice …\nIndicator of whether the member can speak in voice channels\nShorthand for checking that the set of permissions …\nReturns the name of the guild channel.\nReturns “DM with $username#discriminator”.\nReturn the event name of this event. Returns <code>None</code> if the …\nReturns the name of whatever channel this id holds.\nReturns the name of whatever guild this id holds.\nSpecify how to call this new channel, replacing the …\nSets the name of the option, replacing the current value …\nSpecifies the name of the application command, replacing …\nSet the author’s name, replacing the current value as …\nThe name of the forum post. Replaces the current value as …\nSets the name of the scheduled event, replacing the …\nSet the name of the sticker, replacing the current value …\nThe name of the thread. Replaces the current value as set …\nSet the webhook’s name, replacing the current value as …\nThe display name of the rule.\nThe name of the channel.\nSet the name of the guild.\nSet the role’s name.\nSets the name of the scheduled event.\nThe name of the sticker to set.\nThe name of the thread.\nSet the webhook’s name.\nThe command name.\nThe option name.\nThe choice name.\nThe name of the invoked command.\nThe name of the parameter.\nThe name of the <code>Command</code>.\nThe name of the team.\nThe name of the author.\nThe name of the field.\nThe name of the provider.\nThe name of the channel.\nName of the application.\nThe name of the channel\nThe channel name.\nThe name of the tag (0-20 characters).\nThe username of the account on the other side of this …\nThe name of the activity.\nThe name of the emoji.\nName of the rule.\nThe name of the emoji. It must be at least 2 characters …\nThe guild name.\nThe name of the guild.\nThe name of the role.\nThe name of the scheduled event.\nThe name of the guild.\nThe name of the guild.\nThe name of the emoji. It must be at least 2 characters …\nThe customer-facing name of the premium offering.\nThe name of the sticker.\nThe name of the sticker pack\nThe name of the sticker.\nThe account’s username. Changing username will trigger a …\nA recognizable name of the location of the voice region.\nThe default name of the webhook.\nThe name of the guild.\nThe name of the channel.\nThe name of the activity\nAll localized command names.\nLocalizations of the option name with locale as the key\nLocalizations of the choice name, with locale as key\nSpecifies a localized name of the option.\nSpecifies a localized name of the application command.\nThe localized command name of the selected locale.\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nCreates a new embed field.\nGenerates a new Colour with the given integer value set.\nCreates a new ApplicationId from a u64.\nCreates a new ChannelId from a u64.\nCreates a new EmojiId from a u64.\nCreates a new GenericId from a u64.\nCreates a new GuildId from a u64.\nCreates a new IntegrationId from a u64.\nCreates a new MessageId from a u64.\nCreates a new RoleId from a u64.\nCreates a new RuleId from a u64.\nCreates a new ScheduledEventId from a u64.\nCreates a new UserId from a u64.\nCreates a new WebhookId from a u64.\nCreates a new AuditLogEntryId from a u64.\nCreates a new AttachmentId from a u64.\nCreates a new StickerId from a u64.\nCreates a new StickerPackId from a u64.\nCreates a new StickerPackBannerId from a u64.\nCreates a new SkuId from a u64.\nCreates a new InteractionId from a u64.\nCreates a new CommandId from a u64.\nCreates a new CommandPermissionId from a u64.\nCreates a new CommandVersionId from a u64.\nCreates a new TargetId from a u64.\nCreates a new StageInstanceId from a u64.\nCreates a new ForumTagId from a u64.\nCreates a new EntitlementId from a u64.\nConstructs a new builder with the given access token, …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nAn empty attachments builder.\nCreates a builder with the given name, setting <code>Self::kind</code> …\nCreates a new builder with the given option type, name, …\nCreates a new builder with the given name, leaving all …\nCreates a normal button with the given custom ID. You must …\nCreates a builder with given custom id (a …\nCreates a select menu option with the given label and …\nCreates a text input with the given style, label, and …\nEquivalent to <code>Self::default</code>.\nCreates an author object with the given name, leaving all …\nCreates a new footer object with the given text, leaving …\nCreates a builder with the given name and message content, …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nCreates a new modal.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nCreates a builder for creating a Poll.\nCreates a builder for a Poll answer.\nCreates a builder with the provided kind, name, and start …\nCreates a builder with the provided topic.\nCreates a new builder with the given data. All of this …\nCreates a builder with the given thread name, leaving all …\nCreates a new builder with the given webhook name, leaving …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nCreates a new cache.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new shard manager, returning both the manager …\nCreates a new shard messenger.\nConstructs a new instance of this builder, alongside a …\nCreates a new <code>FormattedTimestamp</code> instance from the given …\nCreates a new, empty builder.\nThe new connection stage.\nAdds a new attachment to the message.\nAdds a new attachment to the message.\nAdds a new attachment to the message.\nCreates a link button to the given URL. You must also set …\nCreates a new cache instance with settings applied.\nReturns the next <code>ComponentInteraction</code> which passes the …\nReturns the next <code>ModalInteraction</code> which passes the filters.\nReturns the next <code>Reaction</code> which passes the filters. You …\nReturns the next <code>Message</code> which passes the filters. You can …\nReturns the next <code>Event</code> which passes the filters. You can …\nThe member’s nickname, if present.\nThe member’s nickname, if present.\nReturns the user’s nickname in the given <code>guild_id</code>.\nSets the member’s nickname.\nChanges the member’s nickname. Pass an empty string to …\nGets all of the intents that aren’t considered …\nCan be used to verify a message was sent (up to 25 …\nNon-repeating number used for ensuring message order.\nNonce used in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhen passing an invalid ID to …\nCreates a new <code>FormattedTimestamp</code> instance representing the …\nEvaluates and consumes the future, returning the resulting …\nSpecify if this channel is NSFW (18+)\nWhether this command is marked NSFW (age-restricted)\nIs the channel inappropriate for work?\nIndicates whether the command is age-restricted, defaults …\nUsed to tell if the channel is not safe for work.\nThe guild NSFW state. See <code>discord support article</code>.\nThe guild NSFW state. See <code>discord support article</code>.\nThe old connection stage.\nSets the current user as being <code>Online</code>. This maintains the …\nWhether the voice region is optimal for use by the current …\nReturns the resolved options from <code>CommandData::options</code> and …\nThe parameters for the command.\nThe nested options.\nThe options of this select menu.\nSome optional data associated with this entry.\nTransfers the ownership of the guild to another user by Id.\nIndicator of whether the current user is the owner.\nThe Id of the user who created this channel\nThe Id of the <code>User</code> who owns the guild.\nThe Id of the <code>User</code> who owns the guild.\nThe user id of the team owner.\nThe unique ID of the pack the sticker is from.\nThe Id of the parent category for a channel, or of the …\nThe channel category Id,  or the parent text channel Id …\nThe Id of the parent category for a channel, or of the …\nRetrieves an Id from a channel mention.\nRetrieves the animated state, name and Id from an emoji …\nRetrieves the “code” part of an invite out of a URL.\nRetrieves IDs from “{channel ID}-{message ID}” …\nRetrieves guild, channel, and message ID from a message …\nTurns a string into a vector of string arguments, …\nRetrieves an Id from a role mention.\nRetrieves an Id from a user mention.\nRetrieves the username and discriminator out of a user tag …\nParses the id and token from a webhook url. Expects a …\nCalculate a <code>PartialMember</code>’s permissions in a given …\nCalculate a <code>PartialMember</code>’s permissions in a given …\nThe number of users in the Stage\nInformation about the user’s current party.\n<code>party_id</code> from a Rich Presence event.\nBuilds an <code>CreateAttachment</code> by reading a local file.\nThe path to the error in the request body itself, dot …\nJSON body that will set as the form value as <code>payload_json</code>.\nIndicator that the member hasn’t accepted the rules of …\nIndicator that the member hasn’t accepted the rules of …\nWhether or not the provided data can use the command or …\nPermission overwrites for <code>Member</code>s and for <code>Role</code>s.\nReturns the guild-level permissions for the member.\nSpecify the permissions your application requires.\nA set of overwrites defining what a user or a user …\nA set of overwrites defining what a user or a user …\nSet the role’s permissions.\nThe permissions for the command in the guild.\nThe list of permissions of the member on the team.\nComputed permissions for the invoking user in the channel, …\nThe channel permissions.\nThe total permissions of the member in a channel, …\nThe total permissions of the member in a channel, …\nA set of permissions that the role has been assigned.\nThe permissions that the current user has.\nCalculates the permissions of a role.\nCalculates the permissions of a member.\nPins a <code>Message</code> to the channel.\nPins a <code>Message</code> to the channel.\nPins a <code>Message</code> to the channel.\nPins a message in a channel.\nConverts this to a <code>PingInteraction</code>\nAssign the dummy message a flag whether it’s been pinned.\nIndicator of whether the message is pinned.\nGets all channel’s pins.\nRetrieves the list of messages that have been pinned in …\nGets the list of <code>Message</code>s which are pinned to the channel.\nThe placeholder of the select menu.\nSets the placeholder of this input text.\nThe placeholder shown when nothing is selected.\nCustom placeholder text if the input is empty; max 100 …\nCreates an activity that appears as <code>Playing &lt;name&gt;</code>.\nSets the <code>Poll</code> for this message.\nA poll that may be attached to a message.\nA convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nRetrieves the position of the inner <code>GuildChannel</code>.\nSpecify where the channel should be located.\nThe position of the channel in the channel list.\nSet the role’s position in the role list. This …\nThe position of the channel.\nA generally increasing integer (there may be gaps or …\nThe role’s position in the position list. Roles are …\nSet the preferred locale used in Server Discovery and …\nThe preferred locale of this guild only set if guild has …\nThe preferred locale of this guild only set if guild has …\nA set of exports which can be helpful to use.\nWhether the guild’s boost progress bar should be enabled\nWhether the guild has the boost progress bar enabled\nWhether the guild has the boost progress bar enabled\nTimestamp representing the date since the member is …\nTimestamp representing the date since the member is …\nWhether this is the guild’s premium subscriber role.\nThe total number of users currently boosting this server.\nThe total number of users currently boosting this server.\nThe server’s premium boosting level.\nThe server’s premium boosting level.\nThe type of Nitro subscription on a user’s account\nDispatched when a user’s presence is updated (e.g off -&gt; …\nWhen passing true to …\nA mapping of <code>User</code>s’ Ids to their current presences.\nShorthand for checking that the set of permission contains …\nThe privacy level of the scheduled event\nSets the privacy level of the stage instance\nThe privacy level of the Stage instance.\nThe privacy level of the scheduled event.\nConverts from <code>Channel</code> to <code>Option&lt;PrivateChannel&gt;</code>.\nGets all of the intents that are considered privileged by …\nProvider information for the embed.\nA proxied URL of the author icon.\nA proxied URL of the footer icon.\nThe proxy URL.\nA proxied URL of the image.\nA proxied URL of the thumbnail.\nA proxied URL of the thumbnail.\nGets the number of <code>Member</code>s that would be pruned with the …\nRetrieves the count of the number of <code>Member</code>s that would be …\nGets the number of <code>Member</code>s that would be pruned with the …\nThe number of members that would be pruned by the …\nThe public flags on a user’s account\nSet the channel ID where admins and moderators receive …\nThe id of the channel where admins and moderators of …\nThe id of the channel where admins and moderators of …\nPushes a string to the internal message content.\nPushes an inline bold text to the content.\nPushes an inline bold text with an added newline to the …\nPushes an inline bold text with added newline to the …\nPushes an inline bold text to the content normalizing …\nPushes a codeblock to the content, with optional syntax …\nPushes a code-block to your message normalizing content.\nPushes inlined italicized text to the content.\nPushes an inlined italicized text with an added newline to …\nPushes an inline italicized text with added newline to the …\nPushes an inline italicized text to the content …\nPushes the given text with a newline appended to the …\nPushes text with a newline appended to the content …\nPushes inlined monospaced text to the content.\nPushes inlined monospace text with an added newline to the …\nPushes an inline monospaced text with added newline to the …\nPushes an inline monospaced text to the content …\nPushes a named link to a message, intended for use in …\nPushes a named link intended for use in an embed, but with …\nPushes a quoted inline text to the content\nPushes a quoted inline text to the content\nPushes a quoted inline text with added newline to the …\nPushes a quoted inline text to the content normalizing …\nPushes text to your message, but normalizing content - …\nPushes a spoiler’d inline text to the content.\nPushes a spoiler’d inline text with a newline added to …\nPushes a spoiler’d inline text with added newline to the …\nPushes a spoiler’d inline text to the content …\nPushes a strikethrough inline text to the content.\nPushes a strikethrough inline text with a newline added to …\nPushes a strikethrough inline text with added newline to …\nPushes a strikethrough inline text to the content …\nPushes an underlined inline text to the content.\nPushes an underlined inline text with an added newline to …\nPushes an underlined inline text with added newline to the …\nPushes an underlined inline text to the content …\nSets the question to be polled.\nThe shards that are queued for booting.\nSee <code>CreateQuickModal</code>.\nSee <code>CreateQuickModal</code>.\nStarts a multi-line quote, every push after this one will …\nReturns the red RGB component of this Colour.\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nAmount of seconds a user has to wait before sending …\nA rate limit that applies per user and excludes bots.\nDispatched when an HTTP rate limit is hit\nDispatched when any event occurs\nA reference to an <code>RawEventHandler</code>, such as the one given …\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nThe type of reaction.\nThe type of reaction.\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nAdds a list of reactions to create after the message’s …\nAssign the dummy message a list of emojis it was reacted …\nArray of reactions performed on the message.\nShorthand for checking that the set of permissions …\nDispatched upon startup.\nWhat was the reasoning by doing an action on a target? If …\nThe reason given for this ban.\nThe recipient to the private channel.\nSet the reference message this message is a reply to.\nThe message that was replied to using this message.\nRefreshes the information about the user.\nRetrieves the latest information about the webhook, …\nThe number of requests remaining in the period of time.\nThe number of sessions that you can still initiate within …\nTurn this future into a future that yields <code>()</code> on …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThis method removes an existing attachment from the list …\nShorthand for calling <code>Self::attachments</code> with …\nUnbans a user from a guild.\nShorthand for <code>EditAttachments::remove</code>.\nDeletes a single <code>Role</code> from a <code>Member</code> in a <code>Guild</code>.\nRemoves a <code>Role</code> from the member.\nRemoves one or multiple <code>Role</code>s from the member.\nRemoves a member from a thread channel.\nRemoves a thread member, if this channel is a thread.\nThe ids of the users who were removed from the thread.\nRe-orders the channels of the guild.\nRe-orders the channels of the guild.\nRe-orders the channels of the guild.\nMakes the reply mention/ping the user.\nPerforms a request, ratelimiting it if necessary.\nShorthand for checking that the set of permissions …\nRequests or clears a request to speak. Passing <code>true</code> is …\nSets the current bot user’s request to speak timestamp. …\nWhen unsuppressed, non-bot users will have this set to the …\nWhether the emoji name needs to be surrounded by colons in …\nSets if this option is required or optional.\nSets if the input text is required\nWhether the parameter is optional or required.\nWhether this component is required to be filled (defaults …\nThe absolute time in milliseconds when the interval resets.\nThe total time in milliseconds when the interval resets.\nThe number of milliseconds until the ratelimit period …\n“Resets” the current user’s presence, by setting the …\nThe parameters and the given values. The converted objects …\nRestarts a shard runner.\nThe results of the Poll.\nDispatched upon reconnection.\nGateway URL for resuming connections\nWhether this connection has been revoked and is no longer …\nWrap this future in an <code>Either</code> future, making it the …\nCreates a permission overwrite for a specific role\nRetrieves a <code>Guild</code>’s role by their Ids.\nMentions the <code>Role</code> in the built message.\nThe <code>TeamMemberRole</code> of the team member.\nObtain a reference to a role by its name.\nObtain a reference to a role by its name.\nThe application’s role connection verification entry …\nName of the role if type is “role”\nCalculate a <code>Role</code>’s permissions in a given channel in the …\nCalculate a <code>Role</code>’s permissions in a given channel in the …\nData of the role subscription purchase or renewal that …\nThe id of the sku and listing that the user is subscribed …\nRetrieves the full role data for the user’s roles.\nGets all of the guild’s roles over the REST API.\nSets the list of roles that the member should have.\nSets the <em>specific</em> roles that will be allowed mentionable.\nSet the list of roles that the member should have.\nThe resolved roles.\nA list of <code>Role</code>s that are allowed to use the emoji. If …\nVector of Ids of <code>Role</code>s given to the member.\nVector of Ids of <code>Role</code>s given to the member.\nA mapping of the guild’s roles.\nA mapping of the guild’s roles.\nChannel voice region id of the voice or stage channel, …\nThe region override.\nID of the rule which action belongs to.\nSet the channel ID of the rules and guidelines channel.\nThe id of the channel where rules and/or guidelines are …\nThe id of the channel where rules and/or guidelines are …\nThe channel used to communicate with the shard runner, …\nA copy of the map of shard runners.\nThe shard runners currently managed.\nA receiver channel for the shard queuer to be told to …\nSends a message with just the given message content in the …\nSends a message with just the given message content in the …\nSends a message with just the given message content in the …\nFetches a specified scheduled event in the guild, by Id. …\nFetches a specified scheduled event in the guild, by Id. …\nGuild scheduled event data, only included if …\nFetches a list of interested users for the specified event.\nFetches a list of interested users for the specified event.\nFetches a list of interested users for the specified …\nFetches a list of interested users for the specified …\nFetches a list of all scheduled events in the guild. If …\nFetches a list of all scheduled events in the guild. If …\nThe stage instances in this guild.\nSpecify the scopes for your application.\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nSecrets for Rich Presence joining and spectating.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nSends file(s) along with optional message contents.\nSends file(s) along with optional message contents.\nSends file(s) along with optional message contents. The …\nSends a message to the channel.\nSends a message to the channel.\nSends a message to the channel.\nSends a message to a channel.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nWhether or not to notify @everyone that a stage instance …\nSends a message to the shard.\nShorthand for checking that the set of permissions …\nUsed for resuming connections\nInformation describing how many gateway sessions you can …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the current activity.\nSets the user’s current activity, if any.\nOptionally enable/disable autocomplete interactions for …\nFor autocomplete responses this sets their autocomplete …\nOverride all guild application commands.\nOverride all guild application commands.\nOverride all guild application commands.\nOverride all global application commands.\nSets the maximum amount of messages per channel to cache.\nSets all the application command options for the …\nSets the current user’s presence, providing all fields …\nSets the user’s full presence information.\nSets the new sharding information for the manager.\nSets the user’s current online status.\nIf the option is a <code>SubCommandGroup</code> or <code>SubCommand</code>, nested …\nChannels linked in the welcome screen and their display …\nReturns the settings.\nShard information associated with this session, if sent …\nThe messenger to communicate with the shard runner.\nReturns the number of shards.\nCalculates the Id of the shard responsible for a guild, …\nReturns the Id of the shard associated with the guild.\nReturns the Id of the shard associated with the guild.\nReturns the Id of the shard associated with the guild.\nReturns the Id of the shard associated with the guild.\nThe ID of the shard this context is related to.\nThe ID of the shard that had its connection stage change.\nA HashMap of all shards instantiated by the Client.\nDispatched when a shard’s connection stage is updated\nThe number of shards that is recommended to be used by the …\nReturns the <code>ShardId</code>s of the shards that have been …\nDispatched when every shard has received a Ready event\nCreate a cloneable handle to this future where all handles …\nWhether activities related to this connection will be …\nIf set to true, if <code>content_safe</code> replaces a user mention it …\nAttempts to shut down the shard runner by Id.\nSends a shutdown message for all shards that the manager …\nShuts down the websocket by attempting to cleanly close …\nThe size of the file in bytes.\nUsed to show the party’s current and maximum size.\nThe ID of the corresponding SKU.\nThe unique ID given to the pack’s SKU.\nA system-generated URL slug based on the SKU.\nThe ID for a small asset of the activity, usually a …\nText displayed when hovering over the small image of the …\nReturns the name of this event as a snake case string\nA sticker’s sort order within a pack.\nThe channel that this webhook is following (returned for …\nThe guild of the channel that this webhook is following …\nShorthand for checking that the set of permissions …\nThe number of users speaking in the Stage\nThe secret for spectating an activity.\nSet the splash image of the guild on the invitation page.\nThe guild splash hash if it has one.\nAn identifying hash of the guild’s splash icon.\nAn identifying hash of the guild’s splash icon.\nReturns the formatted URL of the guild’s splash image, …\nReturns the formatted URL of the guild’s splash image, …\nReturns the formatted URL of the guild’s splash image, …\nThe current connection stage of the shard.\nThe Stage instance data if there is a public Stage …\nDispatched when a stage instance is created.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is updated.\nThe stage instances in this guild.\nStarts typing in the specified <code>Channel</code> for an indefinite …\nStarts removing some members from a guild based on the …\nStarts an integration sync for the given integration Id.\nStarts an integration sync for the given integration Id.\nStarts an integration sync for the given integration Id.\nStarts syncing an integration with a guild.\nStarts a prune of <code>Member</code>s.\nStarts a prune of <code>Member</code>s.\nStarts a prune of <code>Member</code>s.\nSets the start time of the scheduled event, replacing the …\nSets the start time of the scheduled event.\nThe event’s starting time.\nStarts typing in the channel for an indefinite period of …\nStarts typing in the channel for an indefinite period of …\nStarts typing in the channel for an indefinite period of …\nStarts typing in the specified <code>Channel</code> for an indefinite …\nInstant of when the shard was started.\nStart date after which the entitlement is valid. Not …\nThe user’s current party status.\nThe state of the activity, if the type is …\nReturns a static formatted URL of the user’s icon, if …\nRetrieves the URL to the static version of the user’s …\nSets the status of the scheduled event.\nThe status of a voice channel.\nThe user’s online status.\nThe status of a voice channel when set.\nThe event’s status; either Scheduled, Active, Completed, …\nThe current online status\nReturns the status code if the error is an unsuccessful …\nGets an <code>Sticker</code> of this guild by its ID via HTTP.\nSets a single sticker ID to include in the message.\nSets a list of sticker IDs to include in the message.\nArray of message sticker item objects.\nGets all <code>Sticker</code>s of this guild via HTTP.\nCustom guild stickers.\nAll of the guild’s custom stickers.\nAll of the guild’s custom stickers.\nThe stickers in the pack\nStops typing in <code>Channel</code>.\nStreams over all the messages in a channel.\nStreams over all the members in a guild.\nShorthand for checking that the set of permission contains …\nReturns a <code>Stream</code> over all collected <code>ComponentInteraction</code>.\nReturns a <code>Stream</code> over all collected <code>ModalInteraction</code>.\nReturns a <code>Stream</code> over all collected <code>Reaction</code>.\nReturns a <code>Stream</code> over all collected <code>Message</code>.\nReturns a <code>Stream</code> over all collected <code>Event</code>.\nCreates an activity that appears as <code>Streaming &lt;name&gt;</code>.\nSets the style of this button.\nSets the style of this input text. Replaces the current …\nReturns the style of this <code>FormattedTimestamp</code>.\nThe <code>InputTextStyle</code>. Required when sending modal data.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe id of this role’s subscription sku and listing.\nWhether to suppress the user. Setting this to false will …\nSuppress or unsuppress embeds in the message, this …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhether the user is an Official Discord System user (part …\nModifies the notifications that are sent by discord to the …\nSystem channel flags.\nSystem channel flags.\nSet the channel ID where welcome messages and boost events …\nThe ID of the channel to which system messages are sent.\nThe ID of the channel to which system messages are sent.\nReturns the “tag” for the user.\nThe Discord name of a unicode emoji representing the …\nThe Discord name of a unicode emoji representing the …\nThe tags this role has. It can be used to determine if …\nFor guild stickers, the Discord name of a unicode emoji …\nThe target resolved data of <code>target_id</code>\nEmbedded application to open for this voice channel …\nThe embedded application to open for this voice channel …\nThe ID of the embedded application to open for this …\nThe targeted user or message, if the triggered application …\nDetermines to what entity an <code>Self::action</code> was used on.\nThe type of target for this voice channel invite.\nType of target for this voice channel invite.\nThe type of target for this voice channel invite.\nUser whose stream to display for this voice channel stream …\nThe user whose stream to display for this voice channel …\nThe ID of the user whose stream to display for this …\nThe ID of the team they are a member of.\nWhether an invite grants a temporary membership.\nthey’re assigned a role).\nIndicator of whether the invite self-expires after a …\nSet the footer’s text, replacing the current value as …\nThe associated text with the footer.\nChain on a computation for when a future finished, passing …\nThe thread that was started from this message, includes …\nDispatched when a thread is created or the current user is …\nDispatched when a thread is deleted.\nDispatched when the current user gains access to a channel.\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when anyone is added to or removed from a …\nThe thread metadata.\nThe thread metadata.\nName of thread to create (requires the webhook channel to …\nDispatched when a thread is updated.\nThe threads channels.\nAll active threads in the given channels that the current …\nList of threads referenced in the audit log.\nAll active threads in this guild that current user has …\nSet the thumbnail of the embed. This only supports HTTP(S).\nThumbnail information of the embed.\nThe name of the tier that the user is subscribed to.\nHow long temporarily-cached data should be stored before …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSet the timestamp.\nAssign the dummy message the timestamp it was created at.\nReturns the timestamp of this <code>FormattedTimestamp</code>.\nTimestamp information.\nInitial message creation timestamp, calculated from its Id.\nTimestamp of when the user started typing.\nUnix timestamps for the start and/or end times of the …\nSet the title of the embed.\nThe title of the embed.\nConverts the stored data to the base64 representation.\nFirst attempts to retrieve the channel from the <code>temp_cache</code> …\nFirst attempts to retrieve the channel from the <code>temp_cache</code> …\nAttempts to find a <code>GuildChannel</code> by its Id in the cache.\nAttempts to find a <code>GuildChannel</code> by its Id in the cache.\nTries to find the <code>Guild</code> by its Id in the cache.\nTries to find the <code>Guild</code> by its Id in the cache.\nConverts this <code>TargetId</code> to <code>MessageId</code>.\nRequests <code>PartialGuild</code> over REST API.\nRequests <code>PartialGuild</code> over REST API.\nRequests <code>PartialGuild</code> over REST API with counts.\nRequests <code>PartialGuild</code> over REST API with counts.\nTries to find the <code>Role</code> by its Id in the cache.\nConverts this <code>CommandPermissionId</code> to <code>RoleId</code>.\nRequests the sticker via the REST API to get a <code>Sticker</code> …\nRequests the sticker via the REST API to get a <code>Sticker</code> …\nAttempts to convert this <code>PresenceUser</code> instance into a <code>User</code>.\nFirst attempts to find a <code>User</code> by its Id in the cache, upon …\nAttempts to find a <code>User</code> by its Id in the cache.\nConverts this <code>CommandPermissionId</code> to <code>UserId</code>.\nConverts this <code>TargetId</code> to <code>UserId</code>.\nRequests <code>Webhook</code> over REST API.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nUtilities to parse and validate Discord tokens.\nGets the interaction token.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nThe webhook’s secure token.\nChannel topic (0-1024 characters)\nSets the topic of the stage channel instance, replacing …\nThe topic of the channel. Can be empty.\nSets the topic of the stage channel instance.\nThe topic of the channel.\nThe topic of the stage instance.\nThe topic of the Stage instance (1-120 characters)\nThe total number of session starts within the ratelimit …\nThe number of messages ever sent in a thread, it’s …\nThe cumulative number of months that the user has been …\nSet the type of content which can trigger the rule.\nCharacterizes the type of content which can trigger the …\nTrigger type of rule which was triggered.\nSet whether the message is text-to-speech.\nSet whether the message is text-to-speech.\nSet whether the message is text-to-speech.\nWhether the message is a text-to-speech message.\nAssign the dummy message a flag whether it’ll be read by …\nIndicator of whether the command is to be played back via …\nReturns a tuple of the red, green, and blue components of …\nWhether this connection has a corresponding third party …\nDispatched when a user starts typing.\nWhether this guild is unavailable due to an outage.\nIndicator of whether the guild is unavailable.\nThis method clones and returns all unavailable guilds.\nUnbans the <code>User</code> from the guild.\nUnbans a <code>User</code> from the guild.\nUnbans the given <code>User</code> from the guild.\nUnbans a <code>User</code> from the guild.\nSet the role icon to a unicode emoji.\nRole unicoded image.\nHelper function to allow testing equality of unicode …\nHelper function to allow comparing unicode emojis without …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWhether or not to try to reuse a similar invite.\nTurns a <code>Future&lt;Output = T&gt;</code> into a …\nFetches the number of <code>Member</code>s that have not had data …\nUnpins a <code>Message</code> in the channel given by its Id.\nUnpins a <code>Message</code> in the channel given by its Id.\nUnpins a <code>Message</code> in the channel given by its Id.\nUnpins a message from a channel.\nIf the member is currently flagged for sending excessive …\nIf the member is currently flagged for sending excessive …\nUpdates the cache with the implementation.\nUpdates the cache with the update implementation for an …\nGenerates a URL to the emoji’s image.\nReturns a URL to use for the invite.\nReturns a URL to use for the invite.\nGenerates a URL to the emoji’s image.\nReturns the url of the webhook.\nBuilds an <code>CreateAttachment</code> by downloading attachment data …\nSet the URL to direct to when clicking on the title.\nSet the author’s URL.\nThe URL of the uploaded attachment.\nThe URL of the embed.\nThe URL of the author.\nSource URL of the image.\nThe URL of the provider.\nThe source URL of the thumbnail.\nThe source URL of the video.\nThe gateway to connect to.\nThe Stream URL if <code>Self::kind</code> is <code>ActivityType::Streaming</code>.\nThe url opened when clicking the button.\nThe gateway to connect to.\nThe url used for executing the webhook (returned by the …\nThe url of the activity, if the type is …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nRetrieves the user that made the reaction.\nCreates a permission overwrite for a specific user\nRetrieves a <code>User</code> from the cache’s <code>Self::users</code> map, if it …\nMentions the <code>User</code> in the built message.\nThe <code>user</code> object for the invoking user.\nThe <code>user</code> object for the invoking user.\nThe user who invoked the interaction.\nThe <code>user</code> object for the invoking user.\nThe user type of the team member.\nData about the associated user.\nInformation about the user including email\nThe user who created the emoji.\nAttached User struct.\nAttached User struct.\nThe user that was banned.\nUser that uploaded the sticker. This will be <code>None</code> if the …\nThe user that created the webhook.\nReturns the amount of cached users.\nNumber of users interested in the event.\nThe Id of the <code>User</code> that sent the reaction.\nID of the user.\nThe user that did this action on a target.\nID of the user which generated the content which triggered …\nThe id of the user.\nThe ID of the user that is granted access to the SKU.\nSet how many users may occupy this voice channel\nThe number of users that may be in the channel …\nThe maximum number of members allowed in the channel.\nCalculate a <code>Member</code>’s permissions in a given channel in …\nCalculate a <code>Member</code>’s permissions in a given channel in …\nDispatched when the bot’s data is updated.\nModifies the current user’s username.\nOverride the default username of the webhook.\nRetrieves the list of <code>User</code>s who have reacted to a <code>Message</code> …\nSets the <em>specific</em> users that will be allowed mentionable.\nClones all users and returns them.\nThe resolved users.\nList of users referenced in the audit log.\nHow many times the invite has been used (always will be 0).\nThe amount of times that an invite has been used.\nA set of utilities to help with common use cases that are …\nValidates that a token is likely in a valid format.\nSets the value of this option, replacing the current value …\nSets the value of this input text.\nThe choice value.\nThe given value.\nThe value to be sent for this option.\nWhen sending: Pre-filled value for this component; max …\nThe value of the field.\nRetrieve’s the guild’s vanity URL.\nRetrieve’s the guild’s vanity URL.\nRetrieve’s the guild’s vanity URL.\nThe vanity url code for the guild, if it has one.\nThe vanity url code for the guild, if it has one.\nSet the verification level of the guild. This can restrict …\nIndicator of the current verification level of the guild.\nIndicator of the current verification level of the guild.\nWhether this connection has been verified and the user has …\nWhether the email on this account has been verified\nAn autoincremented version identifier updated during …\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nAPI version\nThe embed’s video information.\nThe camera video quality mode of the voice channel\nThe camera video quality mode of the channel.\nThe video quality mode for a voice channel.\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nShorthand for checking that the set of permissions …\nThe visibility of this connection.\nMove the member into a voice channel.\nDispatched when a voice channel’s status is updated.\nThe voice region of the channel. It is automatic when <code>None</code>.\nDispatched when a guild’s voice server was updated (or …\nDispatched when a user joins, leaves or moves to a voice …\nA mapping of <code>User</code>s to their current voice state.\nCreates an activity that appears as <code>Watching &lt;name&gt;</code>.\nList of bytes representing a sampled waveform (present if …\nAssign the dummy message the webhook author’s ID.\nThe Id of the webhook that sent this message, if one did.\nThe created webhook ID in the target channel\nDispatched when a guild’s webhook is updated.\nRetrieves the channel’s webhooks.\nRetrieves the guild’s webhooks.\nRetrieves the guild’s webhooks.\nRetrieves the channel’s webhooks.\nRetrieves the guild’s webhooks.\nList of webhooks referenced in the audit log.\nSends a raw message over the WebSocket.\nThe channels shown in the welcome screen.\nThe welcome screen of the guild.\nThe welcome screen of the guild.\nThe channel id that the widget will generate an invite to, …\nThe channel id that the widget will generate an invite to, …\nWhether or not the guild widget is enabled.\nWhether or not the guild widget is enabled.\nGet the widget image URL.\nIf the attachment is an image, then the width of the image …\nThe width of the image.\nThe width of the thumbnail in pixels.\nThe width of the video in pixels.\nURL that the client’s shards will use to connect to the …\nA copy of the URL to use to connect to the gateway.\nAdditional explanation that will be shown to members …\nWhich permissions the bot had\nWhich permissions were required for the operation\nWhether the emoji is animated.\nThe Id of the custom <code>Emoji</code>.\nThe name of the custom emoji. This is primarily used for …\nA filter to apply to the returned members.\nThe IDs of the <code>Guild</code> to chunk.\nThe maximum number of members to receive …\nOptional nonce to identify <code>GuildMembersChunkEvent</code> …\nUsed to specify if we want the presences of the matched …\nSubstrings which should not trigger the rule (Maximum of …\nSubstrings which should not trigger the rule (Maximum of …\nTotal number of unique role and user mentions allowed per …\nThe internally pre-defined wordsets which will be searched …\nRegular expression patterns which will be matched against …\nSubstrings which will be searched for in content (Maximum …\nDetermines the action that was done on a target.\nAFK channel was changed.\nAFK timeout duration was changed.\nPermission on a text or voice channel was allowed for a …\nApplication ID of the added or removed webhook or bot.\nThread is now archived/unarchived.\nDiscord docs.\nDiscord docs.\nAuto archive duration of a thread was changed.\nDiscord docs.\nAvailability of a sticker was changed.\nUser avatar was changed.\nGuild banner was changed.\nVoice channel bitrate was changed.\nDiscord docs.\nChannel for invite code or guild scheduled event was …\nDiscord docs.\nInvite code was changed.\nRole color was changed.\nMember timeout state was changed.\nDiscord docs.\nUser was server deafened/undeafened.\nDefault auto archive duration for newly created threads …\nDefault message notification level for a server was …\nPermission on a text or voice channel was denied for a …\nDescription for guild, sticker, or guild scheduled event …\nGuild’s discovery splash was changed.\nDiscord docs.\nIntegration emoticons was enabled/disabled.\nEntity type of guild scheduled event was changed.\nBehavior of the expiration of an integration was changed.\nGrace period of the expiration of an integration was …\nExplicit content filter level of a guild was changed.\nUnknown but sent by discord\nFormat type of a sticker was changed.\nGuild a sticker is in was changed.\nRole is now displayed/no longer displayed separate from …\nGuild icon was changed.\nGuild scheduled event cover image was changed.\nID of the changed entity.\nDiscord docs.\nPrivate thread’s invitable state was changed.\nDiscord docs.\nID of the user who created the invite.\nLocation for a guild scheduled event was changed.\nThread was locked/unlocked.\nHow long invite code lasts was changed.\nMaximum uses of an invite was changed.\nDiscord docs.\nWhether a role can be mentioned in a message was changed.\nDiscord docs.\nMulti-factor authentication requirement was changed.\nUser was server muted/unmuted.\nName of an entity was changed.\nNickname of a member was changed.\nChannel NSFW restriction was changed.\nDiscord docs.\nUnknown key was changed.\nOwner of a guild was changed.\nPartial version of <code>Integration</code>, used in …\nPermissions on a channel were changed.\nPermissions for a role were changed.\nChannel or role position was changed.\nPreferred locale of a guild was changed.\nPrivacy level of the stage instance was changed.\nNumber of days after which inactive and role-unassigned …\nID of the public updates channel was changed.\nRatelimit per user in a text channel was changed.\nRegion of a guild was changed.\nDiscord docs.\nRole was added to a member.\nRole was removed to a member.\nID of the rules channel was changed.\nDiscord docs.\nInvite splash page artwork was changed.\nDiscord docs.\nStatus of guild scheduled event was changed.\nDiscord docs.\nSystem channel settings were changed.\nID of the system channel was changed.\nRelated emoji of a sticker was changed.\nWhether an invite is temporary or never expires was …\nDiscord docs.\nTopic of a text channel or stage instance was changed.\nType of a created entity.\nUnicode emoji of a role icon was changed.\nUnknown key was changed and was invalid\nMaximum number of users in a voice channel was changed.\nNumber of uses of an invite was changed.\nGuild invite vanity url was changed.\nRequired verification level for new members was changed.\nIncomplete documentation\nDiscord docs.\nChannel of the server widget was changed.\nWhether a widget is enabled or not was changed.\nDetermines what action was done on a <code>Self::target_id</code>\nList of application commands referenced in the audit log.\nID of the app whose permissions were targeted.\nName of the Auto Moderation rule that was triggered.\nTrigger type of the Auto Moderation rule that was …\nList of auto moderation rules referenced in the audit log.\nWhat changes were made.\nChannel in which the messages were deleted\nNumber of deleted messages.\nNumber of days after which inactive members were kicked.\nList of audit log entries, sorted from most to least …\nReturns the argument unchanged.\nList of guild scheduled events referenced in the audit log.\nThe id of this entry.\nId of the overwritten entity\nList of partial integration objects.\nCalls <code>U::from(self)</code>.\nType of overwritten entity (“member” or “role”).\nNumber of members removed by the prune\nMessage that was pinned or unpinned.\nSome optional data associated with this entry.\nWhat was the reasoning by doing an action on a target? If …\nName of the role if type is “role”\nThe status of a voice channel when set.\nDetermines to what entity an <code>Self::action</code> was used on.\nList of threads referenced in the audit log.\nThe user that did this action on a target.\nList of users referenced in the audit log.\nList of webhooks referenced in the audit log.\nAn action which will execute whenever a rule is triggered.\nGateway event payload sent when a rule is triggered and an …\nSee <code>Action</code>\nLogs user content to a specified channel.\nBlocks the content of a message according to the rule.\nIndicates in what event context a rule should be checked.\nInternally pre-defined wordsets which will be searched for …\nWords that may be considered forms of swearing or cursing\nConfigured auto moderation rule.\nWords that refer to sexually explicit behavior or activity\nPersonal insults or words that may be considered hate …\nTimeout user for a specified duration.\nCharacterizes the type of content which can trigger the …\nIndividual change for trigger metadata within an audit log …\nType of <code>Trigger</code>.\nVariant value is unknown.\nAction which was executed.\nActions which will execute when the rule is triggered.\nID of any system auto moderation messages posted as a …\nID of the channel in which user content was posted.\nUser generated text content.\nID of the user which created the rule.\nWhether the rule is enabled.\nEvent context in which the rule should be checked.\nChannels that should not be affected by the rule.\nRoles that should not be affected by the rule.\nID of the guild this rule belongs to.\nID of the guild in which the action was executed.\nID of the rule.\nSubstring in content that triggered the rule.\nWord or phrase configured in the rule that triggered the …\nID of any user message which content belongs to.\nName of the rule.\nID of the rule which action belongs to.\nCharacterizes the type of content which can trigger the …\nTrigger type of rule which was triggered.\nID of the user which generated the content which triggered …\nAdditional explanation that will be shown to members …\nSubstrings which should not trigger the rule (Maximum of …\nSubstrings which should not trigger the rule (Maximum of …\nTotal number of unique role and user mentions allowed per …\nThe internally pre-defined wordsets which will be searched …\nRegular expression patterns which will be matched against …\nSubstrings which will be searched for in content (Maximum …\nOnly valid for component-based interactions (seems to work …\nA builder to add parameters when using <code>GuildId::add_member</code>.\nOnly valid for autocomplete interactions.\nCommon trait for all HTTP request builders in this module.\nAdditional data that’s only required when sending a …\nA builder for creating a components action row in a …\nA builder to manage the allowed mentions on a message, …\nEnum that allows a user to pass a <code>Path</code> or a <code>File</code> type to …\nDiscord docs\nA builder for constructing an invite link with custom …\nA builder for creating a button component in a message\nA builder for creating a new <code>GuildChannel</code> in a <code>Guild</code>.\nA builder for creating a new <code>Command</code>.\nA builder for creating a new <code>CommandOption</code>.\nA builder for creating an <code>CommandPermission</code>.\nA builder to create an embed in a message\nA builder to create the author data of an emebd. See …\nA builder to create the footer data for an embed. See …\nDiscord docs.\nDiscord docs\nA builder for creating a <code>GuildWelcomeChannel</code>.\nA builder for creating an input text component in a modal\nDiscord docs.\nDiscord docs\nDiscord docs.\nA builder to create a <code>RichInvite</code> for use via …\nA builder to specify the contents of an send message …\nDiscord docs.\nDiscord docs\nA builder for creating a select menu component in a message\nDiscord docs.\nA builder for creating an option of a select menu …\nBuilder for creating a stage instance\nA builder to create a guild sticker\nDiscord docs:\nDiscord docs\nAcknowledges the interaction in order to edit a response …\nYou can add new attachments and edit existing ones using …\nA builder for creating or editing guild AutoMod rules.\nA builder to edit a <code>GuildChannel</code> for use via …\nA builder for creating several <code>CommandPermission</code>.\nA builder to optionally edit certain fields of a guild\nA builder to edit the welcome screen of a guild\nA builder to specify the fields to edit in a <code>GuildWidget</code>.\nDiscord docs\nA builder which edits the properties of a <code>Member</code>, to be …\nA builder to specify the fields to edit in an existing …\nA builder to edit the current user’s settings, to be …\nA builder to create or edit a <code>Role</code> for use via a number of …\nDiscord docs\nEdits a <code>StageInstance</code>.\nA builder to create or edit a <code>Sticker</code> for use via a number …\nDiscord docs.\nA builder which edits a user’s voice state, to be used …\nDiscord docs\nA builder to specify the fields to edit in an existing …\nA builder to create the content for a <code>Webhook</code>’s …\nBuilds a request to the API to retrieve messages.\nOnly valid in modals!\nResponds to an interaction with a message.\nNot valid for Modal and Ping interactions\nAcknowledges a Ping (only required when your bot uses an …\nNot valid for autocomplete and Ping interactions. Only …\nOnly valid for component-based interactions.\nSerializes a builder’s fields and sends the request off …\nA cache containing data received from <code>Shard</code>s.\nTrait used for updating the cache with a type.\nThe return type of an update.\nSettings for the cache.\nWhether to cache channel data received from gateway.\nWhether to cache guild data received from gateway.\nWhether to cache user data received from gateway.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe maximum number of messages to store in a channel’s …\nHow long temporarily-cached data should be stored before …\nUpdates the cache with the implementation.\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was updated.\nA cache containing data received from <code>Shard</code>s.\nDispatched when the cache has received and inserted all …\nDispatched when a category is created.\nDispatched when a category is deleted.\nDispatched when a channel is created.\nDispatched when a channel is deleted.\nDispatched when a pin is added, deleted.\nDispatched when a channel is updated.\nThe Client is the way to be able to start sending …\nA builder implementing <code>IntoFuture</code> building a <code>Client</code> to …\nAn error returned from the <code>Client</code>.\nDispatched when the permissions of an application command …\nThe context is a general utility struct provided on event …\nDispatched when a user subscribes to a SKU.\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been updated, …\nThe core trait for handling events by serenity.\nThis enum stores every possible event that an <code>EventHandler</code> …\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nDispatched when the emojis are updated.\nDispatched when a guild’s integration is added, updated …\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when the data for offline members was requested.\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is updated.\nDispatched when an interaction is created (e.g a slash …\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nDispatched when a message is created.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a message is updated.\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when an HTTP rate limit is hit\nThis core trait for handling raw events\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched upon startup.\nDispatched upon reconnection.\nWhen a shard has completely failed to reboot after resume …\nDispatched when a shard’s connection stage is updated\nDispatched when every shard has received a Ready event\nWhen all shards that the client is responsible for have …\nDispatched when a stage instance is created.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is updated.\nDispatched when a thread is created or the current user is …\nDispatched when a thread is deleted.\nDispatched when the current user gains access to a channel.\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when anyone is added to or removed from a …\nDispatched when a thread is updated.\nDispatched when a user starts typing.\nDispatched when the bot’s data is updated.\nDispatched when a voice channel’s status is updated.\nDispatched when a guild’s voice server was updated (or …\nDispatched when a user joins, leaves or moves to a voice …\nDispatched when a guild’s webhook is updated.\nSets the initial activity.\nSets the application id.\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was updated.\nThe cache for the client.\nDispatched when the cache has received and inserted all …\nSets the settings of the cache. Refer to <code>Settings</code> for more …\nDispatched when a category is created.\nDispatched when a category is deleted.\nDispatched when a channel is created.\nDispatched when a channel is deleted.\nDispatched when a pin is added, deleted.\nDispatched when a channel is updated.\nDispatched when the permissions of an application command …\nA TypeMap which requires types to be Send + Sync. This is …\nA clone of <code>Client::data</code>. Refer to its documentation for …\nDispatched when a user subscribes to a SKU.\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been updated, …\nAdds an event handler with multiple methods for each …\nAdds an event handler with multiple methods for each …\nSets the command framework to be used. It will receive …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the application ID, if already initialized. See …\nGets the cache settings. See <code>Self::cache_settings</code> for more …\nGets the added event handlers. See <code>Self::event_handler</code> for …\nGets the framework, if already initialized. See …\nGets the intents. See <code>Self::intents</code> for more info.\nGets the initial presence. See <code>Self::activity</code> and …\nGets the added raw event handlers. See …\nGets the current token used for the <code>Http</code> client.\nGets the type map. See <code>Self::type_map</code> for more info.\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nDispatched when the emojis are updated.\nDispatched when a guild’s integration is added, updated …\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when the data for offline members was requested.\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nAn HTTP client.\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is updated.\nSets all intents directly, replacing already set intents. …\nDispatched when an interaction is created (e.g a slash …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nDispatched when a message is created.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nDispatched when a message is updated.\nConstruct a new builder to call methods on for the client …\nConstruct a new builder with a <code>Http</code> instance to calls …\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when an HTTP rate limit is hit\nDispatched when any event occurs\nAdds an event handler with a single method where all …\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched upon startup.\nDispatched upon reconnection.\nThe messenger to communicate with the shard runner.")